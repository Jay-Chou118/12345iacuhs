package com.example.testcdc.Utils;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

import com.example.testcdc.MyApplication;
import com.example.testcdc.R;
import com.example.testcdc.entity.CarTypeEntity;
import com.example.testcdc.entity.MsgInfoEntity;
import com.example.testcdc.entity.SdbEntity;
import com.example.testcdc.entity.SignalInfo;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

public class DataBaseUtil {

    private static final String TAG="MICAN_DataBaseUtil";

    public static boolean checkDataBase(Context context,String dbName) {
        SQLiteDatabase db = null;
        String databaseFilePath = context.getDatabasePath(dbName).getPath();
        try {
            db = SQLiteDatabase.openDatabase(databaseFilePath, null,SQLiteDatabase.OPEN_READONLY);
        }catch (Exception e)
        {
            Log.e(TAG,e.toString());
        }finally {
            if(db != null)
            {
                db.close();
            }
        }

        return db != null;
    }


    public static void copyDataBase(Context context,String dbName){
        String databaseFilePath = context.getDatabasePath(dbName).getPath();
        FileOutputStream os = null;// 得到数据库文件的写入流
        InputStream is = null;
        byte[] buffer = new byte[8192];
        int count = 0;
        try {
            os = new FileOutputStream(databaseFilePath);
            is = context.getResources().openRawResource(R.raw.mx11_e4);// 得到数据库文件的数据流
            while ((count = is.read(buffer)) > 0) {
                os.write(buffer, 0, count);
                os.flush();
            }
            is.close();
            os.close();
            Log.i(TAG,"初始化数据库文件成功");
        } catch (Exception e) {
            Log.e(TAG,e.toString());
        }
    }

    public static void initData_6()
    {
        List<SignalInfo> signalInfos = new ArrayList<>();
        signalInfos.add(new SignalInfo("LonAccrSigGrpChks",6,0x1a9,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("LonAccrSigGrpCntr",6,0x1a9,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("LonAccr",6,0x1a9,false,false,23,16,0.0002,-5.0,"Longititude Acceleration\n纵向加速度"));
        signalInfos.add(new SignalInfo("LonSnsrSt",6,0x1a9,false,false,33,2,1,0,"Longititude Sensor State\n纵向加速度有效性"));
        signalInfos.add(new SignalInfo("IMUCalSt",6,0x1a9,false,false,63,1,1,0,"IMUCalibrationSt\nIMU标定状态"));
        signalInfos.add(new SignalInfo("LatAccrYawRateSigGrpChks",6,0x1aa,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("LatAccrYawRateSigGrpCntr",6,0x1aa,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("LatAccr",6,0x1aa,false,false,23,16,0.0002,-5.0,"Lateral Acceleration\n横向加速度"));
        signalInfos.add(new SignalInfo("YawRate",6,0x1aa,false,false,39,16,0.01,-300.0,"Yaw Rate\n横摆角速度"));
        signalInfos.add(new SignalInfo("YawRateSnsrSt",6,0x1aa,false,false,51,2,1,0,"Yaw Rate Sensor State\n横摆角速度有效性"));
        signalInfos.add(new SignalInfo("LatAccrSt",6,0x1aa,false,false,49,2,1,0,"Lateral Sensor State\n横向加速度有效性"));
        signalInfos.add(new SignalInfo("ACUFaultInfoFlag",6,0x2ea,false,false,0,1,1,0,"ACU Fault Information Flag"));
        signalInfos.add(new SignalInfo("ACUWarnLampStsSigGrpChks",6,0x350,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("ACUWarnLampStsSigGrpCntr",6,0x350,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("ACUWarnLampSts",6,0x350,false,false,17,2,1,0,"Airbag Warning Lamp Status \nACU故障灯信号"));
        signalInfos.add(new SignalInfo("SecRowMidBucSts",6,0x350,false,false,39,2,1,0,"Second Row Middle Buckle Status\n第二排中安全带状态"));
        signalInfos.add(new SignalInfo("SecRowLeBucSts",6,0x350,false,false,37,2,1,0,"Second Row Left Buckle Status\n第二排左安全带状态"));
        signalInfos.add(new SignalInfo("PassBucSts",6,0x350,false,false,35,2,1,0,"Passenger Buckle Status\n副驾安全带状态"));
        signalInfos.add(new SignalInfo("DrvrBucSts",6,0x350,false,false,33,2,1,0,"Driver Buckle Status \n主驾驶安全带扣状态"));
        signalInfos.add(new SignalInfo("PassAirbDiIndcr",6,0x350,false,false,42,1,1,0,"Passenger airbag disable indicator\n副驾安全气囊禁用状态指示"));
        signalInfos.add(new SignalInfo("SecRowRiBucSts",6,0x350,false,false,41,2,1,0,"Second Row Right Buckle Status\n第二排右安全带状态"));
        signalInfos.add(new SignalInfo("ImpctEvntStsSigGrpChks",6,0x351,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntStsSigGrpCntr",6,0x351,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntSts",6,0x351,false,false,16,1,1,0,"Impact Event Status\n 碰撞事件状态"));
        signalInfos.add(new SignalInfo("ImpctEvntTypeSigGrpChks",6,0x351,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntTypeSigGrpCntr",6,0x351,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntType1",6,0x351,false,false,55,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType2",6,0x351,false,false,54,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType3",6,0x351,false,false,53,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType4",6,0x351,false,false,52,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType5",6,0x351,false,false,51,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType6",6,0x351,false,false,50,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType7",6,0x351,false,false,49,1,1,0,"Impact Event Type\n碰撞事件类型"));
        signalInfos.add(new SignalInfo("ACUNodeAddress",6,0x562,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("ACUActiveWakeup",6,0x562,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("ACURepeatMsgReq",6,0x562,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23ACU",6,0x562,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22ACU",6,0x562,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21ACU",6,0x562,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20ACU",6,0x562,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19ACU",6,0x562,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18ACU",6,0x562,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17ACU",6,0x562,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("ACURepeatMsgSt",6,0x562,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31ACU",6,0x562,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30ACU",6,0x562,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29ACU",6,0x562,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28ACU",6,0x562,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27ACU",6,0x562,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26ACU",6,0x562,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25ACU",6,0x562,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24ACU",6,0x562,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39ACU",6,0x562,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38ACU",6,0x562,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37ACU",6,0x562,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36ACU",6,0x562,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35ACU",6,0x562,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34ACU",6,0x562,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33ACU",6,0x562,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32ACU",6,0x562,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47ACU",6,0x562,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46ACU",6,0x562,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45ACU",6,0x562,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44ACU",6,0x562,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43ACU",6,0x562,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42ACU",6,0x562,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41ACU",6,0x562,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40ACU",6,0x562,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnACU",6,0x562,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("ACUToVCCDBodyCanDiagResp",6,0x7f9,false,false,7,64,1,0,"ACUToVCCDBodyCanDiagRespNpdu"));
        signalInfos.add(new SignalInfo("ACUToVCCDDiagResp",6,0x673,false,false,7,64,1,0,"ACUToVCCDBodyCanDiagRespNpdu"));
        signalInfos.add(new SignalInfo("BattIRawSigGrpChks",6,0x232,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BattIRawSigGrpCntr",6,0x232,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BattIRaw",6,0x232,false,false,23,21,0.001,-1000.0,"Battery I raw\nBMDM电池电流"));
        signalInfos.add(new SignalInfo("BattSnsrGenlFltRawSigGrpChks",6,0x232,false,false,47,8,1,0,""));
        signalInfos.add(new SignalInfo("BattSnsrGenlFltRawSigGrpCntr",6,0x232,false,false,51,4,1,0,""));
        signalInfos.add(new SignalInfo("BattSnsrGenlFltRaw",6,0x232,false,false,63,4,1,0,"battery sensor general fault Raw\n电池管理器一般性断开故障"));
        signalInfos.add(new SignalInfo("BattSnsrHwFltRawSigGrpChks",6,0x242,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BattSnsrHwFltRawSigGrpCntr",6,0x242,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BattSnsrHwFltRaw",6,0x242,false,false,20,5,1,0,"battery sensor hardware fault Raw\n电池管理器硬件故障"));
        signalInfos.add(new SignalInfo("BattCpEstimdRaw",6,0x242,false,false,31,6,1,0,"battery capacity Estimated RAW\n电池容量估计值"));
        signalInfos.add(new SignalInfo("BattTRawSigGrpChks",6,0x242,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("BattTRawSigGrpCntr",6,0x242,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("BattTRaw",6,0x242,false,false,55,9,0.5,-128.0,"Battery temperature raw\n电池温度"));
        signalInfos.add(new SignalInfo("BattURawSigGrpChks",6,0x243,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BattURawSigGrpCntr",6,0x243,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BattURaw",6,0x243,false,false,23,15,0.001,0.0,"Battery Voltage raw\n电池电压"));
        signalInfos.add(new SignalInfo("BattSocRawSigGrpChks",6,0x243,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("BattSocRawSigGrpCntr",6,0x243,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("BattSocRaw",6,0x243,false,false,49,10,0.1,0.0,"Battery State of charge raw\n电池SOC"));
        signalInfos.add(new SignalInfo("BattSohSigGrpChks",6,0x245,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BattSohSigGrpCntr",6,0x245,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BattSoh",6,0x245,false,false,23,10,0.1,0.0,"Battery State of health\n电池SOH"));
        signalInfos.add(new SignalInfo("LVBattMosDrvFlt",6,0x245,false,false,39,4,1,0,"Low Voltage Battery Mosfet Drive Fault \n低压电池Mos粘连故障"));
        signalInfos.add(new SignalInfo("LVBattMosStuckFlt",6,0x245,false,false,35,4,1,0,"Low Voltage Battery Mosfet Stuck Fault \n低压电池Mos卡滞故障"));
        signalInfos.add(new SignalInfo("BMDMAcvDcnMosSt",6,0x245,false,false,47,2,1,0,"BMDM active disconnect Mosfet State\nBMDM主动断电Mos状态"));
        signalInfos.add(new SignalInfo("WakUpMem",6,0x2e4,false,false,6,1,1,0,"wake up memory\n唤醒标志位"));
        signalInfos.add(new SignalInfo("LvBattDCDCSts",6,0x2e4,false,false,5,1,1,0,"low voltage battery DCDC status\n低压电池DCDC状态"));
        signalInfos.add(new SignalInfo("LVcellbalSts",6,0x2e4,false,false,4,4,1,0,"low voltage cell voltage balance state\n低压电池电芯均衡状态"));
        signalInfos.add(new SignalInfo("BattRRaw",6,0x2e4,false,false,15,8,0.1,0.0,"battery resistance raw\n当前SOC和温度下的电池内阻"));
        signalInfos.add(new SignalInfo("BattSnsrGenlWarnRawSigGrpChks",6,0x2e4,false,false,23,8,1,0,""));
        signalInfos.add(new SignalInfo("BattSnsrGenlWarnRaw",6,0x2e4,false,false,31,4,1,0,"battery sensor general warning Raw\n电池管理器一般性警示故障"));
        signalInfos.add(new SignalInfo("BattSnsrGenlWarnRawSigGrpCntr",6,0x2e4,false,false,27,4,1,0,""));
        signalInfos.add(new SignalInfo("BattTiInSrvRaw",6,0x2e4,false,false,39,12,1,0,"Battery time in service raw\n电池服务年限"));
        signalInfos.add(new SignalInfo("LVBattMosAdhFlt",6,0x2e4,false,false,43,4,1,0,"Low Voltage Battery Mosfet Adhesion Fault\n低压电池Mos粘连故障"));
        signalInfos.add(new SignalInfo("LvMaxIAvlSho",6,0x2e4,false,false,55,12,0.5,0.0,"low voltage Max Current available低压电池最大可用电流-瞬时"));
        signalInfos.add(new SignalInfo("BattRlySts",6,0x2e4,false,false,59,4,1,0,"battery relay status\n电池继电器状态"));
        signalInfos.add(new SignalInfo("BMDMSocCalTisTot",6,0x2f9,false,false,7,12,1,0,"BMDM SOC Calibration times total\nBMDM SOC校准总次数"));
        signalInfos.add(new SignalInfo("BMDMSocCalTiSncLst",6,0x2f9,false,false,23,8,1,0,"BMDM SOC Calibration Time since last\nBMDM SOC距离上次校准过去的时间"));
        signalInfos.add(new SignalInfo("BMDMSocCalMod",6,0x2f9,false,false,31,3,1,0,"BMDM SOC Calibration Mode\nBMDM SOC上次发生校准的方式"));
        signalInfos.add(new SignalInfo("BMDMFaultInfoFlag",6,0x2f9,false,false,28,1,1,0,"BMDM Fault Information Flag"));
        signalInfos.add(new SignalInfo("QuiscCurMeasTiDurgPrkg",6,0x362,false,false,7,17,1,0,"quiescent Current Measure time during Parking\n停车状态下的静态电流测量时间"));
        signalInfos.add(new SignalInfo("BattQuiscAvgFildShoRaw",6,0x362,false,false,22,15,1.0,-20000.0,"Battery Quiescent average filtered short raw\n短时静态电流平均值"));
        signalInfos.add(new SignalInfo("BattQuiscAvgFildLongRaw",6,0x362,false,false,39,11,1.0,-1024.0,"Battery Quiescent average filtered long raw\n长时静态电流平均值"));
        signalInfos.add(new SignalInfo("BattTAtCell1",6,0x362,false,false,44,9,0.5,-128.0,"battery temperature at the cell level 4 measurements \n电池单体1温度"));
        signalInfos.add(new SignalInfo("BattTAtCell2",6,0x362,false,false,48,9,0.5,-128.0,"battery temperature at the cell level 4 measurements \n电池单体2温度"));
        signalInfos.add(new SignalInfo("BattCycDchaCntrDurgwakRaw",6,0x366,false,false,7,16,0.05,0.0,"Battery cycle Discharge counter During wake Raw\n额定温度车辆Awake状态下电池放电量"));
        signalInfos.add(new SignalInfo("BattCycDchaCntrDurgQuiscPhaRaw",6,0x366,false,false,23,18,0.005,0.0,"Battery cycle Discharge counter During Quiescent Phase raw\n静态电流阶段放电量"));
        signalInfos.add(new SignalInfo("BattQuiscAvgRaw",6,0x366,false,false,34,11,1.0,-2000.0,"Battery Quiescent average raw\n当前静态电流平均值"));
        signalInfos.add(new SignalInfo("ShoQuiscCurMeasTiDurgPrkg",6,0x366,false,false,55,15,1,0,"quiescent Current Measure during Parking\n停车状态下的静态电流测量值Ah"));
        signalInfos.add(new SignalInfo("BattUAtCell1",6,0x367,false,false,7,16,0.001,0.0,"battery voltage at the cell level 4 measurements \n电池单体电压"));
        signalInfos.add(new SignalInfo("BattUAtCell2",6,0x367,false,false,23,16,0.001,0.0,"battery voltage at the cell level 4 measurements \n电池单体电压"));
        signalInfos.add(new SignalInfo("BattUAtCell3",6,0x367,false,false,39,16,0.001,0.0,"battery voltage at the cell level 4 measurements \n电池单体电压"));
        signalInfos.add(new SignalInfo("BattUAtCell4",6,0x367,false,false,55,16,0.001,0.0,"battery voltage at the cell level 4 measurements \n电池单体电压"));
        signalInfos.add(new SignalInfo("BattChrgBalDurgRunRaw",6,0x368,false,false,7,16,0.05,0.0,"Battery cycle charge balance during running raw\n驾驶过程中电池充电量"));
        signalInfos.add(new SignalInfo("BattChrgBalDurgWakRaw",6,0x368,false,false,23,16,0.05,0.0,"Battery cycle charge balance during awake raw\nawake过程中电池充电量"));
        signalInfos.add(new SignalInfo("BattCycDchaCntrDurgRunngRaw",6,0x368,false,false,47,14,0.05,0.0,"Battery cycle Discharge counter  During running Raw\n额定温度车辆running/ACC状态下电池放电量"));
        signalInfos.add(new SignalInfo("BMDMNodeAddress",6,0x56c,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("BMDMActiveWakeup",6,0x56c,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("BMDMRepeatMsgReq",6,0x56c,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23BMDM",6,0x56c,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22BMDM",6,0x56c,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21BMDM",6,0x56c,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20BMDM",6,0x56c,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19BMDM",6,0x56c,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18BMDM",6,0x56c,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17BMDM",6,0x56c,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("BMDMRepeatMsgSt",6,0x56c,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31BMDM",6,0x56c,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30BMDM",6,0x56c,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29BMDM",6,0x56c,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28BMDM",6,0x56c,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27BMDM",6,0x56c,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26BMDM",6,0x56c,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25BMDM",6,0x56c,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24BMDM",6,0x56c,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39BMDM",6,0x56c,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38BMDM",6,0x56c,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37BMDM",6,0x56c,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36BMDM",6,0x56c,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35BMDM",6,0x56c,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34BMDM",6,0x56c,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33BMDM",6,0x56c,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32BMDM",6,0x56c,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47BMDM",6,0x56c,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46BMDM",6,0x56c,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45BMDM",6,0x56c,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44BMDM",6,0x56c,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43BMDM",6,0x56c,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42BMDM",6,0x56c,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41BMDM",6,0x56c,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40BMDM",6,0x56c,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnBMDM",6,0x56c,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("BMDMToVCCDDiagResp",6,0x678,false,false,7,64,1,0,"BMDMToVCCDBodyCanDiagRespNpdu"));
        signalInfos.add(new SignalInfo("DCDCSigGrpChks",6,0x132,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("DCDCSigGrpCntr",6,0x132,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("DCDCCurAvlMaxLV",6,0x132,false,false,23,11,0.5,0.0,"available maximal current at DCDC Lv side considering DCDC status  positive means current flows from DCDC to LV"));
        signalInfos.add(new SignalInfo("DCDCFltLvlIndcn",6,0x132,false,false,28,3,1,0,"DCDC fault level indication."));
        signalInfos.add(new SignalInfo("DCDCModSts",6,0x132,false,false,39,4,1,0,"DCDC mode status."));
        signalInfos.add(new SignalInfo("VehDrvDirctSigGrpChks",6,0x100,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("VehDrvDirctSigGrpCntr",6,0x100,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("VehDrvDirct",6,0x100,false,false,23,2,1,0,"vehicle drive direction\n车辆行驶方向"));
        signalInfos.add(new SignalInfo("VCUAccAnaPtsRaw",6,0x100,false,false,31,15,0.004,0.0,"Accelerator pedal position sensor raw value.\n加速踏板百分比Raw值"));
        signalInfos.add(new SignalInfo("VCUAccrPedlRatGrdt",6,0x100,false,true,47,15,0.0625,0.0,"加速油门踏板开度变化率"));
        signalInfos.add(new SignalInfo("VcuInpSigGrpChks",6,0x11e,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("VCURgnTqCorrnFac",6,0x11e,false,false,15,4,0.1,0.0,"Regeneration Torque Correction Factor"));
        signalInfos.add(new SignalInfo("VcuInpSigGrpCntr",6,0x11e,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUStsModCst",6,0x11e,false,false,23,8,1,0,"energy recuperation end mode.\n能量回收状态模式"));
        signalInfos.add(new SignalInfo("VCUAccrPedlRat",6,0x11e,false,false,31,15,0.004,0.0,"加速油门踏板开度"));
        signalInfos.add(new SignalInfo("VCUPrkgBtnPsd",6,0x11e,false,false,32,1,1,0,"驾驶员按下P档"));
        signalInfos.add(new SignalInfo("VCUVirtAccrPedl",6,0x11e,false,false,47,7,1,0,"虚拟油门开度 当前模式的pedal map反算"));
        signalInfos.add(new SignalInfo("VCUTarGearLvrVld",6,0x11e,false,false,40,1,1,0,"目标档位有效位"));
        signalInfos.add(new SignalInfo("VCUAccrPedlRatVld",6,0x11e,false,false,55,1,1,0,"加速踏板有效性"));
        signalInfos.add(new SignalInfo("VCUFrntEmTqRdy",6,0x11e,false,false,54,1,1,0,"The Front Motor  can be ready to response chassis torque request.\n前电机可以响应扭矩请求."));
        signalInfos.add(new SignalInfo("VCUReEmTqRdy",6,0x11e,false,false,53,1,1,0,"Rear EM is ready to response chassis Torque Request\n后电机是否处于Ready状态"));
        signalInfos.add(new SignalInfo("VCUTarGearLvr",6,0x11e,false,false,52,3,1,0,"目标档位  P R N D挡位"));
        signalInfos.add(new SignalInfo("VCUVirtAccrPedlVld",6,0x11e,false,false,49,1,1,0,"虚拟油门开度有效位"));
        signalInfos.add(new SignalInfo("VCUShifterMoveFlg",6,0x11e,false,false,48,1,1,0,"驾驶员拨动了换挡杆的标志位"));
        signalInfos.add(new SignalInfo("VCUDrvOffFcnLim",6,0x11e,false,false,63,1,1,0,"VCU send to BCS to identify whether vehcile can drive off or not as powertrain has fault and power limited.\nVCU发送给BCS系统,用于判断整车动力系统是否存在故障动力受限不能起步的判断"));
        signalInfos.add(new SignalInfo("ChrgUReq",6,0x1a4,false,false,15,16,0.001,0.0,"充电电压请求"));
        signalInfos.add(new SignalInfo("IntelgntChrgReq",6,0x1a4,false,false,30,2,1,0,"battery Intelligent charging request\n智能充电请求"));
        signalInfos.add(new SignalInfo("EgyAvlDelta",6,0x1a4,false,false,27,12,0.01,0.0,"可用电池容量"));
        signalInfos.add(new SignalInfo("BattSocFild",6,0x1a4,false,false,47,10,0.1,0.0,"过滤后的SOC"));
        signalInfos.add(new SignalInfo("ChrgnUReqMax",6,0x237,false,false,7,12,0.01,0.0,"charge voltage request Maximum\n允许的最大充电电压"));
        signalInfos.add(new SignalInfo("BattSnsrStReq",6,0x237,false,false,11,2,1,0,"Battery sensor state set request\n电池管理器状态设置请求"));
        signalInfos.add(new SignalInfo("ChrgModReq",6,0x237,false,false,9,2,1,0,"charge mode request\n充电模式需求"));
        signalInfos.add(new SignalInfo("BattFltAfctCrk",6,0x237,false,false,23,1,1,0,"1"));
        signalInfos.add(new SignalInfo("DCDCOutpBreak",6,0x237,false,false,22,1,1,0,"DCDC Output Break\nDCDC输出中断"));
        signalInfos.add(new SignalInfo("LVPwrSplyErrSOCLoRmd",6,0x237,false,false,21,1,1,0,"Low voltage power supply error soc low remind\n低压供电错误低电量提醒"));
        signalInfos.add(new SignalInfo("LvMaxIAvlToDCDC",6,0x237,false,false,19,12,0.5,0.0,"Low voltage Maximum current available to DCDC 低压最大可给DCDC使用的电流"));
        signalInfos.add(new SignalInfo("TarSOC",6,0x237,false,false,39,7,1.0,0.0,"target SOC\n目标SOC"));
        signalInfos.add(new SignalInfo("BattSnsrHwFltFild",6,0x237,false,false,32,1,1,0,"battery sensor hardware fault Field\n过滤的电池管理器硬件故障"));
        signalInfos.add(new SignalInfo("PwrAlvDelta",6,0x237,false,false,47,13,1,-200,"power available delta\n可用能量"));
        signalInfos.add(new SignalInfo("ULoWarn",6,0x237,false,false,50,2,1,0,"voltage Low warning\n欠压报警"));
        signalInfos.add(new SignalInfo("StsOfIndcr",6,0x237,false,false,63,3,1,0,"转向状态指示"));
        signalInfos.add(new SignalInfo("SwtIndcr",6,0x237,false,false,60,3,1,0,"转向拨杆信号"));
        signalInfos.add(new SignalInfo("SysURaw",6,0x238,false,false,55,12,0.01,0.0,"System Voltage raw\n负载端电压"));
        signalInfos.add(new SignalInfo("BattSnsrComFlt",6,0x238,false,false,59,1,1,0,"battery sensor communication fault\n电池管理器通讯故障"));
        signalInfos.add(new SignalInfo("AmbTEstimdVld",6,0x2f5,false,false,5,1,1,0,"Estimated ambient temperature valid value."));
        signalInfos.add(new SignalInfo("IntelgntChrgPollingLogl",6,0x2f5,false,false,1,2,1,0,"Intelligent charge polling logic\n智能补电轮询逻辑"));
        signalInfos.add(new SignalInfo("AmbTEstimd",6,0x2f5,false,false,15,16,0.01,-80.0,"Estimated ambient temperature."));
        signalInfos.add(new SignalInfo("VehSysFltWarnSigGrpChks",6,0x2f7,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("VCUHVSysFltWarnSts",6,0x2f7,false,false,15,4,1,0,"高压系统故障 分等级"));
        signalInfos.add(new SignalInfo("VehSysFltWarnSigGrpCntr",6,0x2f7,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUGearChgFailInde",6,0x2f7,false,false,23,4,1,0,"换挡失败提醒"));
        signalInfos.add(new SignalInfo("VCULoSocWarngMsg",6,0x2f7,false,false,19,2,1.0,0.0,"高压电池低电量报警\nHV Battery low SOC warnning"));
        signalInfos.add(new SignalInfo("VCUBattOverHeatWarn",6,0x2f7,false,false,17,1,1,0,"电池过温时 仪表点亮电池过温报警灯"));
        signalInfos.add(new SignalInfo("VCUDrvMotFltWarn",6,0x2f7,false,false,16,1,1,0,"当驱动电机发生故障时 仪表点亮驱动电机故障灯"));
        signalInfos.add(new SignalInfo("VCUDrvMotOverHeatWarn",6,0x2f7,false,false,31,1,1,0,"驱动电机过热报警"));
        signalInfos.add(new SignalInfo("VCUDrvSysLimdWarn",6,0x2f7,false,false,30,1,1,0,"VCU发送点亮跛行故障灯信号 仪表点灯"));
        signalInfos.add(new SignalInfo("VCUHvBattSysFltIndcr",6,0x2f7,false,false,29,1,1,0,"动力电池故障报警灯 低级"));
        signalInfos.add(new SignalInfo("VCUHvBattSysFltWarn",6,0x2f7,false,false,28,1,1,0,"动力电池故障报警灯 严重"));
        signalInfos.add(new SignalInfo("VCUHvPwrSysCutOff",6,0x2f7,false,false,27,1,1,0,"VCU发送动力系统切断故障telltale"));
        signalInfos.add(new SignalInfo("VCUPrpsnPwrDrt",6,0x2f7,false,false,26,1,1,0,"VCU发送动力性能降级故障 仪表进行文字显示和声音提醒"));
        signalInfos.add(new SignalInfo("VCUThermRunawayErrAlrm",6,0x2f7,false,false,25,1,1,0,"热失控报警"));
        signalInfos.add(new SignalInfo("VCUVehSysFltWarn",6,0x2f7,false,false,24,1,1,0,"VCU发送点亮整车系统故障灯信号 仪表点灯"));
        signalInfos.add(new SignalInfo("PwrModSigGrpChks",6,0x90,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("PwrModSigGrpCntr",6,0x90,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("PwrModSts",6,0x90,false,false,23,3,1,0,"PowerMode Status"));
        signalInfos.add(new SignalInfo("PwrModVld",6,0x90,false,false,20,1,1,0,"PowerMode Validty"));
        signalInfos.add(new SignalInfo("VCUActGearSigGrpChks",6,0x90,false,false,47,8,1,0,""));
        signalInfos.add(new SignalInfo("VCUActGearLvr",6,0x90,false,false,55,3,1,0,"Actual gear level 车辆实际档位\nP R N D挡位"));
        signalInfos.add(new SignalInfo("VCUActGearLvrVld",6,0x90,false,false,52,1,1,0,"车辆实际档位有效位"));
        signalInfos.add(new SignalInfo("VCUActGearSigGrpCntr",6,0x90,false,false,51,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUPtRdyFlg",6,0x90,false,false,63,1,1,0,"驾驶使能"));
        signalInfos.add(new SignalInfo("CarModSts",6,0x90,false,false,62,3,1,0,"CarMode状态信号"));
        signalInfos.add(new SignalInfo("VCUActDrvMod",6,0x90,false,false,59,4,1,0,"VCU actual drive mode \nVCU实际驾驶模式"));
        signalInfos.add(new SignalInfo("UDB23FZCU",6,0x565,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22FZCU",6,0x565,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21FZCU",6,0x565,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20FZCU",6,0x565,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19FZCU",6,0x565,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18FZCU",6,0x565,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17FZCU",6,0x565,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB31FZCU",6,0x565,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30FZCU",6,0x565,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29FZCU",6,0x565,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28FZCU",6,0x565,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27FZCU",6,0x565,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26FZCU",6,0x565,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25FZCU",6,0x565,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24FZCU",6,0x565,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39FZCU",6,0x565,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38FZCU",6,0x565,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37FZCU",6,0x565,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36FZCU",6,0x565,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35FZCU",6,0x565,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34FZCU",6,0x565,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33FZCU",6,0x565,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32FZCU",6,0x565,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47FZCU",6,0x565,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46FZCU",6,0x565,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45FZCU",6,0x565,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44FZCU",6,0x565,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43FZCU",6,0x565,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42FZCU",6,0x565,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41FZCU",6,0x565,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40FZCU",6,0x565,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnFZCU",6,0x565,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("TiDomn",6,0x107,false,false,4,5,1,0,"time domain"));
        signalInfos.add(new SignalInfo("DateTiYr",6,0x107,false,false,15,8,1.0,2000.0,"date time year"));
        signalInfos.add(new SignalInfo("DateTiMth",6,0x107,false,false,19,4,1.0,0.0,"date time month"));
        signalInfos.add(new SignalInfo("DateTiDay",6,0x107,false,false,28,5,1,0,"date time day"));
        signalInfos.add(new SignalInfo("DateTiHr",6,0x107,false,false,36,5,1.0,0.0,"date time hour"));
        signalInfos.add(new SignalInfo("DateTiMins",6,0x107,false,false,45,6,1.0,0.0,"date time minute"));
        signalInfos.add(new SignalInfo("DateTiSec",6,0x107,false,false,55,6,1.0,0.0,"date time second"));
        signalInfos.add(new SignalInfo("DateTiMilsec",6,0x107,false,false,49,10,1.0,0.0,"date time millisecond"));
        signalInfos.add(new SignalInfo("OTAMode",6,0x230,false,false,6,1,1,0,"OTA模式"));
        signalInfos.add(new SignalInfo("DCDAirBagLampFailSts",6,0x353,false,false,7,1,1,0,"DCD AirBagLamp failure state"));
        signalInfos.add(new SignalInfo("TotOdoAcrt",6,0x392,false,false,7,24,0.1,0.0,"ODO"));
        signalInfos.add(new SignalInfo("TotOdoAcrtLvlMVld",6,0x392,false,false,27,1,1,0,"Total odometer accurate for meter level valid\n米级精确总里程有效性"));
        signalInfos.add(new SignalInfo("TotOdoAcrtVld",6,0x392,false,false,25,1,1,0,"The valid signal of TotOdoAcrt"));
        signalInfos.add(new SignalInfo("XCDbkdHvBattStrtAllwd",6,0x392,false,false,24,1,1,0,"Arriving HV batter book heating time flag\n到达电池预热时间使能标志位"));
        signalInfos.add(new SignalInfo("TotOdoAcrtLvlM",6,0x392,false,false,39,32,1.0,0.0,"Total odometer accurate for meter level\n米级精确总里程\n其中，有效范围：0x0~0x?3B9AC9FF?，表示0~999,999,999"));
        signalInfos.add(new SignalInfo("PassSideAirbClsSet",6,0x3a5,false,false,19,2,1,0,"passenger side airbag close Set\n副驾安全气囊关闭设定"));
        signalInfos.add(new SignalInfo("VinVINBlkID",6,0x3e3,false,false,7,8,1,0,"Block ID for VIN Signal sequence"));
        signalInfos.add(new SignalInfo("VinVINSignalPos1",6,0x3e3,false,false,15,8,1,0,"1st position in VIN Signal    Block ID dependant"));
        signalInfos.add(new SignalInfo("VinVINSignalPos2",6,0x3e3,false,false,23,8,1,0,"2nd position in VIN Signal   Block ID dependant"));
        signalInfos.add(new SignalInfo("VinVINSignalPos3",6,0x3e3,false,false,31,8,1,0,"3rd position in VIN Signal   Block ID dependant"));
        signalInfos.add(new SignalInfo("VinVINSignalPos4",6,0x3e3,false,false,39,8,1,0,"4th position in VIN Signal   Block ID dependant"));
        signalInfos.add(new SignalInfo("VinVINSignalPos5",6,0x3e3,false,false,47,8,1,0,"5th position in VIN Signal   Block ID dependant"));
        signalInfos.add(new SignalInfo("VinVINSignalPos6",6,0x3e3,false,false,55,8,1,0,"6th position in VIN Signal   Block ID dependant"));
        signalInfos.add(new SignalInfo("VinVINSignalPos7",6,0x3e3,false,false,63,8,1,0,"7th position in VIN Signal   Block ID dependant"));
        signalInfos.add(new SignalInfo("VidBlkId",6,0x3e6,false,false,7,8,1,0,"Block ID for VID Signal sequence"));
        signalInfos.add(new SignalInfo("VidSignalPos1",6,0x3e6,false,false,15,8,1,0,"1st position in VID Signal - Block ID dependant"));
        signalInfos.add(new SignalInfo("VidSignalPos2",6,0x3e6,false,false,23,8,1,0,"2st position in VID Signal - Block ID dependant"));
        signalInfos.add(new SignalInfo("VidSignalPos3",6,0x3e6,false,false,31,8,1,0,"3st position in VID Signal - Block ID dependant"));
        signalInfos.add(new SignalInfo("VidSignalPos4",6,0x3e6,false,false,39,8,1,0,"4st position in VID Signal - Block ID dependant"));
        signalInfos.add(new SignalInfo("VidSignalPos5",6,0x3e6,false,false,47,8,1,0,"5st position in VID Signal - Block ID dependant"));
        signalInfos.add(new SignalInfo("VidSignalPos6",6,0x3e6,false,false,55,8,1,0,"6st position in VID Signal - Block ID dependant"));
        signalInfos.add(new SignalInfo("VidSignalPos7",6,0x3e6,false,false,63,8,1,0,"7st position in VID Signal - Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmBlkIDBytePosn1",6,0x87,false,false,7,8,1,0,"Block ID for specific Car Configuration parameter sequence"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn2",6,0x87,false,false,15,8,1,0,"1st position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn3",6,0x87,false,false,23,8,1,0,"2nd position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn4",6,0x87,false,false,31,8,1,0,"3rd position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn5",6,0x87,false,false,39,8,1,0,"4th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn6",6,0x87,false,false,47,8,1,0,"5th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn7",6,0x87,false,false,55,8,1,0,"6th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn8",6,0x87,false,false,63,8,1,0,"7th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("BcpBrkSysIndcnBkpSigGrpChks",6,0x104,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BrkSysBrkPedlAppld",6,0x104,false,false,15,1,1,0,"Indicates whether the driver operates the\nbrakepedal.Only active when the driver brakes"));
        signalInfos.add(new SignalInfo("BrkSysBrkPedlAppldVld",6,0x104,false,false,14,2,1,0,"Qualifier for brake system brake pedal applied signal"));
        signalInfos.add(new SignalInfo("BrkSysEnaActvCtrlByDrvr",6,0x104,false,false,12,1,1,0,"Indicate if the BCP pressure control is dominated by driver"));
        signalInfos.add(new SignalInfo("BcpBrkSysIndcnBkpSigGrpCntr",6,0x104,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BrkSysPRednPotnl",6,0x104,false,false,23,8,0.5,0.0,"Indicates the pressure reduction potential from BCP to BCS  to limit the max CRB brakeregen."));
        signalInfos.add(new SignalInfo("BrkSysFTarDrvr",6,0x104,false,false,31,11,64,-131008,"Target brake force from driver"));
        signalInfos.add(new SignalInfo("BrkSysFTarDrvrVld",6,0x104,false,false,36,2,1,0,"Qualifier for Target brake force from driver signal"));
        signalInfos.add(new SignalInfo("BrkSysPRednPotnlVld",6,0x104,false,false,34,2,1,0,"Qualifier for pressure reduction potential signal"));
        signalInfos.add(new SignalInfo("BrkSysWarnLampReq",6,0x104,false,false,47,2,1,0,"Indicatethewarninglampinfothatshouldbeset"));
        signalInfos.add(new SignalInfo("VehSpd",6,0x106,false,false,7,16,0.05625,0.0,"Vehicle speed"));
        signalInfos.add(new SignalInfo("VehSpdVld",6,0x106,false,false,23,1,1,0,"Qualifier for vehicle speed signal"));
        signalInfos.add(new SignalInfo("PinionSteerAgl",6,0x10b,false,true,23,15,0.0625,0.0,"方向盘转角\nSteering Wheel Angle\n方向 \nAnticlockwise direction of steering wheel increase angle output.\nClockwise direction of steering wheel decrease angle output."));
        signalInfos.add(new SignalInfo("PinionSteerAglVld",6,0x10b,false,false,43,1,1,0,"方向盘转角有效位\nSteering Wheel Angle Valid Flag"));
        signalInfos.add(new SignalInfo("ABSActv",6,0x169,false,false,23,1,1,0,"ABS Control Active"));
        signalInfos.add(new SignalInfo("ABSErrDetd",6,0x169,false,false,22,1,1,0,"ABS error detected"));
        signalInfos.add(new SignalInfo("APBTxtDip",6,0x169,false,false,21,4,1,0,"APB Text Display"));
        signalInfos.add(new SignalInfo("HBBSts",6,0x169,false,false,17,2,1,0,"HBB function status"));
        signalInfos.add(new SignalInfo("BCSBrkSysWarnText",6,0x169,false,false,31,3,1,0,"BCS Brake System Warning Text"));
        signalInfos.add(new SignalInfo("BrkLiIllmnReq",6,0x169,false,false,28,1,1,0,"Request to illuminate brake light"));
        signalInfos.add(new SignalInfo("BrkSysWarnLamp",6,0x169,false,false,27,2,1,0,"Brake System Warning Lamp"));
        signalInfos.add(new SignalInfo("CSTSts",6,0x169,false,false,25,2,1,0,"CST function status"));
        signalInfos.add(new SignalInfo("EBDActv",6,0x169,false,false,39,1,1,0,"EBD Control Active"));
        signalInfos.add(new SignalInfo("EBDErrDetd",6,0x169,false,false,38,1,1,0,"EBD error detected"));
        signalInfos.add(new SignalInfo("EmgyBrkLiReq",6,0x169,false,false,37,1,1,0,"Emergency brake light request"));
        signalInfos.add(new SignalInfo("ESCErrDetd",6,0x169,false,false,36,1,1,0,"ESC error detected"));
        signalInfos.add(new SignalInfo("ESCIntvLamp",6,0x169,false,false,35,1,1,0,"ESC Intervention Lamp"));
        signalInfos.add(new SignalInfo("ESCPataLamp",6,0x169,false,false,34,2,1,0,"ESC diable status"));
        signalInfos.add(new SignalInfo("APBStsBkp",6,0x169,false,false,47,3,1,0,"BCP&BCS APB Status"));
        signalInfos.add(new SignalInfo("HDCCtrlSts",6,0x169,false,false,44,2,1,0,"HDC function control status"));
        signalInfos.add(new SignalInfo("HDCAvl",6,0x169,false,false,42,1,1,0,"HDC function available"));
        signalInfos.add(new SignalInfo("APBErrDetd",6,0x169,false,false,41,2,1,0,"APB Error Status"));
        signalInfos.add(new SignalInfo("HRBActv",6,0x169,false,false,55,1,1,0,"HRB available"));
        signalInfos.add(new SignalInfo("HRBAvl",6,0x169,false,false,54,1,1,0,"HRB active"));
        signalInfos.add(new SignalInfo("HydBrkFExist",6,0x169,false,false,53,1,1,0,"Hydraulic brake force exsit"));
        signalInfos.add(new SignalInfo("TCSActv",6,0x169,false,false,51,1,1,0,"TCS Controller Active"));
        signalInfos.add(new SignalInfo("VDCActv",6,0x169,false,false,50,1,1,0,"VDC Controller Active"));
        signalInfos.add(new SignalInfo("VehStandStillIndcr",6,0x169,false,false,49,1,1,0,"Indicate whether the vehicle is standstill or not"));
        signalInfos.add(new SignalInfo("VehStandStillIndcrVld",6,0x169,false,false,48,1,1,0,"Qualifier for vehicle standstill indicate signal"));
        signalInfos.add(new SignalInfo("APBSts",6,0x169,false,false,63,3,1,0,"APB Status"));
        signalInfos.add(new SignalInfo("WhlspdBkpFcnSigGrpChks",6,0x171,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("VehSpdBkpVld",6,0x171,false,false,15,1,1,0,"Qualifierforvehiclespeedsignalbackup"));
        signalInfos.add(new SignalInfo("WhlspdBkpFcnSigGrpCntr",6,0x171,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("VehSpdBkp",6,0x171,false,false,23,16,0.05625,0.0,"Vehiclespeedbackup"));
        signalInfos.add(new SignalInfo("BrkPedlAppld",6,0x171,false,false,47,1,1,0,"Indicates whether the driver operates the\n brake pedal. Only active when the driver brakes"));
        signalInfos.add(new SignalInfo("BrkPedlAppldVld",6,0x171,false,false,46,2,1,0,"Qualifier for brake pedal applied signal"));
        signalInfos.add(new SignalInfo("BrkPedlPerct",6,0x171,false,false,55,7,1,0,"Brake Pedal Percentage"));
        signalInfos.add(new SignalInfo("BrkPedlPerctVld",6,0x171,false,false,48,1,1,0,"Qualifier for Brake Pedal Percentage signal"));
        signalInfos.add(new SignalInfo("FailrStsSigGrpChks",6,0x1a5,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("FailrSts",6,0x1a5,false,false,15,3,1,0,"EPS 故障状态\nEPS Failure Status"));
        signalInfos.add(new SignalInfo("FailrStsSigGrpCntr",6,0x1a5,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BcsExtdFcnSigGrpChks",6,0x1a5,false,false,31,8,1,0,""));
        signalInfos.add(new SignalInfo("ABPActv",6,0x1a5,false,false,39,1,1,0,"ABP active"));
        signalInfos.add(new SignalInfo("ABPAvl",6,0x1a5,false,false,38,1,1,0,"ABP available"));
        signalInfos.add(new SignalInfo("AEBActv",6,0x1a5,false,false,37,1,1,0,"AEB active"));
        signalInfos.add(new SignalInfo("AEBAvl",6,0x1a5,false,false,36,1,1,0,"AEB available"));
        signalInfos.add(new SignalInfo("BcsExtdFcnSigGrpCntr",6,0x1a5,false,false,35,4,1,0,""));
        signalInfos.add(new SignalInfo("AWBActv",6,0x1a5,false,false,47,1,1,0,"AWB active"));
        signalInfos.add(new SignalInfo("AWBAvl",6,0x1a5,false,false,46,1,1,0,"AWB available"));
        signalInfos.add(new SignalInfo("EBAActv",6,0x1a5,false,false,45,1,1,0,"EBA active"));
        signalInfos.add(new SignalInfo("AEBtoIDPFrmADDChks",6,0x231,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("AEBTarObjClassFrmADD",6,0x231,false,false,47,2,1,0,"AEB target object classification"));
        signalInfos.add(new SignalInfo("AEBtoIDPFrmADDCntr",6,0x231,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("AEBTarObjTTIFrmADD",6,0x231,false,false,55,8,0.02,0.0,"AEB  target object time to impact"));
        signalInfos.add(new SignalInfo("ADSAEBStsFrmADD",6,0x231,false,false,60,3,1,0,"AEB function status"));
        signalInfos.add(new SignalInfo("SwtLiHzrdWarn",6,0x231,false,false,57,1,1,0,"双闪开关"));
        signalInfos.add(new SignalInfo("DrvFcn1FrmADDSigGrpChks",6,0x234,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("DrvFltStsFrmADD",6,0x234,false,false,15,3,1,0,"Autonomous Driving system Fault status"));
        signalInfos.add(new SignalInfo("DrvFltStsVldFrmADD",6,0x234,false,false,12,1,1,0,"Autonomous Driving system Fault status Valid"));
        signalInfos.add(new SignalInfo("DrvFcn1FrmADDSigGrpCntr",6,0x234,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("ADSACCStsFrmADD",6,0x234,false,false,23,3,1,0,"ACC状态 \n激活状态为 Normal ACtive StandActive StandWait Override Takeover"));
        signalInfos.add(new SignalInfo("ReLeTyrePVal",6,0x332,false,false,7,8,2.75,0.0,"RearLeftTyrePressureValue"));
        signalInfos.add(new SignalInfo("ReRiTyrePVal",6,0x332,false,false,15,8,2.75,0.0,"RearRightTyrePressureValue"));
        signalInfos.add(new SignalInfo("ReLeTyrePWarn",6,0x332,false,false,23,2,1,0,"RearLeftTyrePressureWarning"));
        signalInfos.add(new SignalInfo("ReRiTyrePWarn",6,0x332,false,false,21,2,1,0,"RearRightTyrePressureWarning"));
        signalInfos.add(new SignalInfo("FrntLeTyrePWarn",6,0x332,false,false,19,2,1,0,"FrontLeftTyrePressureWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyrePWarn",6,0x332,false,false,17,2,1,0,"FrontRightTyrePressureWarning"));
        signalInfos.add(new SignalInfo("FrntLeTyrePVal",6,0x332,false,false,31,8,2.75,0.0,"FrontLeftTyrePressureValue"));
        signalInfos.add(new SignalInfo("FrntRiTyrePVal",6,0x332,false,false,39,8,2.75,0.0,"FrontRightTyrePressureValue"));
        signalInfos.add(new SignalInfo("FrntLeTyrePSnsrLoBattWarn",6,0x332,false,false,47,1,1,0,"FrontLeftTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("FrntLeTyrePSnsrLostWarn",6,0x332,false,false,46,1,1,0,"FrontLeftTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyrePSnsrLoBattWarn",6,0x332,false,false,45,1,1,0,"FrontRightTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyrePSnsrLostWarn",6,0x332,false,false,44,1,1,0,"FrontRightTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("ReLeTyrePSnsrLoBattWarn",6,0x332,false,false,43,1,1,0,"RearLeftTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("ReLeTyrePSnsrLostWarn",6,0x332,false,false,42,1,1,0,"RearLeftTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("ReRiTyrePSnsrLoBattWarn",6,0x332,false,false,41,1,1,0,"RearRightTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("ReRiTyrePSnsrLostWarn",6,0x332,false,false,40,1,1,0,"RearRightTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("VCCDBdCanNodeAddress",6,0x560,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("VCCDBdCanActiveWakeup",6,0x560,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("VCCDBdCanRepeatMsgReq",6,0x560,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23VCCD",6,0x560,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22VCCD",6,0x560,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21VCCD",6,0x560,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20VCCD",6,0x560,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19VCCD",6,0x560,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18VCCD",6,0x560,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17VCCD",6,0x560,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("VCCDBdCanRepeatMsgSt",6,0x560,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31VCCD",6,0x560,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30VCCD",6,0x560,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29VCCD",6,0x560,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28VCCD",6,0x560,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27VCCD",6,0x560,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26VCCD",6,0x560,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25VCCD",6,0x560,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24VCCD",6,0x560,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39VCCD",6,0x560,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38VCCD",6,0x560,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37VCCD",6,0x560,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36VCCD",6,0x560,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35VCCD",6,0x560,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34VCCD",6,0x560,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33VCCD",6,0x560,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32VCCD",6,0x560,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47VCCD",6,0x560,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46VCCD",6,0x560,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45VCCD",6,0x560,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44VCCD",6,0x560,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43VCCD",6,0x560,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42VCCD",6,0x560,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41VCCD",6,0x560,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40VCCD",6,0x560,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB53VCCD",6,0x560,false,false,53,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB52VCCD",6,0x560,false,false,52,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB51VCCD",6,0x560,false,false,51,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB50VCCD",6,0x560,false,false,50,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB49VCCD",6,0x560,false,false,49,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnVCCD",6,0x560,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("VCCDToACUBodyCanDiagReq",6,0x7f1,false,false,7,64,1,0,"VCCDToACUBodyCanDiagReqNpdu"));
        signalInfos.add(new SignalInfo("VCCDToACUDiagReq",6,0x773,false,false,7,64,1,0,"VCCDToACUBodyCanDiagReqNpdu"));
        signalInfos.add(new SignalInfo("VCCDToACUCanFuncDiagReq",6,0x7df,false,false,7,64,1,0,"VCCDToACUCanFuncDiagReqNpdu"));
        signalInfos.add(new SignalInfo("VCCDToBMDMDiagReq",6,0x778,false,false,7,64,1,0,"VCCDToBMDMBodyCanDiagReqNpdu"));
        signalInfos.add(new SignalInfo("XCDToBodyFuncDiagReq",6,0x7ff,false,false,7,64,1,0,"VCCDToBodyCanFuncDiagReqNpdu"));
        for(SignalInfo signalInfo:signalInfos)
        {
            MyApplication.getInstance().getMx11E4Database().signalInfoDao().insert(signalInfo);
        }
    }

    public static void initData_2()
    {
        List<SignalInfo> signalInfos = new ArrayList<>();
        signalInfos.add(new SignalInfo("LonAccrSigGrpChks",2,0x1a9,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("LonAccrSigGrpCntr",2,0x1a9,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("LonAccr",2,0x1a9,false,false,23,16,0.0002,-5.0,"Longititude Acceleration\n纵向加速度"));
        signalInfos.add(new SignalInfo("LonSnsrSt",2,0x1a9,false,false,33,2,1,0,"Longititude Sensor State\n纵向加速度有效性"));
        signalInfos.add(new SignalInfo("IMUCalSt",2,0x1a9,false,false,63,1,1,0,"IMUCalibrationSt\nIMU标定状态"));
        signalInfos.add(new SignalInfo("LatAccrYawRateSigGrpChks",2,0x1aa,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("LatAccrYawRateSigGrpCntr",2,0x1aa,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("LatAccr",2,0x1aa,false,false,23,16,0.0002,-5.0,"Lateral Acceleration\n横向加速度"));
        signalInfos.add(new SignalInfo("YawRate",2,0x1aa,false,false,39,16,0.01,-300.0,"Yaw Rate\n横摆角速度"));
        signalInfos.add(new SignalInfo("YawRateSnsrSt",2,0x1aa,false,false,51,2,1,0,"Yaw Rate Sensor State\n横摆角速度有效性"));
        signalInfos.add(new SignalInfo("LatAccrSt",2,0x1aa,false,false,49,2,1,0,"Lateral Sensor State\n横向加速度有效性"));
        signalInfos.add(new SignalInfo("ACUWarnLampStsSigGrpChks",2,0x350,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("ACUWarnLampStsSigGrpCntr",2,0x350,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("ACUWarnLampSts",2,0x350,false,false,17,2,1,0,"Airbag Warning Lamp Status \nACU故障灯信号"));
        signalInfos.add(new SignalInfo("SecRowMidBucSts",2,0x350,false,false,39,2,1,0,"Second Row Middle Buckle Status\n第二排中安全带状态"));
        signalInfos.add(new SignalInfo("SecRowLeBucSts",2,0x350,false,false,37,2,1,0,"Second Row Left Buckle Status\n第二排左安全带状态"));
        signalInfos.add(new SignalInfo("PassBucSts",2,0x350,false,false,35,2,1,0,"Passenger Buckle Status\n副驾安全带状态"));
        signalInfos.add(new SignalInfo("DrvrBucSts",2,0x350,false,false,33,2,1,0,"Driver Buckle Status \n主驾驶安全带扣状态"));
        signalInfos.add(new SignalInfo("PassAirbDiIndcr",2,0x350,false,false,42,1,1,0,"Passenger airbag disable indicator\n副驾安全气囊禁用状态指示"));
        signalInfos.add(new SignalInfo("SecRowRiBucSts",2,0x350,false,false,41,2,1,0,"Second Row Right Buckle Status\n第二排右安全带状态"));
        signalInfos.add(new SignalInfo("ImpctEvntStsSigGrpChks",2,0x351,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntStsSigGrpCntr",2,0x351,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntSts",2,0x351,false,false,16,1,1,0,"Impact Event Status\n 碰撞事件状态"));
        signalInfos.add(new SignalInfo("ImpctEvntTypeSigGrpChks",2,0x351,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntTypeSigGrpCntr",2,0x351,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("ImpctEvntType1",2,0x351,false,false,55,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType2",2,0x351,false,false,54,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType3",2,0x351,false,false,53,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType4",2,0x351,false,false,52,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType5",2,0x351,false,false,51,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType6",2,0x351,false,false,50,1,1,0,"Impact Event Type\n  碰撞事件类型"));
        signalInfos.add(new SignalInfo("ImpctEvntType7",2,0x351,false,false,49,1,1,0,"Impact Event Type\n碰撞事件类型"));
        signalInfos.add(new SignalInfo("PASBrkFrmADDSigGrpChks",2,0x155,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("PASBrkFcnModMainFrmADD",2,0x155,false,false,15,3,1,0,"Indicate APA or RPA Backup"));
        signalInfos.add(new SignalInfo("PASReqAccCtrlEnaMainFrmADD",2,0x155,false,false,12,1,1,0,"PAS request target acc deceleration control valid Backup"));
        signalInfos.add(new SignalInfo("PASBrkFrmADDSigGrpCntr",2,0x155,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("PASVlcTarAccFromPASMainFrmADD",2,0x155,false,false,23,12,0.01,-10.0,"VLC target acc/deceleration from PAS Backup"));
        signalInfos.add(new SignalInfo("PASReqBrkPrfeMainFrmADD",2,0x155,false,false,27,1,1,0,"PAS request Brake Preferred Backup"));
        signalInfos.add(new SignalInfo("PASUpprLimForAccrCmftMainFrmADD",2,0x155,false,false,39,8,0.01,0.0,"upper limit for acceleration comfort zone Backup"));
        signalInfos.add(new SignalInfo("PASLoLimForAccrCmftMainFrmADD",2,0x155,false,false,47,8,0.01,0.0,"low limit for acceleration comfort zone Backup"));
        signalInfos.add(new SignalInfo("PASRemaDstMainFrmADD",2,0x155,false,false,55,12,1,0,"Remaining Distance Backup"));
        signalInfos.add(new SignalInfo("PASMinAllwdJerkOfAccrMainFrmADD",2,0x155,false,false,71,8,0.1,0.0,"the minimum allowd jerk of the target acceleration Backup"));
        signalInfos.add(new SignalInfo("PASReqDrvOffMainFrmADD",2,0x155,false,false,79,1,1,0,"PAS request ESP CDD S  drive off Backup"));
        signalInfos.add(new SignalInfo("PASReqDclUtiStslMainFrmADD",2,0x155,false,false,78,1,1,0,"PAS request ESP VLC to decelerate untill standstill Backup"));
        signalInfos.add(new SignalInfo("PASEmgyBrkReqMainFrmADD",2,0x155,false,false,77,1,1,0,"Emergency Brake Request Backup"));
        signalInfos.add(new SignalInfo("PASShdModReqMainFrmADD",2,0x155,false,false,75,2,1,0,"the shutdown mode request to ESC VLC Backup"));
        signalInfos.add(new SignalInfo("ParkAPBReqMainFrmADD",2,0x155,false,false,73,2,1,0,"Parking APB request"));
        signalInfos.add(new SignalInfo("PASMaxAllwdJerkOfAccrMainFrmADD",2,0x155,false,false,87,8,0.1,0.0,"the maximum allowed jerk of the target acceleration"));
        signalInfos.add(new SignalInfo("HPPAVPSteerReqSigGrpChks",2,0x155,false,false,103,8,1,0,""));
        signalInfos.add(new SignalInfo("HPPAVPSteerReqSigGrpCntr",2,0x155,false,false,107,4,1,0,""));
        signalInfos.add(new SignalInfo("HPPAVPSteerWhlAglReqVal",2,0x155,false,true,119,15,0.0625,0.0,"HPP AVP  Steering Wheel Angle Request Value"));
        signalInfos.add(new SignalInfo("HPPAVPRecoverIndCtrl",2,0x155,false,false,135,2,1,0,"HPP AVP recovery interrupt indication"));
        signalInfos.add(new SignalInfo("HPPAVPSteerWhlCtrlReqSts",2,0x155,false,false,133,2,1,0,"HPP AVP Steering Wheel Control Request Status"));
        signalInfos.add(new SignalInfo("ParkSteerWhlAngReqSigGrpChks",2,0x155,false,false,175,8,1,0,""));
        signalInfos.add(new SignalInfo("ParkSteerWhlAngReqSigGrpCntr",2,0x155,false,false,179,4,1,0,""));
        signalInfos.add(new SignalInfo("ParkRecoverIndCtrlFrmADD",2,0x155,false,false,188,2,1,0,"Parking recovery interrupt indication"));
        signalInfos.add(new SignalInfo("ParkEPSLateralCtrlTypeFrmADD",2,0x155,false,false,186,3,1,0,"The type of lateral control  Which contain  APA RPA HPP AVP"));
        signalInfos.add(new SignalInfo("ParkSteerWhlAglReqValFrmADD",2,0x155,false,true,199,15,0.0625,0.0,"Parking  Steering Wheel Angle Request Value"));
        signalInfos.add(new SignalInfo("ParkSteerWhlCtrlReqStsFrmADD",2,0x155,false,false,214,2,1,0,"Parking Steering Wheel Control Request Status"));
        signalInfos.add(new SignalInfo("GroundAdhereConf",2,0x1e3,false,false,7,7,1,0,"Ground Adhesion Config\n地面附着物置信度"));
        signalInfos.add(new SignalInfo("GroundLayingConf",2,0x1e3,false,false,15,7,1,0,"Ground Laying Config\n地面材质置信度"));
        signalInfos.add(new SignalInfo("GroundAdhereType",2,0x1e3,false,false,23,3,1,0,"Ground Adhesion Type\n地面附着力类型"));
        signalInfos.add(new SignalInfo("GroundLayingType",2,0x1e3,false,false,20,3,1,0,"Ground Laying Type\n地面材质类型"));
        signalInfos.add(new SignalInfo("ADSwtStsSigGrpChks",2,0x301,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("ADSwtStsSigGrpCntr",2,0x301,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("ADSAESESSSwtFbFrmADD",2,0x301,false,false,23,2,1,0,"AES_ESS switch feedback"));
        signalInfos.add(new SignalInfo("ADSAudModSwtStsFrmADD",2,0x301,false,false,21,3,1,0,"ADS Audio Switch Status"));
        signalInfos.add(new SignalInfo("ADSBSDLCASwtFbFrmADD",2,0x301,false,false,18,3,1,0,"BSD_LCA switch feedback"));
        signalInfos.add(new SignalInfo("ADSParkAudModSwtStsFrmADD",2,0x301,false,false,29,3,1,0,"ADS Parking Audio Switch Status"));
        signalInfos.add(new SignalInfo("ADSELKSwtFbFrmADD",2,0x301,false,false,26,3,1.0,0.0,"ELK switch Feedback"));
        signalInfos.add(new SignalInfo("ADSLDWPSwtFbFrmADD",2,0x301,false,false,36,3,1.0,0.0,"LDW and LDP switch Feedback"));
        signalInfos.add(new SignalInfo("ADSRCTABSwtFbFrmADD",2,0x301,false,false,46,3,1,0,"RCTA_RCTB switch feedback"));
        signalInfos.add(new SignalInfo("ADSRCWSwtFbFrmADD",2,0x301,false,false,41,2,1,0,"RCW switch feedback"));
        signalInfos.add(new SignalInfo("ALCSwtStsFrmADD",2,0x301,false,false,55,3,1,0,"拨杆变道开关反馈信号"));
        signalInfos.add(new SignalInfo("LaneChgCnfmSwtStsFrmADD",2,0x301,false,false,52,2,1,0,"Lane Change Confirm Switch Status"));
        signalInfos.add(new SignalInfo("LowPwrSwtFbFrmADD",2,0x301,false,false,50,3,1,0,"Low power mode switch feedback"));
        signalInfos.add(new SignalInfo("LowPwrWarnFrmADD",2,0x301,false,false,63,3,1,0,"Low Power mode reminder\n低功耗模式的提醒"));
        signalInfos.add(new SignalInfo("NOAHWSwtStsFrmADD",2,0x301,false,false,58,3,1,0,"NOA Switch Status"));
        signalInfos.add(new SignalInfo("LowPwrSwtUnavlRsnFrmADD",2,0x301,false,false,71,3,1.0,0.0,"Low Power unavailable reason\n低功耗不可用原因"));
        signalInfos.add(new SignalInfo("PltSwtStsFrmADD",2,0x301,false,false,68,3,1,0,"Pilot Switch Status"));
        signalInfos.add(new SignalInfo("PntCldSwtFbFrmADD",2,0x301,false,false,65,2,1,0,"Point Cloud Switch Feedback"));
        signalInfos.add(new SignalInfo("ACCInitSpdSwtFbFrmADD",2,0x301,false,false,79,3,1,0,"ACC initial speed limit setting"));
        signalInfos.add(new SignalInfo("ADSDOWSwtFbFrmADD",2,0x301,false,false,76,3,1,0,"DOW switch feedback"));
        signalInfos.add(new SignalInfo("ADSAEBFCWSwtFbFrmADD",2,0x301,false,false,87,3,1.0,0.0,"AEB switch feedback"));
        signalInfos.add(new SignalInfo("ADSLDWPWarnTypSwtFbFrmADD",2,0x301,false,false,84,3,1.0,0.0,"LDW and LDP warning type switch feedback"));
        signalInfos.add(new SignalInfo("ADSAEBSwtUnavlRsnFrmADD",2,0x301,false,false,95,4,1.0,0.0,"AEB开关不可用原因"));
        signalInfos.add(new SignalInfo("ADSBSDLCASwtUnavlRsnFrmADD",2,0x301,false,false,91,4,1.0,0.0,"BSDLCA 开关不可用原因"));
        signalInfos.add(new SignalInfo("ADSDOWSwtUnavlRsnFrmADD",2,0x301,false,false,103,4,1.0,0.0,"DOW 开关不可用原因"));
        signalInfos.add(new SignalInfo("ADSELKSwtUnavlRsnFrmADD",2,0x301,false,false,99,4,1.0,0.0,"ELK开关不可用原因"));
        signalInfos.add(new SignalInfo("ADSLDPWarnTypSwtUnavlRsnFrmADD",2,0x301,false,false,111,4,1.0,0.0,"LDWP报警类型开关不可用原因"));
        signalInfos.add(new SignalInfo("ADSLDWPSwtUnavlRsnFrmADD",2,0x301,false,false,107,4,1.0,0.0,"LDWP开关不可用原因"));
        signalInfos.add(new SignalInfo("ADSRCTABSwtUnavlRsnFrmADD",2,0x301,false,false,119,4,1.0,0.0,"RCTA_RCTB 开关不可用原因"));
        signalInfos.add(new SignalInfo("ADSRCWSwtUnavlRsnFrmADD",2,0x301,false,false,115,4,1.0,0.0,"RCW 开关不可用原因"));
        signalInfos.add(new SignalInfo("ALCSwtUnavlRsnFrmADD",2,0x301,false,false,127,4,1,0,"ALC Switch unavailable reason"));
        signalInfos.add(new SignalInfo("NOASwtUnavlRsnFrmADD",2,0x301,false,false,123,4,1,0,"NOA Switch unavailable reason"));
        signalInfos.add(new SignalInfo("ACCInitSpdSwtUnavlRsnFrmADD",2,0x301,false,false,135,3,1,0,"ACC initial speed limit switch unavailable reason"));
        signalInfos.add(new SignalInfo("FxdSpdModValSwtStsFrmADD",2,0x301,false,false,143,6,1,0,"Fixed speed mode value switch status"));
        signalInfos.add(new SignalInfo("PrivacyModIniStsFrmADD",2,0x301,false,false,137,2,1,0,"Privacy mode initial status"));
        signalInfos.add(new SignalInfo("PcntgeSpdModValSwtStsFrmADD",2,0x301,false,false,148,5,1,0,"Percentage speed mode value switch status"));
        signalInfos.add(new SignalInfo("PltSwtUnavlRsnFrmADD",2,0x301,false,false,159,4,1,0,"Pilot Switch unavailable reason"));
        signalInfos.add(new SignalInfo("PntCldSwtUnavlRsnFrmADD",2,0x301,false,false,155,4,1,0,"Point cloud switch unavailable reason"));
        signalInfos.add(new SignalInfo("PrivacyModSwtFbFrmADD",2,0x301,false,false,167,2,1,0,"Privacy mode switch feedback"));
        signalInfos.add(new SignalInfo("VehSpdDvtionModSwtStsFrmADD",2,0x301,false,false,165,3,1,0,"Vehicle speed divation mode switch status"));
        signalInfos.add(new SignalInfo("NOACtySwtStsFrmADD",2,0x301,false,false,162,3,1,0,"NOA Switch Status"));
        signalInfos.add(new SignalInfo("ADSTLASwtUnavlRsnFrmADD",2,0x301,false,false,183,4,1.0,0.0,"TLA功能原因不可用提示信号"));
        signalInfos.add(new SignalInfo("NOAautoChangingSrAnimation",2,0x301,false,false,191,2,1,0,"NOA系统自动变道加减速SR车模动效0x0:default0x1:active"));
        signalInfos.add(new SignalInfo("SRLidarCldReqFrmADD",2,0x301,false,false,189,2,1,0,"SR_Lidar_cloud_request"));
        signalInfos.add(new SignalInfo("ADSTLASwtFbFrmADD",2,0x301,false,false,187,2,1,0,"TLA的功能开关反馈状态信号"));
        signalInfos.add(new SignalInfo("SyncMsgTypeADD2Radar",2,0x83,false,false,7,8,1,0,"Time synchronization messagetype"));
        signalInfos.add(new SignalInfo("ChecksumADD2Radar",2,0x83,false,false,15,8,1,0,"Time synchronization messageCRC (Cyclic Redundancy Check)"));
        signalInfos.add(new SignalInfo("SyncMsgTimeDomainADD2Radar",2,0x83,false,false,23,4,1,0,"Time synchronization messagetime domain"));
        signalInfos.add(new SignalInfo("SyncMsgSequenceCounterADD2Radar",2,0x83,false,false,19,4,1,0,"Time synchronization message sequence counter"));
        signalInfos.add(new SignalInfo("SyncMsgSgwADDtoRadar",2,0x83,false,false,26,1,1,0,"Time synchronization message SGW"));
        signalInfos.add(new SignalInfo("SyncMsgOvsADD2Radar",2,0x83,false,false,25,2,1,0,"Time synchronization message Overflow of second"));
        signalInfos.add(new SignalInfo("SyncMsgSyncTimeADD2Radar",2,0x83,false,false,39,32,1,0,"Time synchronization message synchronization time"));
        signalInfos.add(new SignalInfo("OfsTimeSecADD2Radar",2,0x83,false,false,71,32,1,0,"Offset time value in seconds"));
        signalInfos.add(new SignalInfo("OfsTimeNSecADD2Radar",2,0x83,false,false,103,32,1,0,"Offset time value in nanoseconds"));
        signalInfos.add(new SignalInfo("DrvFcn2FrmADDSigGrpChks",2,0xb1,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("DrvCtrlAvailabilityMainFrmADD",2,0xb1,false,false,15,1,1,0,"ADSCtrlAvailabilityMain"));
        signalInfos.add(new SignalInfo("DrvReqTypeMainFrmADD",2,0xb1,false,false,14,1,1,0,"ADSReqTypeMain"));
        signalInfos.add(new SignalInfo("DrvReqModeMainFrmADD",2,0xb1,false,false,13,2,1,0,"ADSReqModeMain"));
        signalInfos.add(new SignalInfo("DrvFcn2FrmADDSigGrpCntr",2,0xb1,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("DrvSecureReqMainFrmADD",2,0xb1,false,false,23,1,1,0,"ADSSecureReqMain"));
        signalInfos.add(new SignalInfo("DrvAxTarUpperComfBandMainFrmADD",2,0xb1,false,false,22,7,0.01,0.0,"ADSAxTarUpperComfBandMain"));
        signalInfos.add(new SignalInfo("DrvAxTarEnaMainFrmADD",2,0xb1,false,false,31,1,1,0,"ADSAxTarEnaMain"));
        signalInfos.add(new SignalInfo("DrvAxTarLowerComfBandMainFrmADD",2,0xb1,false,false,30,7,0.01,0.0,"ADSAxTarLowerComfBandMain"));
        signalInfos.add(new SignalInfo("DrvUseUpperComfBandMainFrmADD",2,0xb1,false,false,39,1,1,0,"ADSUseUpperComfBandMain"));
        signalInfos.add(new SignalInfo("DrvShutdownModeMainFrmADD",2,0xb1,false,false,38,2,1,0,"ADSShutdownModeMain"));
        signalInfos.add(new SignalInfo("DrvDriveAwayReqMainFrmADD",2,0xb1,false,false,36,1,1,0,"Autonomous Driving system Drive Off Request"));
        signalInfos.add(new SignalInfo("DrvBrakePreferredMainFrmADD",2,0xb1,false,false,47,1,1,0,"ADSBrakePreferredMain"));
        signalInfos.add(new SignalInfo("DrvdAxTarLowerLimitMainFrmADD",2,0xb1,false,false,46,7,0.1,0.0,"ADSdAxTarLowerLimitMain"));
        signalInfos.add(new SignalInfo("DrvAxTarReqMainFrmADD",2,0xb1,false,false,55,15,0.001,-20.48,"ADSAxTarReqMain"));
        signalInfos.add(new SignalInfo("DrvVehStopReqMainFrmADD",2,0xb1,false,false,56,1,1,0,"Autonomous Driving system Standstill Request"));
        signalInfos.add(new SignalInfo("DrvdAxTarUpperLimitMainFrmADD",2,0xb1,false,false,70,7,0.1,0.0,"ADSdAxTarUpperLimitMain"));
        signalInfos.add(new SignalInfo("DrvSteerWhlReqFrmADDSigGrpChks",2,0xb1,false,false,87,8,1,0,""));
        signalInfos.add(new SignalInfo("DrvSteerWhlReqFrmADDSigGrpCntr",2,0xb1,false,false,91,4,1,0,""));
        signalInfos.add(new SignalInfo("DrvPinStrAglReqValFrmADD",2,0xb1,false,false,102,15,0.05,-819.2,"Pinion steering angle request for driving functions"));
        signalInfos.add(new SignalInfo("DrvSteerWhlTqLimFrmADD",2,0xb1,false,false,119,11,0.01,-10.24,"Steering Wheel Torque limit"));
        signalInfos.add(new SignalInfo("DrvPinStrAglReqStsFrmADD",2,0xb1,false,false,129,2,1,0,"Pinion steering angle request STATE for driving functions"));
        signalInfos.add(new SignalInfo("ADSVibActvFrmADD",2,0xb1,false,false,143,1,1,0,"Steering wheel vibration request"));
        signalInfos.add(new SignalInfo("DrvPrecsReqFrmADD",2,0xb1,false,false,142,7,1.0,0.0,"Precision request for torque"));
        signalInfos.add(new SignalInfo("DrvFcn3FrmADDSigGrpChks",2,0xb1,false,false,167,8,1,0,""));
        signalInfos.add(new SignalInfo("DrvFcn3FrmADDSigGrpCntr",2,0xb1,false,false,171,4,1,0,""));
        signalInfos.add(new SignalInfo("ADSABALvlFrmADD",2,0xb1,false,false,183,3,1,0,"ABA level to the ESP HBA."));
        signalInfos.add(new SignalInfo("ADSABAReqFrmADD",2,0xb1,false,false,180,1,1,0,"Request of the ABA support from ESP."));
        signalInfos.add(new SignalInfo("ADSABPReqFrmADD",2,0xb1,false,false,179,1,1,0,"Request of the Prefill to ESP."));
        signalInfos.add(new SignalInfo("ADSAEBReqFrmADD",2,0xb1,false,false,178,3,1,0,"Request of the deceleration control."));
        signalInfos.add(new SignalInfo("ADSAEBTarDecelFrmADD",2,0xb1,false,false,191,10,0.03125,-16.0,"Target deceleration value from AEB EBA AEB VRU"));
        signalInfos.add(new SignalInfo("ADSAWBAESLvlFrmADD",2,0xb1,false,false,197,3,1,0,"Different level request of the brake jerk."));
        signalInfos.add(new SignalInfo("ADSAWBAESReqFrmADD",2,0xb1,false,false,194,2,1,0,"Request of the brake jerk warning to ESP."));
        signalInfos.add(new SignalInfo("DrvFcn1FrmADDSigGrpChks",2,0xed,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("DrvFcn1FrmADDSigGrpCntr",2,0xed,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("DrvFltStsVldFrmADD",2,0xed,false,false,22,1,1,0,"Autonomous Driving system Fault status Valid"));
        signalInfos.add(new SignalInfo("DrvFltStsFrmADD",2,0xed,false,false,21,3,1,0,"Autonomous Driving system Fault status"));
        signalInfos.add(new SignalInfo("ADSACCStsFrmADD",2,0xed,false,false,18,3,1,0,"ACC状态 \n激活状态为 Normal ACtive StandActive StandWait Override Takeover"));
        signalInfos.add(new SignalInfo("ADSWarnRemdSigGrpChks",2,0xed,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("CNOARemd2FrmADD",2,0xed,false,false,47,4,1,0,"City-NOA reminding message for long-time toast"));
        signalInfos.add(new SignalInfo("ADSWarnRemdSigGrpCntr",2,0xed,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("DistLvlLmtDispFrmADD",2,0xed,false,false,55,2,1,0,"Distance Level Limit Display"));
        signalInfos.add(new SignalInfo("DrvAlrtWarnLv1FrmADD",2,0xed,false,false,53,3,1,0,"Driving alert warning level_1"));
        signalInfos.add(new SignalInfo("DrvAlrtWarnLv2FrmADD",2,0xed,false,false,50,3,1,0,"Driving alert warning level_2"));
        signalInfos.add(new SignalInfo("DrvLatIcnDispStsFrmADD",2,0xed,false,false,63,4,1,0,"Driving Lateral icon display"));
        signalInfos.add(new SignalInfo("DrvRemd2FrmADD",2,0xed,false,false,59,4,1,0,"Driving reminding message for long time toast"));
        signalInfos.add(new SignalInfo("DrvAlrtWarnLv3FrmADD",2,0xed,false,false,71,3,1,0,"Driving alert warning level_3"));
        signalInfos.add(new SignalInfo("DrvLongIcnDispFrmADD",2,0xed,false,false,68,3,1,0,"Driving longitudinal icon display"));
        signalInfos.add(new SignalInfo("DrvSteerWhlBtnLi",2,0xed,false,false,65,2,1,0,"Driving Steer Wheel Button Light"));
        signalInfos.add(new SignalInfo("DrvStlDispFrmADD",2,0xed,false,false,79,3,1,0,"Driving Style Display"));
        signalInfos.add(new SignalInfo("LaneChangeModFrmADD",2,0xed,false,false,76,2,1,0,"lane change mode"));
        signalInfos.add(new SignalInfo("ScrnDrvFuncTypFrmADD",2,0xed,false,false,74,3,1,0,"Screen Driving Function Type"));
        signalInfos.add(new SignalInfo("IntrctvCompntTypFrmADD",2,0xed,false,false,87,6,1,0,"Interactive component Type"));
        signalInfos.add(new SignalInfo("SpdLvlLmtDispFrmADD",2,0xed,false,false,81,2,1,0,"Set Speed Limit Display"));
        signalInfos.add(new SignalInfo("TarSpdSetMothodFrmADD",2,0xed,false,false,95,2,1,0,"Target Spead Setting Mothod"));
        signalInfos.add(new SignalInfo("CNOAAlrtWarnLv1FrmADD",2,0xed,false,false,93,3,1,0,"City-NOA alert warning level_1"));
        signalInfos.add(new SignalInfo("CNOAAlrtWarnLv3FrmADD",2,0xed,false,false,90,3,1,0,"City-NOA alert warning level_3"));
        signalInfos.add(new SignalInfo("DrvRemdFrmADD",2,0xed,false,false,103,7,1,0,"Driving reminding message for short-time toast"));
        signalInfos.add(new SignalInfo("DrvrSelTarSpdFrmADD",2,0xed,false,false,96,9,1.0,0.0,"Pilot Driver Selected Target Speed"));
        signalInfos.add(new SignalInfo("CNOAIntrctvCompntTypFrmADD",2,0xed,false,false,119,5,1,0,"City-NOA Interactive component Type"));
        signalInfos.add(new SignalInfo("CNOARemdFrmADD",2,0xed,false,false,127,5,1,0,"City-NOA  reminding message for short-time toast"));
        signalInfos.add(new SignalInfo("ADDChassisCanfdNodeAddress",2,0x531,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("ADDChassisCanfdActiveWakeup",2,0x531,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("ADDChassisCanfdRepeatMsgReq",2,0x531,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23ADD",2,0x531,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22ADD",2,0x531,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21ADD",2,0x531,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20ADD",2,0x531,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19ADD",2,0x531,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18ADD",2,0x531,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17ADD",2,0x531,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("ADDChassisCanfdRepeatMsgSt",2,0x531,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31ADD",2,0x531,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30ADD",2,0x531,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29ADD",2,0x531,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28ADD",2,0x531,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27ADD",2,0x531,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26ADD",2,0x531,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25ADD",2,0x531,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24ADD",2,0x531,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39ADD",2,0x531,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38ADD",2,0x531,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37ADD",2,0x531,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36ADD",2,0x531,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35ADD",2,0x531,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34ADD",2,0x531,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33ADD",2,0x531,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32ADD",2,0x531,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47ADD",2,0x531,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46ADD",2,0x531,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45ADD",2,0x531,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44ADD",2,0x531,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43ADD",2,0x531,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42ADD",2,0x531,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41ADD",2,0x531,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40ADD",2,0x531,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnADD",2,0x531,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("ADDChassisCanfdNodeAddress1",2,0x52d,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("ADDChassisCanfdActiveWakeup1",2,0x52d,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("ADDChassisCanfdRepeatMsgReq1",2,0x52d,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23ADD",2,0x52d,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22ADD",2,0x52d,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21ADD",2,0x52d,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20ADD",2,0x52d,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19ADD",2,0x52d,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18ADD",2,0x52d,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17ADD",2,0x52d,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("ADDChassisCanfdRepeatMsgSt1",2,0x52d,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31ADD",2,0x52d,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30ADD",2,0x52d,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29ADD",2,0x52d,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28ADD",2,0x52d,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27ADD",2,0x52d,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26ADD",2,0x52d,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25ADD",2,0x52d,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24ADD",2,0x52d,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39ADD",2,0x52d,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38ADD",2,0x52d,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37ADD",2,0x52d,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36ADD",2,0x52d,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35ADD",2,0x52d,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34ADD",2,0x52d,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33ADD",2,0x52d,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32ADD",2,0x52d,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47ADD",2,0x52d,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46ADD",2,0x52d,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45ADD",2,0x52d,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44ADD",2,0x52d,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43ADD",2,0x52d,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42ADD",2,0x52d,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41ADD",2,0x52d,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40ADD",2,0x52d,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnADD",2,0x52d,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("BcpSysStsSigGrpChks",2,0x150,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BCPMstCylPVld",2,0x150,false,false,15,2,1.0,0.0,"QualifierforBCPmastercyclinder'spressuresignal"));
        signalInfos.add(new SignalInfo("BcpSysStsSigGrpCntr",2,0x150,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BrkFldWarn",2,0x150,false,false,23,1,1,0,"Brake Fluid Warning"));
        signalInfos.add(new SignalInfo("BrkPedlAppld",2,0x150,false,false,22,1,1,0,"Indicates whether the driver operates the\n brake pedal. Only active when the driver brakes"));
        signalInfos.add(new SignalInfo("BrkPedlAppldVld",2,0x150,false,false,21,2,1,0,"Qualifier for brake pedal applied signal"));
        signalInfos.add(new SignalInfo("BCPBrkLiIllmnReq",2,0x150,false,false,19,1,1,0,"Request to illuminate brake light from BCP"));
        signalInfos.add(new SignalInfo("InpRodStkVld",2,0x150,false,false,18,1,1,0,"Qualifier for Input Rod Stroke signal"));
        signalInfos.add(new SignalInfo("InpRodStk",2,0x150,false,false,17,10,0.05,-5.0,"Input Rod Stroke"));
        signalInfos.add(new SignalInfo("BrkPedlPerctVld",2,0x150,false,false,39,1,1,0,"Qualifier for Brake Pedal Percentage signal"));
        signalInfos.add(new SignalInfo("BrkPedlPerct",2,0x150,false,false,38,7,1,0,"Brake Pedal Percentage"));
        signalInfos.add(new SignalInfo("BCPSysSts",2,0x150,false,false,47,2,1,0,"BCP System Status"));
        signalInfos.add(new SignalInfo("BCPBrkSysWarnText",2,0x150,false,false,45,3,1,0,"BCP Brake System Warning Text"));
        signalInfos.add(new SignalInfo("BrkFldWarnVld",2,0x150,false,false,42,1,1,0,"Qualifier for Brake Fluid Warning Signal"));
        signalInfos.add(new SignalInfo("BCPSimulatorP",2,0x150,false,false,41,10,0.3,-30.0,"Pressure in the BCP Plunger"));
        signalInfos.add(new SignalInfo("BCPSimulatorPVld",2,0x150,false,false,63,2,1.0,0.0,"Qualifier for BCP Plunger's pressure signal"));
        signalInfos.add(new SignalInfo("APBAplAvlBCP",2,0x150,false,false,61,2,1.0,0.0,"APB Apply Avalible from BCP\nBCP侧卡钳是否可以夹紧"));
        signalInfos.add(new SignalInfo("APBRelAvlBCP",2,0x150,false,false,59,2,1,0,"APB Release Avalible from BCP\nBCP侧卡钳是否可以释放"));
        signalInfos.add(new SignalInfo("BCPMstCylP",2,0x150,false,false,57,10,0.3,-30.0,"PressureintheBCPmastercylinder"));
        signalInfos.add(new SignalInfo("BrkAssSigGrpChks",2,0x150,false,false,79,8,1,0,""));
        signalInfos.add(new SignalInfo("BrkAssSigGrpCntr",2,0x150,false,false,83,4,1,0,""));
        signalInfos.add(new SignalInfo("ABAAvl",2,0x150,false,false,95,1,1,0,"ABA available"));
        signalInfos.add(new SignalInfo("ABAActv",2,0x150,false,false,94,1,1,0,"ABA active"));
        signalInfos.add(new SignalInfo("HBAAvl",2,0x150,false,false,93,1,1,0,"HBA available"));
        signalInfos.add(new SignalInfo("HBAActv",2,0x150,false,false,92,1,1,0,"HBA active"));
        signalInfos.add(new SignalInfo("APBStsBkp",2,0x150,false,false,91,3,1,0,"BCP&BCS APB Status"));
        signalInfos.add(new SignalInfo("BCPKeepAwakeReq",2,0x150,false,false,111,1,1,0,"BCP Keep Awake Request"));
        signalInfos.add(new SignalInfo("HBBActv",2,0x150,false,false,110,1,1,0,"HBB active"));
        signalInfos.add(new SignalInfo("BcpSysStateGrpChks",2,0x166,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BcpSysStateGrpCntr",2,0x166,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BCPInputRodStk",2,0x166,false,false,23,10,0.05,-5.0,"BCP Plunger Rod"));
        signalInfos.add(new SignalInfo("BCPInputRodQ",2,0x166,false,false,29,2,1,0,"sInputRod Qualifier"));
        signalInfos.add(new SignalInfo("BrkCrvSwtVal",2,0x1e9,false,false,23,7,1,0,"Brake curve switch value"));
        signalInfos.add(new SignalInfo("BrkCrvSwtSts",2,0x1e9,false,false,31,2,1,0,"Brake curve switch status"));
        signalInfos.add(new SignalInfo("BCPFaultInfoFlag",2,0x2bf,false,false,15,1,1,0,"BCP Fault Information Flag"));
        signalInfos.add(new SignalInfo("BcpPtTqSigGrpChks",2,0xb2,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BcpPtTqSigGrpCntr",2,0xb2,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("LgtCtrlPtTarTq",2,0xb2,false,true,23,16,1,0,"BCP longitudinal powertrain target torque"));
        signalInfos.add(new SignalInfo("PtTqLimn",2,0xb2,false,true,39,16,1,0,"Limit powertrain torque output"));
        signalInfos.add(new SignalInfo("PtTqLimnEna",2,0xb2,false,false,49,1,1,0,"Limit powertrain torque output enable"));
        signalInfos.add(new SignalInfo("LgtCtrlPtTarTqEna",2,0xb2,false,false,48,1,1,0,"BCP longitudinal powertrain target request"));
        signalInfos.add(new SignalInfo("APBParkBrkReqSigGrpChks",2,0xb2,false,false,71,8,1,0,""));
        signalInfos.add(new SignalInfo("APBParkBrkReqSigGrpCntr",2,0xb2,false,false,75,4,1,0,""));
        signalInfos.add(new SignalInfo("BrkSysAPBBkp2MainSafeLimCom1",2,0xb2,false,false,84,2,1,0,"APB Backup to main safe limit"));
        signalInfos.add(new SignalInfo("BrkSysAPBParkBrkReqBkp2MainCom1",2,0xb2,false,false,82,3,1,0,"APB Parking Brake Request Backup to Main"));
        signalInfos.add(new SignalInfo("BrkSysAPCBkp2MainStCom1",2,0xb2,false,false,91,4,1,0,"Parking function status from backup controller to main"));
        signalInfos.add(new SignalInfo("BCPChassisCanfdNodeAddress",2,0x525,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("BCPChassisCanfdActiveWakeup",2,0x525,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("BCPChassisCanfdRepeatMsgReq",2,0x525,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23BCP",2,0x525,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22BCP",2,0x525,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21BCP",2,0x525,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20BCP",2,0x525,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19BCP",2,0x525,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18BCP",2,0x525,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17BCP",2,0x525,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("BCPChassisCanfdRepeatMsgSt",2,0x525,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31BCP",2,0x525,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30BCP",2,0x525,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29BCP",2,0x525,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28BCP",2,0x525,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27BCP",2,0x525,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26BCP",2,0x525,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25BCP",2,0x525,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24BCP",2,0x525,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39BCP",2,0x525,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38BCP",2,0x525,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37BCP",2,0x525,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36BCP",2,0x525,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35BCP",2,0x525,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34BCP",2,0x525,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33BCP",2,0x525,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32BCP",2,0x525,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47BCP",2,0x525,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46BCP",2,0x525,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45BCP",2,0x525,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44BCP",2,0x525,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43BCP",2,0x525,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42BCP",2,0x525,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41BCP",2,0x525,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40BCP",2,0x525,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnBCP",2,0x525,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("BCPToVCCDDiagResp",2,0x621,false,false,7,512,1,0,"BCPToVCCDChassisDiagRespNpdu"));
        signalInfos.add(new SignalInfo("BcsSysCtrSigGrpChks",2,0x151,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BrkLiIllmnReq",2,0x151,false,false,15,1,1,0,"Request to illuminate brake light"));
        signalInfos.add(new SignalInfo("HydBrkFExist",2,0x151,false,false,14,1,1,0,"Hydraulic brake force exsit"));
        signalInfos.add(new SignalInfo("VehStandStillIndcr",2,0x151,false,false,13,1,1,0,"Indicate whether the vehicle is standstill or not"));
        signalInfos.add(new SignalInfo("VehStandStillIndcrVld",2,0x151,false,false,12,1,1,0,"Qualifier for vehicle standstill indicate signal"));
        signalInfos.add(new SignalInfo("BcsSysCtrSigGrpCntr",2,0x151,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BrkSysWarnLamp",2,0x151,false,false,23,2,1,0,"Brake System Warning Lamp"));
        signalInfos.add(new SignalInfo("ESCPataLamp",2,0x151,false,false,21,2,1,0,"ESC diable status"));
        signalInfos.add(new SignalInfo("ESCIntvLamp",2,0x151,false,false,19,1,1,0,"ESC Intervention Lamp"));
        signalInfos.add(new SignalInfo("VDCActv",2,0x151,false,false,18,1,1,0,"VDC Controller Active"));
        signalInfos.add(new SignalInfo("TCSActv",2,0x151,false,false,17,1,1,0,"TCS Controller Active"));
        signalInfos.add(new SignalInfo("ABSActv",2,0x151,false,false,16,1,1,0,"ABS Control Active"));
        signalInfos.add(new SignalInfo("EBDActv",2,0x151,false,false,31,1,1,0,"EBD Control Active"));
        signalInfos.add(new SignalInfo("ESCErrDetd",2,0x151,false,false,30,1,1,0,"ESC error detected"));
        signalInfos.add(new SignalInfo("ABSErrDetd",2,0x151,false,false,29,1,1,0,"ABS error detected"));
        signalInfos.add(new SignalInfo("EBDErrDetd",2,0x151,false,false,28,1,1,0,"EBD error detected"));
        signalInfos.add(new SignalInfo("EmgyBrkLiReq",2,0x151,false,false,27,1,1,0,"Emergency brake light request"));
        signalInfos.add(new SignalInfo("HRBAvl",2,0x151,false,false,26,1,1,0,"HRB active"));
        signalInfos.add(new SignalInfo("HRBActv",2,0x151,false,false,25,1,1,0,"HRB available"));
        signalInfos.add(new SignalInfo("MstCylPCmp",2,0x151,false,false,39,12,0.1,0.0,"Pressure in the master cylinder  offset is included ."));
        signalInfos.add(new SignalInfo("APBTxtDip",2,0x151,false,false,43,4,1,0,"APB Text Display"));
        signalInfos.add(new SignalInfo("ESCSwitchAvl",2,0x151,false,false,55,3,1,0,"ESC Switch availability\nESC开关可用状态"));
        signalInfos.add(new SignalInfo("BCSBrkSysWarnText",2,0x151,false,false,52,3,1,0,"BCS Brake System Warning Text"));
        signalInfos.add(new SignalInfo("MstCylPVld",2,0x151,false,false,48,1,1,0,"Qualifier for the master cylinder pressure signal"));
        signalInfos.add(new SignalInfo("HBBSts",2,0x151,false,false,63,2,1,0,"HBB function status"));
        signalInfos.add(new SignalInfo("HDCAvl",2,0x151,false,false,61,1,1,0,"HDC function available"));
        signalInfos.add(new SignalInfo("HDCCtrlSts",2,0x151,false,false,60,2,1,0,"HDC function control status"));
        signalInfos.add(new SignalInfo("CSTSts",2,0x151,false,false,58,2,1,0,"CST function status"));
        signalInfos.add(new SignalInfo("HBCActv",2,0x151,false,false,56,1,1,0,"HBC active"));
        signalInfos.add(new SignalInfo("EstimdSumOfVehHydBrkEachWhl",2,0x151,false,false,71,15,8,-250000,"Estimated sum of vehicle hydraulic brake force acting on each wheel"));
        signalInfos.add(new SignalInfo("BcsBasicFcnSigGrpChks",2,0x151,false,false,87,8,1,0,""));
        signalInfos.add(new SignalInfo("BcsBasicFcnSigGrpCntr",2,0x151,false,false,91,4,1,0,""));
        signalInfos.add(new SignalInfo("DrvOffTqThd",2,0x151,false,false,103,15,1,0,"Drive off torque threshold"));
        signalInfos.add(new SignalInfo("SCMActv",2,0x151,false,false,104,1,1,0,"SCM active"));
        signalInfos.add(new SignalInfo("DSTActv",2,0x151,false,false,119,1,1,0,"DST active"));
        signalInfos.add(new SignalInfo("APBSts",2,0x151,false,false,118,3,1,0,"APB Status"));
        signalInfos.add(new SignalInfo("APBErrDetd",2,0x151,false,false,115,2,1,0,"APB Error Status"));
        signalInfos.add(new SignalInfo("DSTSteerTqReq",2,0x151,false,true,112,9,0.1,0.0,"Steering wheel torque requested from DST"));
        signalInfos.add(new SignalInfo("APBAplAvlBCS",2,0x151,false,false,135,2,1.0,0.0,"APB Apply Avalible from BCS\nBCS侧卡钳是否可以夹紧"));
        signalInfos.add(new SignalInfo("APBRelAvlBCS",2,0x151,false,false,133,2,1,0,"APB Release avalialbe from BCS\nBCS侧卡钳是否可以释放"));
        signalInfos.add(new SignalInfo("HHCActv",2,0x151,false,false,143,1,1,0,"HHC active"));
        signalInfos.add(new SignalInfo("HHCAvl",2,0x151,false,false,142,1,1,0,"HHC available"));
        signalInfos.add(new SignalInfo("AVHSts",2,0x151,false,false,141,2,1,0,"AVH function status"));
        signalInfos.add(new SignalInfo("AVHAvl",2,0x151,false,false,139,1,1,0,"AVH available"));
        signalInfos.add(new SignalInfo("SCMAvl",2,0x151,false,false,138,1,1,0,"SCM Available"));
        signalInfos.add(new SignalInfo("CDPActv",2,0x151,false,false,137,1,1,0,"CDP active"));
        signalInfos.add(new SignalInfo("CDPAvl",2,0x151,false,false,136,1,1,0,"CDP available"));
        signalInfos.add(new SignalInfo("BCSKeepAwakeReq",2,0x151,false,false,151,1,1,0,"BCS Keep Awake Request"));
        signalInfos.add(new SignalInfo("BcsExtdFcnSigGrpChks",2,0x151,false,false,175,8,1,0,""));
        signalInfos.add(new SignalInfo("BcsExtdFcnSigGrpCntr",2,0x151,false,false,179,4,1,0,""));
        signalInfos.add(new SignalInfo("ABPActv",2,0x151,false,false,191,1,1,0,"ABP active"));
        signalInfos.add(new SignalInfo("AEBAvl",2,0x151,false,false,190,1,1,0,"AEB available"));
        signalInfos.add(new SignalInfo("AEBActv",2,0x151,false,false,189,1,1,0,"AEB active"));
        signalInfos.add(new SignalInfo("EBAActv",2,0x151,false,false,188,1,1,0,"EBA active"));
        signalInfos.add(new SignalInfo("AWBAvl",2,0x151,false,false,199,1,1,0,"AWB available"));
        signalInfos.add(new SignalInfo("AWBActv",2,0x151,false,false,198,1,1,0,"AWB active"));
        signalInfos.add(new SignalInfo("ABPAvl",2,0x151,false,false,197,1,1,0,"ABP available"));
        signalInfos.add(new SignalInfo("HDCUnAvlRsn",2,0x151,false,false,251,3,1,0,"HDC function available"));
        signalInfos.add(new SignalInfo("HBBActive",2,0x151,false,false,248,1,1,0,"BCS HBB Active"));
        signalInfos.add(new SignalInfo("BcsTqCtrlSigGrpChks",2,0x152,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("PtTqRednActvRA",2,0x152,false,false,15,1,1,0,"Powertrain torque reduction active RA"));
        signalInfos.add(new SignalInfo("PtTqRednActvFA",2,0x152,false,false,14,1,1,0,"Powertrain torque reduction active FA"));
        signalInfos.add(new SignalInfo("TarRecuTqReqSts",2,0x152,false,false,13,2,1,0,"Status of Target Recuperation torque of Generator"));
        signalInfos.add(new SignalInfo("BcsTqCtrlSigGrpCntr",2,0x152,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("TarRecuTqReq",2,0x152,false,false,23,15,1,-32767,"Target Recuperation Torque Request to Generator"));
        signalInfos.add(new SignalInfo("BCSLgtCtrlPtTarTqEna",2,0x152,false,false,24,1,1,0,"BCS longitudinal powertrain torque request"));
        signalInfos.add(new SignalInfo("BCSLgtCtrlPtTarTq",2,0x152,false,true,39,16,1,0,"BCS longitudinal powertrain target torque"));
        signalInfos.add(new SignalInfo("CstRgnBlendTqReqFA",2,0x152,false,true,55,16,1,0,"Coast Regen Blending Torque Request FA"));
        signalInfos.add(new SignalInfo("CstRgnBlendTqReqRA",2,0x152,false,true,71,16,1,0,"Coast Regen Blending Torque Request FA"));
        signalInfos.add(new SignalInfo("TarRdcdPtTqFA",2,0x152,false,true,87,16,1,0,"Target reduced powertrain torque FA"));
        signalInfos.add(new SignalInfo("TarRdcdPtTqRA",2,0x152,false,true,103,16,1,0,"Target reduced powertrain torque RA"));
        signalInfos.add(new SignalInfo("BiasMaxFrntAxle",2,0x152,false,false,119,7,1,0,"The maxium percentage of Target Recuperation Torque executed on front axle"));
        signalInfos.add(new SignalInfo("DrgTqCtrlActvFA",2,0x152,false,false,112,1,1,0,"Drag torque control active on front axle"));
        signalInfos.add(new SignalInfo("BiasMaxReAxle",2,0x152,false,false,127,7,1,0,"The maxium percentage of Target Recuperation Torque executed on rear axle"));
        signalInfos.add(new SignalInfo("DrgTqCtrlActvRA",2,0x152,false,false,120,1,1,0,"Drag torque control active on rear axle"));
        signalInfos.add(new SignalInfo("CstRgnBlendSts",2,0x152,false,false,135,2,1,0,"Coast Regen Blending Status"));
        signalInfos.add(new SignalInfo("ApcFcnSigGrpChks",2,0x152,false,false,151,8,1,0,""));
        signalInfos.add(new SignalInfo("ApcFcnSigGrpCntr",2,0x152,false,false,155,4,1,0,""));
        signalInfos.add(new SignalInfo("APCFailrSts",2,0x152,false,false,167,4,1,0,"detailed information why this APC maneuver failed"));
        signalInfos.add(new SignalInfo("APAActrAvl",2,0x152,false,false,163,1,1,0,"Flag indicate APA availability for longitudinal control"));
        signalInfos.add(new SignalInfo("APCSts",2,0x152,false,false,162,3,1.0,0.0,"Longitudinal controller status"));
        signalInfos.add(new SignalInfo("APCActvVehHld",2,0x152,false,false,175,1,1,0,"Flag indicate that vehicle is activly hold by longitudinal actuator controller"));
        signalInfos.add(new SignalInfo("APCDrvrBrkOvrdFlg",2,0x152,false,false,174,1,1,0,"Indicate driver brakes more than the system."));
        signalInfos.add(new SignalInfo("RPAAVPActrAvl",2,0x152,false,false,173,2,1,0,"Flag indicate RPA  AVP availability for longitudinal control"));
        signalInfos.add(new SignalInfo("BcsDrvMonSigGrpChks",2,0x160,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("BcsDrvMonSigGrpCntr",2,0x160,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("BrkDiscTFrntLe",2,0x160,false,false,55,8,5,-100,"Brake Disc Temperature Front Left"));
        signalInfos.add(new SignalInfo("BrkDiscTFrntRi",2,0x160,false,false,63,8,5,-100,"Brake Disc Temperature Front Right"));
        signalInfos.add(new SignalInfo("BrkDiscTReLe",2,0x160,false,false,71,8,5,-100,"Brake Disc Temperature Rear Left"));
        signalInfos.add(new SignalInfo("BrkDiscTReRi",2,0x160,false,false,79,8,5,-100,"Brake Disc Temperature Rear Right"));
        signalInfos.add(new SignalInfo("RgnTqCorrnOffs1",2,0x160,false,false,87,16,0.05625,0.0,"Regeneration Torque Correction Offset 1"));
        signalInfos.add(new SignalInfo("RgnTqCorrnOffs2",2,0x160,false,false,103,8,1,-100,"Regeneration Torque Correction Offset 2"));
        signalInfos.add(new SignalInfo("RgnTqCorrnOffs3",2,0x160,false,false,111,8,0.01,0.0,"Regeneration Torque Correction Offset 3"));
        signalInfos.add(new SignalInfo("RgnTqCorrnOffs4",2,0x160,false,true,119,16,0.01,0.0,"Regeneration Torque Correction Offset 4"));
        signalInfos.add(new SignalInfo("RgnTqCorrnOffs5",2,0x160,false,false,135,14,0.1,-100.0,"Regeneration Torque Correction Offset 5"));
        signalInfos.add(new SignalInfo("RgnTqCorrnOffs6",2,0x160,false,false,151,14,0.1,-100.0,"Regeneration Torque Correction Offset 6"));
        signalInfos.add(new SignalInfo("RgnTqCorrnOffs7",2,0x160,false,false,167,14,0.1,-100.0,"Regeneration Torque Correction Offset 7"));
        signalInfos.add(new SignalInfo("WhlPEstimdFrntLe",2,0x160,false,false,199,8,1,0,"Estimated or modeled wheel pressure of front left wheel"));
        signalInfos.add(new SignalInfo("WhlPEstimdFrntRi",2,0x160,false,false,207,8,1,0,"Estimated or modeled wheel pressure of front right wheel"));
        signalInfos.add(new SignalInfo("WhlPEstimdReLe",2,0x160,false,false,215,8,1,0,"Estimated or modeled wheel pressure of rear left wheel"));
        signalInfos.add(new SignalInfo("WhlPEstimdReRi",2,0x160,false,false,223,8,1,0,"Estimated or modeled wheel pressure of rear right wheel"));
        signalInfos.add(new SignalInfo("WhlPEstimdFrntLeVld",2,0x160,false,false,231,1,1,0,"Qualifier for estimated front left wheel pressure signals"));
        signalInfos.add(new SignalInfo("WhlPEstimdFrntRiVld",2,0x160,false,false,230,1,1,0,"Qualifier for estimated front right wheel pressure signals"));
        signalInfos.add(new SignalInfo("WhlPEstimdReLeVld",2,0x160,false,false,229,1,1,0,"Qualifier for estimated rear left wheel pressure signals"));
        signalInfos.add(new SignalInfo("WhlPEstimdReRiVld",2,0x160,false,false,228,1,1,0,"Qualifier for estimated rear right wheel pressure signals"));
        signalInfos.add(new SignalInfo("DrvgStabyAssiSwtSts",2,0x1e8,false,false,22,2,1,0,"Driving stability assist switch status"));
        signalInfos.add(new SignalInfo("DrvgChartcSwtVal",2,0x1e8,false,false,20,3,1,0,"Driving characteristic switch value"));
        signalInfos.add(new SignalInfo("DrvgChartcSwtSts",2,0x1e8,false,false,17,2,1,0,"Driving characteristic switch status"));
        signalInfos.add(new SignalInfo("DrvgStabyAssiSwtVal",2,0x1e8,false,false,27,4,1,0,"Driving stability assist switch value"));
        signalInfos.add(new SignalInfo("DrvModTCSSwtSts",2,0x1e8,false,false,39,2,1.0,0.0,"驾驶模式TCS调节是否可用状态"));
        signalInfos.add(new SignalInfo("DrvModTCSSwtVal",2,0x1e8,false,false,37,3,1,0,"驾驶模式TCS调节值"));
        signalInfos.add(new SignalInfo("DrvModVDCSwtSts",2,0x1e8,false,false,34,2,1.0,0.0,"驾驶模式VDC调节可用状态"));
        signalInfos.add(new SignalInfo("DrvModVDCSwtVal",2,0x1e8,false,false,47,3,1.0,0.0,"驾驶模式VDC调节值"));
        signalInfos.add(new SignalInfo("BCSFaultInfoFlag",2,0x2ce,false,false,7,1,1,0,"BCS Fault Information Flag"));
        signalInfos.add(new SignalInfo("WhlStsSigGrpChks",2,0xb3,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("WhlSpdFrntLeVld",2,0xb3,false,false,15,1,1,0,"Status of wheel speed front left"));
        signalInfos.add(new SignalInfo("WhlSpdFrntRiVld",2,0xb3,false,false,14,1,1,0,"Status of wheel speed front right"));
        signalInfos.add(new SignalInfo("WhlSpdReLeVld",2,0xb3,false,false,13,1,1,0,"Status of wheel speed rear left"));
        signalInfos.add(new SignalInfo("WhlSpdReRiVld",2,0xb3,false,false,12,1,1,0,"Status of wheel speed rear right"));
        signalInfos.add(new SignalInfo("WhlStsSigGrpCntr",2,0xb3,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("WhlSpdFrntLe",2,0xb3,false,false,23,16,0.05625,0.0,"Wheel speed front left"));
        signalInfos.add(new SignalInfo("WhlSpdFrntRi",2,0xb3,false,false,39,16,0.05625,0.0,"Wheel speed front right"));
        signalInfos.add(new SignalInfo("WhlSpdReLe",2,0xb3,false,false,55,16,0.05625,0.0,"Wheel speed rear left"));
        signalInfos.add(new SignalInfo("WhlSpdReRi",2,0xb3,false,false,71,16,0.05625,0.0,"Wheel speed rear right"));
        signalInfos.add(new SignalInfo("VehSpd",2,0xb3,false,false,87,16,0.05625,0.0,"Vehicle speed"));
        signalInfos.add(new SignalInfo("VehSpdVld",2,0xb3,false,false,103,1,1,0,"Qualifier for vehicle speed signal"));
        signalInfos.add(new SignalInfo("WhlDirFrntLeVld",2,0xb3,false,false,102,1,1,0,"Qualifier for wheel moving direction front left"));
        signalInfos.add(new SignalInfo("WhlDirFrntLe",2,0xb3,false,false,101,2,1,0,"Wheel moving direction front left"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeFrntLeVld",2,0xb3,false,false,99,1,1,0,"Qualifier for wheel speed Edges front left"));
        signalInfos.add(new SignalInfo("WhlDirFrntRiVld",2,0xb3,false,false,98,1,1,0,"Qualifier for wheel moving direction front right"));
        signalInfos.add(new SignalInfo("WhlDirFrntRi",2,0xb3,false,false,97,2,1,0,"Wheel moving direction front right"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeFrntLe",2,0xb3,false,false,111,8,1,0,"Wheel speed Edges front left"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeFrntRiVld",2,0xb3,false,false,119,1,1,0,"Qualifier for wheel speed Edges front right"));
        signalInfos.add(new SignalInfo("WhlDirReLeVld",2,0xb3,false,false,118,1,1,0,"Qualifier for wheel moving direction rear left"));
        signalInfos.add(new SignalInfo("WhlDirReLe",2,0xb3,false,false,117,2,1,0,"Wheel moving direction rear left"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeReLeVld",2,0xb3,false,false,115,1,1,0,"Qualifier for wheel speed Edges rear left"));
        signalInfos.add(new SignalInfo("WhlDirReRiVld",2,0xb3,false,false,114,1,1,0,"Qualifier for wheel moving direction rear right"));
        signalInfos.add(new SignalInfo("WhlDirReRi",2,0xb3,false,false,113,2,1,0,"Wheel moving direction rear right"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeFrntRi",2,0xb3,false,false,127,8,1,0,"Wheel speed Edges front right"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeReLe",2,0xb3,false,false,135,8,1,0,"Wheel speed Edges rear left"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeReRiVld",2,0xb3,false,false,143,1,1,0,"Qualifier for wheel speed Edges rear right"));
        signalInfos.add(new SignalInfo("WhlSpdEdgeReRi",2,0xb3,false,false,151,8,1,0,"Wheel speed Edges rear right"));
        signalInfos.add(new SignalInfo("WhlDstTiStampFrntLe",2,0xb3,false,false,159,16,1,0,"Wheel distance time stamp for front left"));
        signalInfos.add(new SignalInfo("WhlDstTiStampFrntRi",2,0xb3,false,false,175,16,1,0,"Wheel distance time stamp for front right"));
        signalInfos.add(new SignalInfo("WhlDstTiStampReLe",2,0xb3,false,false,191,16,1,0,"Wheel distance time stamp for rear left"));
        signalInfos.add(new SignalInfo("WhlDstTiStampReRi",2,0xb3,false,false,207,16,1,0,"Wheel distance time stamp for rear left"));
        signalInfos.add(new SignalInfo("AdcFcnSigGrpChks",2,0xb3,false,false,223,8,1,0,""));
        signalInfos.add(new SignalInfo("BCSActrActvForADC",2,0xb3,false,false,231,2,1,0,"BCS actuator active for ADC"));
        signalInfos.add(new SignalInfo("BCSActrRampOffStsForADC",2,0xb3,false,false,229,2,1,0,"BCS actuator ramp off status for ADC"));
        signalInfos.add(new SignalInfo("AdcFcnSigGrpCntr",2,0xb3,false,false,227,4,1,0,""));
        signalInfos.add(new SignalInfo("BCSActrAvlStsForADC",2,0xb3,false,false,239,3,1,0,"BCS actuator available status for ADC"));
        signalInfos.add(new SignalInfo("BCSActrAvlStsForADCL3",2,0xb3,false,false,236,3,1,0,"BCS available status for ADC L3"));
        signalInfos.add(new SignalInfo("BCSActrVldForADC",2,0xb3,false,false,233,1,1,0,"BCS actuator valid for ADC"));
        signalInfos.add(new SignalInfo("BrkSysAPCSigGrpChks",2,0xe1,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BrkSysAPCSigGrpCntr",2,0xe1,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BrkSysAPCBkpStgyReqCom1",2,0xe1,false,false,20,1,1,0,"APC Backup Strategy Request"));
        signalInfos.add(new SignalInfo("BrkSysAPCMain2BkpStCom1",2,0xe1,false,false,19,4,1,0,"Parking function status from Main controller to backup controller"));
        signalInfos.add(new SignalInfo("WhlRotStsSigGrpChks",2,0xe1,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("WhlRotStsSigGrpCntr",2,0xe1,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("WhlRotSpdFrntLe",2,0xe1,false,false,55,13,0.46875,0.0,"Wheel Rotation Speed Front Left"));
        signalInfos.add(new SignalInfo("WhlRotSpdFrntLeVld",2,0xe1,false,false,58,1,1,0,"Wheel Rotation Speed Front Left Valid"));
        signalInfos.add(new SignalInfo("WhlRotSpdFrntRi",2,0xe1,false,false,71,13,0.46875,0.0,"Wheel Rotation Speed Front Right"));
        signalInfos.add(new SignalInfo("WhlRotSpdFrntRiVld",2,0xe1,false,false,74,1,1,0,"Wheel Rotation Speed Front Right Valid"));
        signalInfos.add(new SignalInfo("WhlRotSpdReLe",2,0xe1,false,false,87,13,0.46875,0.0,"Wheel Rotation Speed Rear Left"));
        signalInfos.add(new SignalInfo("WhlRotSpdReLeVld",2,0xe1,false,false,90,1,1,0,"Wheel Rotation Speed Rear Left Valid"));
        signalInfos.add(new SignalInfo("WhlRotSpdReRi",2,0xe1,false,false,103,13,0.46875,0.0,"Wheel Rotation Speed Rear Right"));
        signalInfos.add(new SignalInfo("WhlRotSpdReRiVld",2,0xe1,false,false,106,1,1,0,"Wheel Rotation Speed Rear Right Valid"));
        signalInfos.add(new SignalInfo("BCSChassisCanfdNodeAddress",2,0x522,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("BCSChassisCanfdActiveWakeup",2,0x522,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("BCSChassisCanfdRepeatMsgReq",2,0x522,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23BCS",2,0x522,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22BCS",2,0x522,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21BCS",2,0x522,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20BCS",2,0x522,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19BCS",2,0x522,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18BCS",2,0x522,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17BCS",2,0x522,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("BCSChassisCanfdRepeatMsgSt",2,0x522,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31BCS",2,0x522,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30BCS",2,0x522,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29BCS",2,0x522,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28BCS",2,0x522,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27BCS",2,0x522,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26BCS",2,0x522,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25BCS",2,0x522,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24BCS",2,0x522,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39BCS",2,0x522,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38BCS",2,0x522,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37BCS",2,0x522,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36BCS",2,0x522,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35BCS",2,0x522,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34BCS",2,0x522,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33BCS",2,0x522,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32BCS",2,0x522,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47BCS",2,0x522,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46BCS",2,0x522,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45BCS",2,0x522,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44BCS",2,0x522,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43BCS",2,0x522,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42BCS",2,0x522,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41BCS",2,0x522,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40BCS",2,0x522,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnBCS",2,0x522,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("BCSToVCCDDiagResp",2,0x622,false,false,7,512,1,0,"BCSToVCCDChassisDiagRespNpdu"));
        signalInfos.add(new SignalInfo("ReLeTyrePVal",2,0x2f6,false,false,7,8,2.75,0.0,"RearLeftTyrePressureValue"));
        signalInfos.add(new SignalInfo("ReRiTyrePVal",2,0x2f6,false,false,15,8,2.75,0.0,"RearRightTyrePressureValue"));
        signalInfos.add(new SignalInfo("ReLeTyrePWarn",2,0x2f6,false,false,23,2,1,0,"RearLeftTyrePressureWarning"));
        signalInfos.add(new SignalInfo("ReRiTyrePWarn",2,0x2f6,false,false,21,2,1,0,"RearRightTyrePressureWarning"));
        signalInfos.add(new SignalInfo("FrntLeTyrePWarn",2,0x2f6,false,false,19,2,1,0,"FrontLeftTyrePressureWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyrePWarn",2,0x2f6,false,false,17,2,1,0,"FrontRightTyrePressureWarning"));
        signalInfos.add(new SignalInfo("FrntLeTyrePVal",2,0x2f6,false,false,31,8,2.75,0.0,"FrontLeftTyrePressureValue"));
        signalInfos.add(new SignalInfo("FrntRiTyrePVal",2,0x2f6,false,false,39,8,2.75,0.0,"FrontRightTyrePressureValue"));
        signalInfos.add(new SignalInfo("FrntLeTyrePSnsrLoBattWarn",2,0x2f6,false,false,47,1,1,0,"FrontLeftTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("FrntLeTyrePSnsrLostWarn",2,0x2f6,false,false,46,1,1,0,"FrontLeftTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyrePSnsrLoBattWarn",2,0x2f6,false,false,45,1,1,0,"FrontRightTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyrePSnsrLostWarn",2,0x2f6,false,false,44,1,1,0,"FrontRightTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("ReLeTyrePSnsrLoBattWarn",2,0x2f6,false,false,43,1,1,0,"RearLeftTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("ReLeTyrePSnsrLostWarn",2,0x2f6,false,false,42,1,1,0,"RearLeftTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("ReRiTyrePSnsrLoBattWarn",2,0x2f6,false,false,41,1,1,0,"RearRightTyrePressureSensorLowBatteryWarning"));
        signalInfos.add(new SignalInfo("ReRiTyrePSnsrLostWarn",2,0x2f6,false,false,40,1,1,0,"RearRightTyrePressureSensorLostWarning"));
        signalInfos.add(new SignalInfo("FrntLeTyreTWarn",2,0x2f6,false,false,55,2,1,0,"FrontLeftTyreTemperatureWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyreTWarn",2,0x2f6,false,false,53,2,1,0,"FrontRightTyreTemperatureWarning"));
        signalInfos.add(new SignalInfo("ReLeTyreTWarn",2,0x2f6,false,false,51,2,1,0,"RearLeftTyreTemperatureWarning"));
        signalInfos.add(new SignalInfo("ReRiTyreTWarn",2,0x2f6,false,false,49,2,1,0,"RearRightTyreTemperatureWarning"));
        signalInfos.add(new SignalInfo("FrntRiTyrePSnsrLrngSts",2,0x2f6,false,false,63,2,1,0,"FrontRightTyrePressureSensorLearningStatus"));
        signalInfos.add(new SignalInfo("ReLeTyrePSnsrLrngSts",2,0x2f6,false,false,61,2,1,0,"RearLeftTyrePressureSensorLearningStatus"));
        signalInfos.add(new SignalInfo("ReRiTyrePSnsrLrngSts",2,0x2f6,false,false,59,2,1,0,"RearRightTyrePressureSensorLearningStatus"));
        signalInfos.add(new SignalInfo("FrntLeTyrePSnsrLrngSts",2,0x2f6,false,false,57,2,1,0,"FrontLeftTyrePressureSensorLearningStatus"));
        signalInfos.add(new SignalInfo("TyrePWarnFV",2,0x2f6,false,false,71,16,1,0,""));
        signalInfos.add(new SignalInfo("TyrePWarnMAC",2,0x2f6,false,false,87,32,1,0,""));
        signalInfos.add(new SignalInfo("BattURawSigGrpChks",2,0x243,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("BattURawSigGrpCntr",2,0x243,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("BattURaw",2,0x243,false,false,23,15,0.001,0.0,"Battery Voltage raw\n电池电压"));
        signalInfos.add(new SignalInfo("BattSocRawSigGrpChks",2,0x243,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("BattSocRawSigGrpCntr",2,0x243,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("BattSocRaw",2,0x243,false,false,49,10,0.1,0.0,"Battery State of charge raw\n电池SOC"));
        signalInfos.add(new SignalInfo("FailrStsSigGrpChks",2,0x161,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("FailrSts",2,0x161,false,false,15,3,1,0,"EPS 故障状态\nEPS Failure Status"));
        signalInfos.add(new SignalInfo("FailrStsSigGrpCntr",2,0x161,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("DSTReqCtrlSts",2,0x161,false,false,23,3,1,0,"EPS 反馈BCS当前DST功能的fault状态\nEPS status related to execution of DST from BCS"));
        signalInfos.add(new SignalInfo("HODSts",2,0x161,false,false,20,2,1,0,"EPS 检测驾驶员手是否在方向盘上\nEPS indicate the driver hands on the steering wheel or not"));
        signalInfos.add(new SignalInfo("HODVld",2,0x161,false,false,18,1,1,0,"HOD 信号有效位\nHOD signal Valid Flag"));
        signalInfos.add(new SignalInfo("HODQly",2,0x161,false,false,31,8,1,0,"HOD 信号置信度值\nIndicate the HOD signal confidence  spcifically for hands off detect."));
        signalInfos.add(new SignalInfo("PasReqSigGrpChks",2,0x161,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("PasReqSigGrpCntr",2,0x161,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("PASReqFbSts",2,0x161,false,false,55,3,1,0,"EPS 对于PAS的请求反馈\nEPS feedback for PAS request"));
        signalInfos.add(new SignalInfo("PASReqFltSts",2,0x161,false,false,52,4,1,0,"EPS 反馈PAS当前Fault 状态\nEPS status related to execution of PAS"));
        signalInfos.add(new SignalInfo("EPSSteerAssiLvlSt",2,0x1e0,false,false,7,3,1,0,"EPS 反馈当前真正执行的转向手感"));
        signalInfos.add(new SignalInfo("EPSThermDrtSts",2,0x1e0,false,false,4,1,1,0,"Indicate the EPS internal thermal derating status"));
        signalInfos.add(new SignalInfo("EPSSteerAsstPrmSetAllwd",2,0x1e0,false,false,3,3,1,0,"EPS 反馈当前驾驶模式或者转向手感切换是否被允许"));
        signalInfos.add(new SignalInfo("EPSAVPHPPCtrlStsSigGrpChks",2,0x29c,false,false,15,8,1,0,""));
        signalInfos.add(new SignalInfo("AVPHPPReqFbSts",2,0x29c,false,false,23,3,1,0,"EPS feedback for AVP/HPP Request\nEPS对于AVP/HPP的请求反馈"));
        signalInfos.add(new SignalInfo("AVPHPPCtrSts",2,0x29c,false,false,20,1,1,0,"What channel of the EPS is in control\n表征EPS目前正在响应的通道"));
        signalInfos.add(new SignalInfo("EPSAVPHPPCtrlStsSigGrpCntr",2,0x29c,false,false,19,4,1,0,""));
        signalInfos.add(new SignalInfo("AVPHPPReqFltSts",2,0x29c,false,false,31,4,1,0,"EPS fault status related to execution of AVP/HPP\nEPS反馈AVP/HPP当前的故障状态"));
        signalInfos.add(new SignalInfo("AVPHPPCtrlAvlSts",2,0x29c,false,false,27,2,1,0,"EPS AVP/HPP Feature Control Avaliable Status\nEPS对于 AVP/HPP 功能的控制可用状态"));
        signalInfos.add(new SignalInfo("EPSFaultInfoFlag",2,0x2cd,false,false,7,1,1,0,"EPS Fault Information Flag"));
        signalInfos.add(new SignalInfo("CcwEOTValue",2,0x3e0,false,false,7,14,0.0625,0.0,"Counter Clock wise End of Stop Value,Direction: Counter Clock wise is.逆时针软止点(末端)位置, 方向:逆时针为正"));
        signalInfos.add(new SignalInfo("CcwEOTDet",2,0x3e0,false,false,9,1,1,0,"Counter Clock wise End of Stop Value Learned Flag. 逆时针软止点(末端)位置学习成功标志位"));
        signalInfos.add(new SignalInfo("CwEOTDet",2,0x3e0,false,false,8,1,1,0,"Clock wise End of Stop Value Learned Flag. 顺时针软止点(末端)位置学习成功标志位"));
        signalInfos.add(new SignalInfo("CwEOTValue",2,0x3e0,false,false,23,14,0.0625,-780.0,"Clock wise End of Stop Value, Direction:Clock wise is.顺时针软止点(末端)位置, 方向:顺时针为负"));
        signalInfos.add(new SignalInfo("EPSMotTqCmd",2,0xb5,false,true,7,11,0.01,0.0,"转向电机请求扭矩 EPS Motor Torque Command 方向：Clockwise: -; Anti-Clockwise: +；\n"));
        signalInfos.add(new SignalInfo("VehSpdEPSInUse",2,0xb5,false,false,23,16,0.05625,0.0,"Vehicle Speed EPS Internal Use 转向内部使用车速"));
        signalInfos.add(new SignalInfo("AdasReqCtrlADDSigGrpChks",2,0xb5,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("AdasReqCtrlADDSigGrpCntr",2,0xb5,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("DrvrSteerActvADD",2,0xb5,false,false,55,1,1,0,"Indicate if the driver override or not to ADD driving lateral control request"));
        signalInfos.add(new SignalInfo("SteerWhlVibStsADD",2,0xb5,false,false,54,1,1,0,"Indicate the steering wheel vibration active or not to ADD"));
        signalInfos.add(new SignalInfo("ADASReqFltStsADD",2,0xb5,false,false,53,3,1,0,"Feedback fault status to ADD driving lateral control request"));
        signalInfos.add(new SignalInfo("ADASReqFbStsADD",2,0xb5,false,false,50,3,1,0,"Feedback status to ADD driving lateral control request"));
        signalInfos.add(new SignalInfo("ADASReqOvlySteerWhlTqADD",2,0xb5,false,true,63,11,0.01,0.0,"Equivalent steering wheel torque from ADD driving lateral control request\n'+' as the equivalent torque generate Anti Clockwise of steering wheel\n' ' as the equivalent torque generate Clockwise of steering wheel"));
        signalInfos.add(new SignalInfo("ADASReqOvlyTqADD",2,0xb5,false,true,79,14,0.00390625,0.0,"Overlay Torque  Motor Torque  from ADD driving lateral control request\n方向 \n顺时针转动方向盘请求  \n逆时针转动方向盘请求"));
        signalInfos.add(new SignalInfo("PinionSteerSigGrpChks",2,0xb5,false,false,135,8,1,0,""));
        signalInfos.add(new SignalInfo("PinionSteerSigGrpCntr",2,0xb5,false,false,139,4,1,0,""));
        signalInfos.add(new SignalInfo("PinionSteerAgl",2,0xb5,false,true,151,15,0.0625,0.0,"方向盘转角\nSteering Wheel Angle\n方向 \nAnticlockwise direction of steering wheel increase angle output.\nClockwise direction of steering wheel decrease angle output."));
        signalInfos.add(new SignalInfo("PinionSteerAglVld",2,0xb5,false,false,152,1,1,0,"方向盘转角有效位\nSteering Wheel Angle Valid Flag"));
        signalInfos.add(new SignalInfo("SteerWhlTq",2,0xb5,false,true,167,11,0.01,0.0,"方向盘扭矩\nSteering Wheel Torque\n方向  Clockwise     Anti Clockwise"));
        signalInfos.add(new SignalInfo("SteerWhlTqVld",2,0xb5,false,false,172,1,1,0,"方向盘扭矩有效位\nSteering Wheel torque Valid Flag"));
        signalInfos.add(new SignalInfo("PinionSteerAglSpd",2,0xb5,false,true,183,12,1,0,"方向盘转速\nSteering Wheel Velocity\n方向  Clockwise     Anti Clockwise"));
        signalInfos.add(new SignalInfo("PinionSteerAglSpdVld",2,0xb5,false,false,187,1,1,0,"方向盘转速有效位\nSteering Wheel Velocity Valid Flag"));
        signalInfos.add(new SignalInfo("PinionSteerAglSpdVldV2C",2,0xb5,false,false,186,1,1,0,"Pinion Velocity Valid Flag\n方向盘转速有效位"));
        signalInfos.add(new SignalInfo("PinionSteerAglVldV2C",2,0xb5,false,false,185,1,1,0,"PinionAngle Valid Flag\n方向盘转交有效位"));
        signalInfos.add(new SignalInfo("PinionAglSpdV2C",2,0xb5,false,true,199,12,1,0,"Convert VGR Pinion Velocity to CGR Velocity. Direction: Clockwise; Counter Clockwise.VGR方向盘转速转成CGR转速.顺时针为负,逆时针为正"));
        signalInfos.add(new SignalInfo("PinionSteerAglV2C",2,0xb5,false,true,215,15,0.0625,0.0,"Convert Variable Gear Ratio(VGR) PinionAngle to a Constant Gear Ratio(CGR) Pinion Angle.将VGR方向盘转角转成CGR 转角"));
        signalInfos.add(new SignalInfo("ElecPwrCns",2,0xb5,false,false,231,11,0.1,0.0,"EPS 电流\nEPS battery consumption"));
        signalInfos.add(new SignalInfo("EstimdRkFVld",2,0xb5,false,false,236,1,1,0,"EPS内部估算的齿条力有效位\nEPS internal estimated rack force valid flag"));
        signalInfos.add(new SignalInfo("EstimdRkF",2,0xb5,false,true,247,16,1,0,"EPS内部估算的齿条力\nEPS internal estimated rack force"));
        signalInfos.add(new SignalInfo("EPSChassisCanfdNodeAddress",2,0x529,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("EPSChassisCanfdActiveWakeup",2,0x529,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("EPSChassisCanfdRepeatMsgReq",2,0x529,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23EPS",2,0x529,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22EPS",2,0x529,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21EPS",2,0x529,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20EPS",2,0x529,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19EPS",2,0x529,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18EPS",2,0x529,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17EPS",2,0x529,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("EPSChassisCanfdRepeatMsgSt",2,0x529,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31EPS",2,0x529,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30EPS",2,0x529,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29EPS",2,0x529,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28EPS",2,0x529,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27EPS",2,0x529,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26EPS",2,0x529,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25EPS",2,0x529,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24EPS",2,0x529,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39EPS",2,0x529,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38EPS",2,0x529,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37EPS",2,0x529,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36EPS",2,0x529,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35EPS",2,0x529,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34EPS",2,0x529,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33EPS",2,0x529,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32EPS",2,0x529,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47EPS",2,0x529,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46EPS",2,0x529,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45EPS",2,0x529,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44EPS",2,0x529,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43EPS",2,0x529,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42EPS",2,0x529,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41EPS",2,0x529,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40EPS",2,0x529,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnEPS",2,0x529,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("EPSToVCCDChassisDiagResp",2,0x623,false,false,7,512,1,0,"EPSToVCCDChassisDiagRespNpdu"));
        signalInfos.add(new SignalInfo("FrntMotBkpSigGrpChks",2,0x73,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotBkpSigGrpCntr",2,0x73,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotActTqBkp",2,0x73,false,false,23,15,0.1,-1638.3,"Front motor actual torque  at motor output axle  backup"));
        signalInfos.add(new SignalInfo("FrntMotActSpdBkp",2,0x73,false,false,39,16,1.0,-32768.0,"Front motor actual speed backup"));
        signalInfos.add(new SignalInfo("FrntMotMaxDynTqCpBkp",2,0x73,false,false,55,10,1,0,"Front motor maximum dynamic torque capacity at motor output axle  backup"));
        signalInfos.add(new SignalInfo("FrntMotMinDynTqCpBkp",2,0x73,false,false,71,10,1,-1023,"Front motor minimum dynamic torque capacity at motor output axle  backup"));
        signalInfos.add(new SignalInfo("FrntMotPtChVldSigGrpChks",2,0x73,false,false,87,8,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotPtChVld",2,0x73,false,false,92,1,1,0,"Front Motor Powertrains valid Channel"));
        signalInfos.add(new SignalInfo("FrntMotPtChVldSigGrpCntr",2,0x73,false,false,91,4,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotActCurBkp",2,0x73,false,false,103,14,0.1,-819.1,"Front motor actual current on DC bus  backup\nNegative means current flow from front motor to HV battery  positive means current flow from HV battery to front motor."));
        signalInfos.add(new SignalInfo("FrntMotActDampgStsBkp",2,0x73,false,false,105,1,1,0,"Front motor active damping status backup"));
        signalInfos.add(new SignalInfo("FrntMotBoostModAvlBkp",2,0x73,false,false,104,1,1,0,"Front motor boost mode available backup"));
        signalInfos.add(new SignalInfo("FrntMotAglRslvrBkp",2,0x73,false,false,119,12,0.1,0.0,"Front motor Angle Resolver backup"));
        signalInfos.add(new SignalInfo("FrntMotDrtStsBkp",2,0x73,false,false,121,1,1,0,"Front motor derating status backup"));
        signalInfos.add(new SignalInfo("FrntMotBoostModNotAvlRsn",2,0x73,false,false,135,4,1,0,"Front motor boost mode not available reasons backup"));
        signalInfos.add(new SignalInfo("FrntMotFltLvlIndcnBkpSigGrpChks",2,0x73,false,false,143,8,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotFltLvlIndcnBkpSigGrpCntr",2,0x73,false,false,147,4,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotSfSpdMaxBkp",2,0x73,false,false,159,16,1,-32768,"Front motor safe speed maximum backup"));
        signalInfos.add(new SignalInfo("FrntMotFltLvlIndcnBkp",2,0x73,false,false,175,3,1,0,"Front motor fault level indication backup"));
        signalInfos.add(new SignalInfo("FrntMotModStsBkpChks",2,0x73,false,false,183,8,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotModStsBkpCntr",2,0x73,false,false,187,4,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotModStsBkp",2,0x73,false,false,199,5,1,0,"Front motor mode status backup"));
        signalInfos.add(new SignalInfo("FrntMotActUBkpSigGrpChks",2,0x73,false,false,207,8,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotActUBkpSigGrpCntr",2,0x73,false,false,211,4,1,0,""));
        signalInfos.add(new SignalInfo("FrntMotActUBkp",2,0x73,false,false,223,14,0.1,0.0,"Front motor actual voltage backup"));
        signalInfos.add(new SignalInfo("SpclRoadSurfTypSigGrpChks",2,0x157,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("SpclRoadSurfTypSigGrpCntr",2,0x157,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUSpclRoadSurfTypForDisp",2,0x157,false,false,23,4,1,0,"路面特征"));
        signalInfos.add(new SignalInfo("VCULatSlopForDisp",2,0x157,false,false,31,12,0.1,-45.0,"侧向坡度"));
        signalInfos.add(new SignalInfo("VCULgtSlopForDisp",2,0x157,false,false,35,12,0.1,-45.0,"纵向坡度"));
        signalInfos.add(new SignalInfo("LatAccrValSigGrpChks",2,0x157,false,false,55,8,1,0,""));
        signalInfos.add(new SignalInfo("LatAccrValSigGrpCntr",2,0x157,false,false,59,4,1,0,""));
        signalInfos.add(new SignalInfo("VCULatAccrValForDisp",2,0x157,false,false,71,12,0.01,-1.5,"车辆实际侧向加速度"));
        signalInfos.add(new SignalInfo("VCULgtAccrValForDisp",2,0x157,false,false,75,12,0.01,-1.5,"车辆实际纵向加速度"));
        signalInfos.add(new SignalInfo("VCUMaxLatAdhCpForDisp",2,0x157,false,false,95,12,0.01,-1.5,"侧向路面附着极限"));
        signalInfos.add(new SignalInfo("VCUMaxLgtAdhCpForDisp",2,0x157,false,false,99,12,0.01,-1.5,"纵向路面附着极限"));
        signalInfos.add(new SignalInfo("VCUMaxLgtBrkCpForDisp",2,0x157,false,false,119,12,0.01,-1.5,"maximum longitudinal brake capacity for display车辆纵向制动能力极限"));
        signalInfos.add(new SignalInfo("VCUMaxLgtPrpsnCpForDisp",2,0x157,false,false,123,12,0.01,-1.5,"车辆纵向驱动能力极限"));
        signalInfos.add(new SignalInfo("VCUVertAccrValForDisp",2,0x157,false,false,143,12,0.01,-1.5,"车辆实际垂向加速度"));
        signalInfos.add(new SignalInfo("VCUGearChgFailrSts",2,0x157,false,false,167,1,1,0,"Gear change failure status"));
        signalInfos.add(new SignalInfo("VCUCSTSet",2,0x157,false,false,164,1,1,0,"CST function 舒适制动功能设定"));
        signalInfos.add(new SignalInfo("VCUBatPackTempForDisp",2,0x172,false,false,7,4,1,0,"VCU Battery Package Temperature for Display热力图:电池温度等级"));
        signalInfos.add(new SignalInfo("VCUFLBrkDisTempForDisp",2,0x172,false,false,3,4,1,0,"VCU Front Left Brake Disc Temperature for Display热力图:左前制动盘温度等级"));
        signalInfos.add(new SignalInfo("VCUFLTireTempForDisp",2,0x172,false,false,15,4,1,0,"VCU Front Left Tire Temperature for Display热力图:左前轮胎温度等级"));
        signalInfos.add(new SignalInfo("VCUFRBrkDisTempForDisp",2,0x172,false,false,11,4,1,0,"VCU Front Right Brake Disc Temperature for Display热力图:右前制动盘温度等级"));
        signalInfos.add(new SignalInfo("VCUFrntMotTempForDisp",2,0x172,false,false,23,4,1,0,"VCU Front Motor Temperature for Display热力图:前电机温度等级"));
        signalInfos.add(new SignalInfo("VCUFRTireTempForDisp",2,0x172,false,false,19,4,1,0,"VCU Front Right  Tire Temperature for Display热力图:右前轮胎温度等级"));
        signalInfos.add(new SignalInfo("VCURearMotTempForDisp",2,0x172,false,false,31,4,1,0,"VCU Rear Motor Temperature for Display热力图:后电机温度等级"));
        signalInfos.add(new SignalInfo("VCURLBrkDisTempForDisp",2,0x172,false,false,27,4,1,0,"VCU Rear Left Brake Disc Temperature for Display热力图:左后制动盘温度等级"));
        signalInfos.add(new SignalInfo("VCURLTireTempForDisp",2,0x172,false,false,39,4,1,0,"VCU Rear Left Tire Temperature for Display热力图:左后轮胎温度等级"));
        signalInfos.add(new SignalInfo("VCURRBrkDisTempForDisp",2,0x172,false,false,35,4,1,0,"VCU Rear Right Brake Disc Temperature for Display热力图:右后制动盘温度等级"));
        signalInfos.add(new SignalInfo("VCURRTireTempForDisp",2,0x172,false,false,47,4,1,0,"VCU Rear Right Tire Temperature for Display热力图:右后轮胎温度等级"));
        signalInfos.add(new SignalInfo("VehBodyPitAngForDisp",2,0x172,false,false,43,12,0.1,-45.0,"vehicle body pitch angle for display车身俯仰角"));
        signalInfos.add(new SignalInfo("VehBodyRolAngForDisp",2,0x172,false,false,63,12,0.1,-45.0,"vehicle body roll angle for display车身侧倾角"));
        signalInfos.add(new SignalInfo("VehBodyYawAngForDisp",2,0x172,false,false,67,12,0.1,-45.0,"vehicle body yaw angle for display车身横摆角"));
        signalInfos.add(new SignalInfo("VCUTrlrModEntryInhbReas",2,0x1e1,false,false,3,3,1,0,"VCU Trailer Mode Entry Inhibit Reasons\nVCU反馈拖车模式禁止进入原因"));
        signalInfos.add(new SignalInfo("VCUDrvModSteerAsstPrmSts",2,0x1e1,false,false,15,3,1,0,"VCU Drive mode steering assistance parameter Status\n驾驶模式转向助力特性参数设置"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspDampgPrmSts",2,0x1e1,false,false,12,2,1,0,"VCU Drive mode suspension damping parameter Status\n驾驶模式悬架阻尼参数设置"));
        signalInfos.add(new SignalInfo("VCUExtmPfmncMod",2,0x1e1,false,false,10,1,1,0,"VCU extreme performance mode\nVCU狂暴模式"));
        signalInfos.add(new SignalInfo("VCUTrlrModEntryAllwd",2,0x1e1,false,false,9,1,1,0,"VCU Trailer Mode Entry Allowed\n拖车模式允许进入"));
        signalInfos.add(new SignalInfo("VCUTrlrModExtAllwd",2,0x1e1,false,false,8,1,1,0,"VCU Trailer Mode Exit Allowed\n拖车模式允许退出"));
        signalInfos.add(new SignalInfo("VCUAccrPrmSetAllwd",2,0x1e1,false,false,23,1,1,0,"VCU accelerate parameter Setting allowed\n驾驶模式加速特性参数设置允许"));
        signalInfos.add(new SignalInfo("VCUDrvModRgnPrmSts",2,0x1e1,false,false,22,7,1,1,"VCU Drive mode regeneration parameter Status\n驾驶模式能量回收特性参数设置"));
        signalInfos.add(new SignalInfo("VCUBatModAllwd",2,0x1e1,false,false,31,1,1,0,"VCU Battle Mode Allowed\nVCU赛道模式允许使用"));
        signalInfos.add(new SignalInfo("VCUExtmECOModStReq",2,0x1e1,false,false,30,1,1,0,"VCU Extremely ECO mode Request\n极致经济模式请求"));
        signalInfos.add(new SignalInfo("VCURgnPrmSetAllwd",2,0x1e1,false,false,29,1,1,0,"VCU regeneration parameter  Setting allowed\n驾驶模式能量回收特性参数设置允许"));
        signalInfos.add(new SignalInfo("VCUSteerAsstPrmSetAllwd",2,0x1e1,false,false,28,1,1,0,"VCU steering assistance parameter Setting allowed\n驾驶模式转向助力参数设置允许"));
        signalInfos.add(new SignalInfo("VCUSuspDampgPrmSetAllwd",2,0x1e1,false,false,27,1,1,0,"VCU steering assistance parameter Setting allowed\n驾驶模式悬架阻尼特性参数设置允许"));
        signalInfos.add(new SignalInfo("VCUSuspLvlgPrm1Allwd",2,0x1e1,false,false,26,1,1,0,"VCU suspension level parameter1 Setting allowed\n驾驶模式悬架高度最高设置允许"));
        signalInfos.add(new SignalInfo("VCUSuspLvlgPrm2Allwd",2,0x1e1,false,false,25,1,1,0,"VCU suspension level parameter2 Setting allowed\n驾驶模式悬架高度次高设置允许"));
        signalInfos.add(new SignalInfo("VCUSuspLvlgPrm3Allwd",2,0x1e1,false,false,24,1,1,0,"VCU suspension level parameter3 Setting allowed\n驾驶模式悬架高度中设置允许"));
        signalInfos.add(new SignalInfo("VCUSuspLvlgPrm4Allwd",2,0x1e1,false,false,39,1,1,0,"VCU suspension level parameter4 Setting allowed\n驾驶模式悬架高度次低设置允许"));
        signalInfos.add(new SignalInfo("VCUSuspLvlgPrm5Allwd",2,0x1e1,false,false,38,1,1,0,"VCU suspension level parameter5 Setting allowed\n驾驶模式悬架高度最低设置允许"));
        signalInfos.add(new SignalInfo("VCUWashModEntryAllwd",2,0x1e1,false,false,37,1,1,0,"VCU Wash Mode Entry allowed\n洗车模式允许进入"));
        signalInfos.add(new SignalInfo("VCUWashModExtAllwd",2,0x1e1,false,false,36,1,1,0,"VCU Wash Mode Exit allowed\n洗车模式允许退出"));
        signalInfos.add(new SignalInfo("LVPwrSplyBattErrStsSigGrpChks",2,0x1e1,false,false,55,8,1,0,""));
        signalInfos.add(new SignalInfo("LVPwrSplyBattErrStsSigGrpCntr",2,0x1e1,false,false,59,4,1,0,""));
        signalInfos.add(new SignalInfo("LVPwrSplyBattErrSts",2,0x1e1,false,false,71,1,1,0,"Low power supply battery error status\n低压供电电池故障状态"));
        signalInfos.add(new SignalInfo("TqDistbnRatOfAWDSigGrpChks",2,0x1e1,false,false,79,8,1,0,""));
        signalInfos.add(new SignalInfo("TqDistbnRatOfAWDSigGrpCntr",2,0x1e1,false,false,83,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUTqDistbnRatOfAWD",2,0x1e1,false,false,95,2,1.0,0.0,"2WD/4WD mode status"));
        signalInfos.add(new SignalInfo("VCUWashModExtAutoIndcn",2,0x1e1,false,false,103,3,1,0,"VCU wash mode exit automatically indication\nVCU洗车模式自动退出指示"));
        signalInfos.add(new SignalInfo("VCUDriftModSetSts",2,0x1e1,false,false,99,1,1,0,"VCU Drift Mode Setting Status\nVCU一键漂移功能设置状态"));
        signalInfos.add(new SignalInfo("VCUDrvModStSts",2,0x1e1,false,false,98,1,1,0,"VCU Drive mode setting status\n驾驶模式设定状态"));
        signalInfos.add(new SignalInfo("VCULnchPlusSts",2,0x1e1,false,false,97,2,1.0,0.0,"VCU Launch plus status\nVCU弹射模式状态"));
        signalInfos.add(new SignalInfo("VCUDrvModAccrPrmM1Sts",2,0x1e1,false,false,111,7,1,1,"VCU individual1 drive mode accecelaration pramameter status\nVCU个性化模式1加速参数设定状态"));
        signalInfos.add(new SignalInfo("VCUESCPataLampReq",2,0x1e1,false,false,104,1,1,0,"VCU ESC Pata lamp request"));
        signalInfos.add(new SignalInfo("VCUCrpSpdPrmStsForMem",2,0x1e1,false,false,119,4,1,0,"VCU creep speed parameter status for memory\nVCU缓行车速记忆参数"));
        signalInfos.add(new SignalInfo("VCUSnowModInhbReas",2,0x1e1,false,false,115,4,1,0,"VCU Snow mode inhibit reasons\nVCU雪地模式禁止原因"));
        signalInfos.add(new SignalInfo("EpbCtrlSigGrpChks",2,0x1e1,false,false,127,8,1,0,""));
        signalInfos.add(new SignalInfo("EpbCtrlSigGrpCntr",2,0x1e1,false,false,131,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUAutohdReq",2,0x1e1,false,false,143,1,1,0,"autohold拉起请求"));
        signalInfos.add(new SignalInfo("LVPwrSplyLoErrStsSigGrpChks",2,0x1e1,false,false,151,8,1,0,""));
        signalInfos.add(new SignalInfo("LVPwrSplyLoErrSts",2,0x1e1,false,false,159,1,1,0,"Low power supply low error status\n低压供电低风险故障状态"));
        signalInfos.add(new SignalInfo("LVPwrSplyLoErrStsSigGrpCntr",2,0x1e1,false,false,155,4,1,0,""));
        signalInfos.add(new SignalInfo("LVPwrSplyHiErrStsSigGrpChks",2,0x1e1,false,false,167,8,1,0,""));
        signalInfos.add(new SignalInfo("LVPwrSplyHiErrStsSigGrpCntr",2,0x1e1,false,false,171,4,1,0,""));
        signalInfos.add(new SignalInfo("LVPwrSplyHiErrSts",2,0x1e1,false,false,183,1,1,0,"Low power supply high error status\n低压供电高风险故障状态"));
        signalInfos.add(new SignalInfo("LVPwrSplyDCDCErrSts",2,0x1e1,false,false,182,1,1,0,"Low voltage Power Supply DCDC Error Statue\nDCDC故障导致的低压供电问题"));
        signalInfos.add(new SignalInfo("VCUBatModInhbReas",2,0x1e1,false,false,191,5,1,0,"VCU Battle Mode Inhibit Reasons\nVCU赛道模式禁用原因"));
        signalInfos.add(new SignalInfo("VCUWashModInhbReas",2,0x1e1,false,false,186,3,1,0,"VCU Wash Mode inhibit Reasons\nVCU反馈洗车模式禁止原因"));
        signalInfos.add(new SignalInfo("ExtrLtgStsHiBeam",2,0x202,false,false,7,2,1,0,"远光灯总状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsLoBeam",2,0x202,false,false,5,2,1,0,"近光总状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsStop",2,0x202,false,false,3,2,1,0,"刹车灯状态总反馈"));
        signalInfos.add(new SignalInfo("ExtrLtgStsTurnIndrLe",2,0x202,false,false,1,2,1,0,"左转向灯状态汇总"));
        signalInfos.add(new SignalInfo("ExtrLtgStsTurnIndrRi",2,0x202,false,false,15,2,1,0,"右转向灯状态汇总"));
        signalInfos.add(new SignalInfo("SwtIndcr",2,0x202,false,false,13,3,1,0,"转向拨杆信号"));
        signalInfos.add(new SignalInfo("StsOfIndcr",2,0x202,false,false,34,3,1,0,"转向状态指示"));
        signalInfos.add(new SignalInfo("AdpvGlareFreeHiBeamSetSts",2,0x223,false,false,7,1,1,0,"ADB setting Status"));
        signalInfos.add(new SignalInfo("AFSFltWarn",2,0x223,false,false,6,1,1,0,"AFS Fault Warning"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnBSDLi",2,0x223,false,false,5,1,1,0,"盲区检测灯故障"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnCornrLi",2,0x223,false,false,4,1,1,0,"角灯故障"));
        signalInfos.add(new SignalInfo("FenderLgtActLe",2,0x223,false,false,3,2,1,0,"Left Fender light  Active \n左翼子板灯点灯控制"));
        signalInfos.add(new SignalInfo("FenderLgtActRi",2,0x223,false,false,1,2,1,0,"RightFender light  Active \n右翼子板灯点灯控制"));
        signalInfos.add(new SignalInfo("VCUDrvModSubM1TypeSts",2,0x223,false,false,15,4,1,0,"VCU individual 1 mode sub type status\nVCU驾驶模式个性化1子类型状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSubM2TypeSts",2,0x223,false,false,11,4,1,0,"VCU individual 2  mode sub type status\nVCU驾驶模式个性化2子类型状态"));
        signalInfos.add(new SignalInfo("VCUDrvModRgnPrmStsResv",2,0x223,false,false,23,7,1,0,"VCU Drive mode regeneration parameter Status reserve\n驾驶模式能量回收特性参数设置预留信号"));
        signalInfos.add(new SignalInfo("ActnOfCenHiMntdStopLamp",2,0x223,false,false,16,1,1,0,"高位刹车灯激活命令"));
        signalInfos.add(new SignalInfo("VCUDrvModRgnLvlSts",2,0x223,false,false,31,3,1,0,"VCU Drive Mode Regeneration Level Status\nVCU驾驶模式能量回收强度级别"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnDRL",2,0x223,false,false,28,1,1,0,"日行灯故障"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnHiBeam",2,0x223,false,false,27,1,1,0,"远光灯故障"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnLowBeami",2,0x223,false,false,26,1,1,0,"近光灯故障"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnPosnLi",2,0x223,false,false,25,1,1,0,"位置灯故障"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnReFogLi",2,0x223,false,false,24,1,1,0,"后雾灯故障"));
        signalInfos.add(new SignalInfo("VCUExtmPfmncModInhbInd",2,0x223,false,false,39,3,1,0,"VCU extreme performance mode inhibit indication\nVCU狂暴模式禁止原因"));
        signalInfos.add(new SignalInfo("LeDoorLogoLgtActFrt",2,0x223,false,false,36,2,1,0,"Left door Logo light  fornt side  Active左前侧门照地灯点灯控制"));
        signalInfos.add(new SignalInfo("LeDoorLogoLgtActRear",2,0x223,false,false,34,2,1,0,"Left door Logo light rear side   Active左后侧门照地灯点灯控制"));
        signalInfos.add(new SignalInfo("ActnOfReFogLamp",2,0x223,false,false,32,1,1,0,"后雾灯激活命令"));
        signalInfos.add(new SignalInfo("VCUDrvModARSPrmBatSts",2,0x223,false,false,47,3,1.0,0.0,"VCU battle drive mode ASR pramameter status\nVCU舒适模式尾翼参数设置状态"));
        signalInfos.add(new SignalInfo("VCUDrvModARSPrmCmftSts",2,0x223,false,false,44,3,1.0,0.0,"VCU comfort drive mode ASR pramameter status\nVCU舒适模式尾翼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSwtAllwd",2,0x223,false,false,41,1,1,0,"VCU Drive Mode Switch Allowed\nVCU驾驶模式切换允许"));
        signalInfos.add(new SignalInfo("ActnOfReRegPlateLamp",2,0x223,false,false,40,1,1,0,"牌照灯激活状态"));
        signalInfos.add(new SignalInfo("VCUDrvModARSPrmM1Sts",2,0x223,false,false,55,3,1.0,0.0,"VCU individual1 drive mode ASR pramameter status\nVCU个性化模式1尾翼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModARSPrmM2Sts",2,0x223,false,false,52,3,1.0,0.0,"VCU individual2 drive mode ASR pramameter status\nVCU个性化模式2尾翼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModARSPrmSptSts",2,0x223,false,false,63,3,1.0,0.0,"VCU sport drive mode ASR pramameter status\nVCU舒适模式尾翼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUExtmPfmncModTmr",2,0x223,false,false,60,5,1.0,0.0,"VCU extreme performance mode timer\nVCU狂暴模式计时"));
        signalInfos.add(new SignalInfo("VCUOffRoadModInhbReas",2,0x223,false,false,71,4,1,0,"VCU Off road mode inhibit reasons\nVCU越野模式禁止使用原因"));
        signalInfos.add(new SignalInfo("VCUOffRoadModInhbReasPop",2,0x223,false,false,67,2,1,0,"VCU Off road mode inhibit reasons pop\nVCU越野模式自动退出原因弹窗"));
        signalInfos.add(new SignalInfo("OutDoorLgtActLe",2,0x223,false,false,65,2,1,0,"Left OutDoor handle light Active  front &rear \n 左 前和后侧 门把手灯点亮控制"));
        signalInfos.add(new SignalInfo("ChrgnlghtBritSet",2,0x223,false,false,79,8,1,0,"charge light brightness Setting"));
        signalInfos.add(new SignalInfo("ExtLampFltWarn",2,0x223,false,false,87,1,1,0,""));
        signalInfos.add(new SignalInfo("VCUDrvModBrkFeelPrmM1Sts",2,0x223,false,false,86,7,1,1,"VCU individual1 drive mode accecelaration pramameter status\nVCU个性化模式1制动踏板感参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModBrkFeelPrmM2Sts",2,0x223,false,false,95,7,1,1,"VCU individual2 drive mode brake feeling pramameter status\nVCU个性化模式2制动踏板感参数参数设定状态"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnRRPLi",2,0x223,false,false,88,1,1,0,"牌照灯故障"));
        signalInfos.add(new SignalInfo("VCUSpdLimrValDsip",2,0x223,false,false,103,9,1.0,0.0,"VCU Speed Limiter Value Display\nVCU可调限速功能显示"));
        signalInfos.add(new SignalInfo("VCUSpdLimrSts",2,0x223,false,false,110,1,1,0,"VCU Speed Limiter Status\nVCU可调限速功能状态"));
        signalInfos.add(new SignalInfo("VCUSpdLimrSetAvl",2,0x223,false,false,109,1,1,0,"VCU Speed Limiter Set Available\nVCU可调限速功能可设置状态"));
        signalInfos.add(new SignalInfo("VCUSpdLimrValSetAvl",2,0x223,false,false,108,2,1,0,"VCU Speed Limiter Value Set Available\nVCU可调限速功能车速值可设状态"));
        signalInfos.add(new SignalInfo("VCUSpdLimrAlrm",2,0x223,false,false,106,1,1,0,"VCU Speed Limiter Alarm\nVCU可调限速功能警报"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnRvrsLi",2,0x223,false,false,105,1,1,0,"倒车灯故障"));
        signalInfos.add(new SignalInfo("VCUSpdLimrValSts",2,0x223,false,false,104,9,1,0,"VCU Speed Limiter Value Status\nVCU可调限速车速值"));
        signalInfos.add(new SignalInfo("VCUDrvModARSPrmSptPluSts",2,0x223,false,false,127,3,1.0,0.0,"VCU sport plus mode ARS pramameter status\nVCU运动+模式ARS参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModKnobRotFlg",2,0x223,false,false,124,1,1,0,"VCU Drive mode knob rotate flag\nVCU驾驶模式旋钮拨动标志位"));
        signalInfos.add(new SignalInfo("VCUDrvModSteerAsstPrmBatSts",2,0x223,false,false,123,3,1,0,"VCU battle drive mode steering assistance pramameter status\nVCU赛道模式转向助力参数设定状态"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnStopLi",2,0x223,false,false,120,1,1,0,"刹车灯故障"));
        signalInfos.add(new SignalInfo("VCUDrvModSteerAsstPrmCmftSts",2,0x223,false,false,135,3,1,0,"VCU comfort drive mode accecelaration pramameter status\nVCU舒适模式转向助力参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSteerAsstPrmM1Sts",2,0x223,false,false,132,3,1,0,"VCU individual1 drive mode steering assistance pramameter status\nVCU个性化模式1转向助力参数设定状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsBSDLiLe",2,0x223,false,false,129,2,1,0,"左盲区检测灯状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSteerAsstPrmM2Sts",2,0x223,false,false,143,3,1,0,"VCU individual2 drive mode steering assistance pramameter status\nVCU个性化模式2转向助力参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSteerAsstPrmSptSts",2,0x223,false,false,140,3,1,0,"VCU sport drive mode steering assistance pramameter status\nVCU运动模式转向助力参数设定状态"));
        signalInfos.add(new SignalInfo("OutDoorLgtActRi",2,0x223,false,false,137,2,1,0,"Right OutDoor handle light Active  front &rear    右 前和后侧 门把手灯点亮控制"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspDampgPrmBatSts",2,0x223,false,false,151,2,1,0,"VCU battle drive mode suspension damping pramameter status\nVCU赛道模式悬架阻尼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspDampgPrmCmftSts",2,0x223,false,false,149,2,1,0,"VCU comfort drive mode suspension damping pramameter status\nVCU舒适模式悬架阻尼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspDampgPrmM1Sts",2,0x223,false,false,147,2,1,0,"VCU individual1 drive mode suspension damping pramameter status\nVCU个性化模式1悬架阻尼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspDampgPrmM2Sts",2,0x223,false,false,145,2,1,0,"VCU individual2 drive mode suspension damping pramameter status\nVCU个性化模式2悬架阻尼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspDampgPrmSptSts",2,0x223,false,false,159,2,1,0,"VCU sport drive mode suspension damping pramameter status\nVCU运动模式悬架阻尼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspLvlgPrmBtatSts",2,0x223,false,false,157,3,1.0,0.0,"VCU battle drive mode suspension level pramameter status\nVCU赛道模式悬架高度参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspLvlgPrmCmftSts",2,0x223,false,false,154,3,1.0,0.0,"VCU comfort drive mode suspension level pramameter status\nVCU舒适模式悬架高度参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspLvlgPrmM1Sts",2,0x223,false,false,167,3,1.0,0.0,"VCU individual1 drive mode suspension level pramameter status\nVCU个性化模式1悬架高度参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspLvlgPrmM2Sts",2,0x223,false,false,164,3,1.0,0.0,"VCU individual2 drive mode suspension level pramameter status\nVCU个性化模式2悬架高度参数设定状态"));
        signalInfos.add(new SignalInfo("RiDoorLogoLgtActFrt",2,0x223,false,false,161,2,1,0,"Right door Logo light  fornt side  Active右前侧门照地灯点灯控制"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspLvlgPrmSptSts",2,0x223,false,false,175,3,1.0,0.0,"VCU sport drive mode suspension level pramameter status\nVCU运动模式悬架高度参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSwtInhbReas",2,0x223,false,false,172,4,1,0,"VCU Drive Mode Switch Inhibit Reasons\nVCU驾驶模式禁止切换原因"));
        signalInfos.add(new SignalInfo("ExtLampFltWarnTurnIndr",2,0x223,false,false,168,1,1,0,"转向灯故障"));
        signalInfos.add(new SignalInfo("FMHModAct",2,0x223,false,false,183,1,1,0,"Follow Me Home Mode Active  伴我回家模式激活状态"));
        signalInfos.add(new SignalInfo("VCUDrvModAccrPrmBatSts",2,0x223,false,false,182,7,1,1,"VCU battle drive mode brake feeling pramameter status\nVCU赛道模式加速参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModAccrPrmCmftSts",2,0x223,false,false,191,7,1,1,"VCU comfort drive mode accecelaration pramameter status\nVCU舒适模式加速参数设定状态"));
        signalInfos.add(new SignalInfo("FogSetReReq",2,0x223,false,false,184,1,1,0,"后雾灯开启请求"));
        signalInfos.add(new SignalInfo("ChrgnlghtColorSet",2,0x223,false,false,199,8,1,0,"charge light color Setting"));
        signalInfos.add(new SignalInfo("VCUDrvModAccrPrmM2Sts",2,0x223,false,false,207,7,1,1,"VCU individual2 drive mode accecelaration pramameter status\nVCU个性化模式2加速参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModAccrPrmSptSts",2,0x223,false,false,215,7,1,1,"VCU sport drive mode accecelaration pramameter status\nVCU运动模式加速参数设定状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsBSDLiRi",2,0x223,false,false,223,2,1,0,"右盲区检测灯状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsCornrgLiLe",2,0x223,false,false,221,2,1,0,"左角灯状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsCornrgLiRi",2,0x223,false,false,219,2,1,0,"右角灯状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsDRL",2,0x223,false,false,217,2,1,0,"日行灯总状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsPosLiFrnt",2,0x223,false,false,231,2,1,0,"前位置灯状态汇总"));
        signalInfos.add(new SignalInfo("ExtrLtgStsPosLiRe",2,0x223,false,false,229,2,1,0,"后位置灯状态汇总"));
        signalInfos.add(new SignalInfo("ExtrLtgStsReFog",2,0x223,false,false,227,2,1,0,"后雾灯状态汇总"));
        signalInfos.add(new SignalInfo("ExtrLtgStsReverseLi",2,0x223,false,false,225,2,1,0,"倒车灯状态汇总"));
        signalInfos.add(new SignalInfo("VCULnchPlusFailIndcn",2,0x223,false,false,239,7,1.0,0.0,"Launch plus fail indication\nVCU弹射模式失败原因"));
        signalInfos.add(new SignalInfo("VCUDrvModAccrPrmSptPluSts",2,0x223,false,false,247,7,1,1,"VCU sport plus mode drive mode accecelaration pramameter status\nVCU运动+模式加速参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSteerAsstPrmSptPluSts",2,0x223,false,false,255,3,1,0,"VCU sport plus mode steering assistance pramameter status\nVCU运动+模式转向助力参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspDampgPrmSptPluSts",2,0x223,false,false,252,2,1,0,"VCU sport plus mode  suspension damping pramameter status\nVCU运动+模式悬架阻尼参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModSuspLvlgPrmSptPluSts",2,0x223,false,false,250,3,1.0,0.0,"VCU sport plus mode suspension level pramameter status\nVCU运动+模式悬架高度参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModTCSPrmCmftSts",2,0x223,false,false,263,3,1,0,"VCU comfort mode TCS pramameter status\nVCU舒适模式TCS参数参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModTCSPrmSptPluSts",2,0x223,false,false,260,3,1,0,"VCU sport plus mode TCS pramameter status\nVCU运动+TCS参数参数设定状态"));
        signalInfos.add(new SignalInfo("RiDoorLogoLgtActRear",2,0x223,false,false,257,2,1,0,"Right  door Logo light rear side   Active右后侧门照地灯点灯控制"));
        signalInfos.add(new SignalInfo("VCUDrvModTCSPrmSptSts",2,0x223,false,false,271,3,1,0,"VCU sport mode TCS pramameter status\nVCU运动模式TCS参数参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModTCSPrmSts",2,0x223,false,false,268,3,1,0,"VCU drive mode TCS parameter status\nVCU驾驶模式TCS参数设定状态"));
        signalInfos.add(new SignalInfo("ExtrLtgStsRRPLamp",2,0x223,false,false,265,2,1,0,"牌照灯状态"));
        signalInfos.add(new SignalInfo("VCUDrvModVDCPrmCmftSts",2,0x223,false,false,279,3,1.0,0.0,"VCU comfort mode VDC pramameter status\nVCU舒适模式VDC参数参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModVDCPrmSptPluSts",2,0x223,false,false,276,3,1.0,0.0,"VCU sport plus mode VDC pramameter status\nVCU运动+VDC参数参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModVDCPrmSptSts",2,0x223,false,false,287,3,1.0,0.0,"VCU sport mode VDC pramameter status\nVCU运动模式VDC参数参数设定状态"));
        signalInfos.add(new SignalInfo("VCUDrvModVDCPrmSts",2,0x223,false,false,284,3,1.0,0.0,"VCU drive mode VDC parameter status\nVCU驾驶模式VDC参数设定状态"));
        signalInfos.add(new SignalInfo("VCULstDrvMode",2,0x223,false,false,295,8,1,0,"VCU commen drive mode before special mode\n进入雪地 赛道 极致经济等模式之前的驾驶模式"));
        signalInfos.add(new SignalInfo("FenderLgtBritPWMSetLe",2,0x223,false,false,303,8,1,0,"Left Fender light brightness PWM setting    左翼子板灯亮度控制"));
        signalInfos.add(new SignalInfo("FenderLgtBritPWMSetRi",2,0x223,false,false,311,8,1,0,"Right Fender light brightness PWM setting 右翼子板灯亮度控制"));
        signalInfos.add(new SignalInfo("LeDoorLogoLgtBritPWMSetFrt",2,0x223,false,false,319,8,1,0,"Left door Logo light Front side  左前侧门照地灯亮度控制"));
        signalInfos.add(new SignalInfo("LeDoorLogoLgtBritPWMSetRear",2,0x223,false,false,327,8,1,0,"Left door Logo light rear side  左后侧门照地灯亮度控制"));
        signalInfos.add(new SignalInfo("OutDoorLgtBritPWMSetLe",2,0x223,false,false,335,8,1,0,"Left OutDoor handle light PWM Setting左侧门把手灯亮度控制"));
        signalInfos.add(new SignalInfo("OutDoorLgtBritPWMSetRi",2,0x223,false,false,343,8,1,0,"Right OutDoor handle light PWM Setting右侧门把手灯亮度控制"));
        signalInfos.add(new SignalInfo("RiDoorLogoLgtBritPWMSetFrt",2,0x223,false,false,351,8,1,0,"Right door Logo light  fornt    右前侧门照地灯亮度控制"));
        signalInfos.add(new SignalInfo("RiDoorLogoLgtBritPWMSetRear",2,0x223,false,false,359,8,1,0,"Right door Logo light rear  右后侧门照地灯亮度控制"));
        signalInfos.add(new SignalInfo("RelayCtlSigGrpChks",2,0x223,false,false,367,8,1,0,""));
        signalInfos.add(new SignalInfo("RelayCtlSigGrpCntr",2,0x223,false,false,371,4,1,0,""));
        signalInfos.add(new SignalInfo("ExtrLampRlyDown",2,0x223,false,false,383,1,1,0,"Extrior Lamp Relay  Down"));
        signalInfos.add(new SignalInfo("VCUFimEvtErrIndex",2,0x2d4,false,false,95,8,1,0,"VCU Event Error Index value"));
        signalInfos.add(new SignalInfo("VCUSysLowLvlWarn",2,0x2d4,false,false,103,1,1,0,"高压系统低等级故障,预约检修服务提醒"));
        signalInfos.add(new SignalInfo("VCUVehSysRstWarn",2,0x2d4,false,false,102,1,1,0,"车辆系统故障需要重新低压上电恢复提醒"));
        signalInfos.add(new SignalInfo("VCUSafeStFltHMIRecWarn",2,0x2d4,false,false,101,1,1,0,"VCU Safety Related Fault Recovery and need HMI Warning"));
        signalInfos.add(new SignalInfo("VCUBoosterFltWarn",2,0x2d4,false,false,100,1,1,0,"升压充电功能限制提醒"));
        signalInfos.add(new SignalInfo("VCUChrgnModSts",2,0x2d4,false,false,99,4,1,0,"Charging Mode Status"));
        signalInfos.add(new SignalInfo("VCUHVExtPortConnectnTypInfo",2,0x2d4,false,false,119,4,1,0,"HV External Port Connection Type Information 重新定义 原来叫chrgnPortConnectnStsInfo 重新map"));
        signalInfos.add(new SignalInfo("VCUChrgnPortInhbnWarn",2,0x2d4,false,false,115,1,1,0,"因充电口带电风险的充电口禁止开启提醒"));
        signalInfos.add(new SignalInfo("VCUHVSysInsulFltWarning",2,0x2d4,false,false,113,1,1,0,"高压系统绝缘异常提醒"));
        signalInfos.add(new SignalInfo("VCUOBCFltWarn",2,0x2d4,false,false,112,1,1,0,"交流充放电功能限制提醒"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte0to3",2,0x5c6,false,false,7,32,1,0,"VCU Event Tracking Frame 1 Byte 0 to 3"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte4to7",2,0x5c6,false,false,39,32,1,0,"VCU Event Tracking Frame 1 Byte 4 to 7"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte8to11",2,0x5c6,false,false,71,32,1,0,"VCU Event Tracking Frame 1 Byte 8 to 11"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte12to15",2,0x5c6,false,false,103,32,1,0,"VCU Event Tracking Frame 1 Byte 12 to 15"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte16to19",2,0x5c6,false,false,135,32,1,0,"VCU Event Tracking Frame 1 Byte 16 to 19"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte20to23",2,0x5c6,false,false,167,32,1,0,"VCU Event Tracking Frame 1 Byte 20 to 23"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte24to27",2,0x5c6,false,false,199,32,1,0,"VCU Event Tracking Frame 1 Byte 24 to 27"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte28to31",2,0x5c6,false,false,231,32,1,0,"VCU Event Tracking Frame 1 Byte 28 to 31"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte32to35",2,0x5c6,false,false,263,32,1,0,"VCU Event Tracking Frame 1 Byte 32 to 35"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte36to39",2,0x5c6,false,false,295,32,1,0,"VCU Event Tracking Frame 1 Byte 36 to 39"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte40to43",2,0x5c6,false,false,327,32,1,0,"VCU Event Tracking Frame 1 Byte 40 to 43"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte44to47",2,0x5c6,false,false,359,32,1,0,"VCU Event Tracking Frame 1 Byte 44 to 47"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte48to51",2,0x5c6,false,false,391,32,1,0,"VCU Event Tracking Frame 1 Byte 48 to 51"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte52to55",2,0x5c6,false,false,423,32,1,0,"VCU Event Tracking Frame 1 Byte 52 to 55"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte56to59",2,0x5c6,false,false,455,32,1,0,"VCU Event Tracking Frame 1 Byte 56 to 59"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame1Byte60to63",2,0x5c6,false,false,487,32,1,0,"VCU Event Tracking Frame 1 Byte 60 to 63"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte0to3",2,0x5c7,false,false,7,32,1,0,"VCU Event Tracking Frame 2 Byte 0 to 3"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte4to7",2,0x5c7,false,false,39,32,1,0,"VCU Event Tracking Frame 2 Byte 4 to 7"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte8to11",2,0x5c7,false,false,71,32,1,0,"VCU Event Tracking Frame 2 Byte 8 to 11"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte12to15",2,0x5c7,false,false,103,32,1,0,"VCU Event Tracking Frame 2 Byte 12 to 15"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte16to19",2,0x5c7,false,false,135,32,1,0,"VCU Event Tracking Frame 2 Byte 16 to 19"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte20to23",2,0x5c7,false,false,167,32,1,0,"VCU Event Tracking Frame 2 Byte 20 to 23"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte24to27",2,0x5c7,false,false,199,32,1,0,"VCU Event Tracking Frame 2 Byte 24 to 27"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte28to31",2,0x5c7,false,false,231,32,1,0,"VCU Event Tracking Frame 2 Byte 28 to 31"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte32to35",2,0x5c7,false,false,263,32,1,0,"VCU Event Tracking Frame 2 Byte 32 to 35"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte36to39",2,0x5c7,false,false,295,32,1,0,"VCU Event Tracking Frame 2 Byte 36 to 39"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte40to43",2,0x5c7,false,false,327,32,1,0,"VCU Event Tracking Frame 2 Byte 40 to 43"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte44to47",2,0x5c7,false,false,359,32,1,0,"VCU Event Tracking Frame 2 Byte 44 to 47"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte48to51",2,0x5c7,false,false,391,32,1,0,"VCU Event Tracking Frame 2 Byte 48 to 51"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte52to55",2,0x5c7,false,false,423,32,1,0,"VCU Event Tracking Frame 2 Byte 52 to 55"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte56to59",2,0x5c7,false,false,455,32,1,0,"VCU Event Tracking Frame 2 Byte 56 to 59"));
        signalInfos.add(new SignalInfo("VCUEvntTrackFrame2Byte60to63",2,0x5c7,false,false,487,32,1,0,"VCU Event Tracking Frame 2 Byte 60 to 63"));
        signalInfos.add(new SignalInfo("PwrModSigGrpChks",2,0x90,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("PwrModSigGrpCntr",2,0x90,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("PwrModSts",2,0x90,false,false,23,3,1,0,"PowerMode Status"));
        signalInfos.add(new SignalInfo("PwrModVld",2,0x90,false,false,20,1,1,0,"PowerMode Validty"));
        signalInfos.add(new SignalInfo("DrvActvSts",2,0x90,false,false,29,1,1,0,"用户通过仪式感按键的驾驶启动状态"));
        signalInfos.add(new SignalInfo("VCUActGearSigGrpChks",2,0x90,false,false,47,8,1,0,""));
        signalInfos.add(new SignalInfo("VCUActGearLvr",2,0x90,false,false,55,3,1,0,"Actual gear level 车辆实际档位\nP R N D挡位"));
        signalInfos.add(new SignalInfo("VCUActGearLvrVld",2,0x90,false,false,52,1,1,0,"车辆实际档位有效位"));
        signalInfos.add(new SignalInfo("VCUActGearSigGrpCntr",2,0x90,false,false,51,4,1,0,""));
        signalInfos.add(new SignalInfo("VcuInpSigGrpChks",2,0x90,false,false,63,8,1,0,""));
        signalInfos.add(new SignalInfo("VCURgnTqCorrnFac",2,0x90,false,false,71,4,0.1,0.0,"Regeneration Torque Correction Factor"));
        signalInfos.add(new SignalInfo("VcuInpSigGrpCntr",2,0x90,false,false,67,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUStsModCst",2,0x90,false,false,79,8,1,0,"energy recuperation end mode.\n能量回收状态模式"));
        signalInfos.add(new SignalInfo("VCUAccrPedlRat",2,0x90,false,false,87,15,0.004,0.0,"加速油门踏板开度"));
        signalInfos.add(new SignalInfo("VCUPrkgBtnPsd",2,0x90,false,false,88,1,1,0,"驾驶员按下P档"));
        signalInfos.add(new SignalInfo("VCUVirtAccrPedl",2,0x90,false,false,103,7,1,0,"虚拟油门开度 当前模式的pedal map反算"));
        signalInfos.add(new SignalInfo("VCUTarGearLvrVld",2,0x90,false,false,96,1,1,0,"目标档位有效位"));
        signalInfos.add(new SignalInfo("VCUAccrPedlRatVld",2,0x90,false,false,111,1,1,0,"加速踏板有效性"));
        signalInfos.add(new SignalInfo("VCUFrntEmTqRdy",2,0x90,false,false,110,1,1,0,"The Front Motor  can be ready to response chassis torque request.\n前电机可以响应扭矩请求."));
        signalInfos.add(new SignalInfo("VCUReEmTqRdy",2,0x90,false,false,109,1,1,0,"Rear EM is ready to response chassis Torque Request\n后电机是否处于Ready状态"));
        signalInfos.add(new SignalInfo("VCUTarGearLvr",2,0x90,false,false,108,3,1,0,"目标档位  P R N D挡位"));
        signalInfos.add(new SignalInfo("VCUVirtAccrPedlVld",2,0x90,false,false,105,1,1,0,"虚拟油门开度有效位"));
        signalInfos.add(new SignalInfo("VCUShifterMoveFlg",2,0x90,false,false,104,1,1,0,"驾驶员拨动了换挡杆的标志位"));
        signalInfos.add(new SignalInfo("VCUDrvOffFcnLim",2,0x90,false,false,119,1,1,0,"VCU send to BCS to identify whether vehcile can drive off or not as powertrain has fault and power limited.\nVCU发送给BCS系统,用于判断整车动力系统是否存在故障动力受限不能起步的判断"));
        signalInfos.add(new SignalInfo("VCUPtRdyFlg",2,0x90,false,false,127,1,1,0,"驾驶使能"));
        signalInfos.add(new SignalInfo("CarModSts",2,0x90,false,false,126,3,1,0,"CarMode状态信号"));
        signalInfos.add(new SignalInfo("VCUActDrvMod",2,0x90,false,false,123,4,1,0,"VCU actual drive mode \nVCU实际驾驶模式"));
        signalInfos.add(new SignalInfo("VcuTotWhlTqSigGrpChks",2,0xc3,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("VcuTotWhlTqSigGrpCntr",2,0xc3,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUTotWhlTqMinAvl",2,0xc3,false,false,23,14,1,-16383,"Sum of total wheel Minimal AvailableTorque\n整车四轴上总的可用最小扭矩"));
        signalInfos.add(new SignalInfo("VCUTotWhlTqMinAvlVld",2,0xc3,false,false,25,1,1,0,"Sum of total wheel Minimal AvailableTorque valid\n整车四轴上总的可用最小扭矩有效位"));
        signalInfos.add(new SignalInfo("LampSigGrp2Chks",2,0xc3,false,false,39,8,1,0,""));
        signalInfos.add(new SignalInfo("ActnOfParkLampRi",2,0xc3,false,false,45,1,1,0,"Activation Of  Right Parking Lamp"));
        signalInfos.add(new SignalInfo("ActnOfParkLampLe",2,0xc3,false,false,44,1,1,0,"Activation Of  Left Parking Lamp"));
        signalInfos.add(new SignalInfo("LampSigGrp2Cntr",2,0xc3,false,false,43,4,1,0,""));
        signalInfos.add(new SignalInfo("ActiveOfADB",2,0xc3,false,false,55,1,1,0,"Active of ADB Function  激活ADB 功能"));
        signalInfos.add(new SignalInfo("ActnOfDayRunngLampLe",2,0xc3,false,false,54,1,1,0,"Activation of Left DRL"));
        signalInfos.add(new SignalInfo("ActnOfLedFrntPosnLamp",2,0xc3,false,false,53,1,1,0,"Activation Of Front Position Lamp前位置灯激活命令"));
        signalInfos.add(new SignalInfo("ActnOfLedHiBeam",2,0xc3,false,false,52,1,1,0,"Activation Of High Beam远光激活命令"));
        signalInfos.add(new SignalInfo("SegmtDirCtrlSet",2,0xc3,false,false,51,4,1,0,"Segment  direct control setting"));
        signalInfos.add(new SignalInfo("SBLDmValSetLe",2,0xc3,false,false,63,7,1,0,"Left Static bending Light Dimming Value setting"));
        signalInfos.add(new SignalInfo("FarewellFuncSet",2,0xc3,false,false,56,1,1,0,"Farewell function setting"));
        signalInfos.add(new SignalInfo("SBLDmValSetRi",2,0xc3,false,false,71,7,1,0,"Left Static bending Light Dimming Value setting"));
        signalInfos.add(new SignalInfo("ActnOfDayRunngLampRi",2,0xc3,false,false,64,1,1,0,"Activation Of Right DRL 右日行灯激活命令"));
        signalInfos.add(new SignalInfo("WelcomeFuncSet",2,0xc3,false,false,78,1,1,0,"Welcome function setting"));
        signalInfos.add(new SignalInfo("WipSpdReqSigGrpChks",2,0xc3,false,false,127,8,1,0,""));
        signalInfos.add(new SignalInfo("WipSpdReqHi",2,0xc3,false,false,135,1,1,0,"雨刮速度为高速档位\nHigh speed wiping request"));
        signalInfos.add(new SignalInfo("WipSpdReqLo",2,0xc3,false,false,134,1,1,0,"雨刮速度为低速档位\nLow speed wiping request"));
        signalInfos.add(new SignalInfo("WipSpdReqSigGrpCntr",2,0xc3,false,false,131,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUAccrPedlRatGrdt",2,0xc6,false,true,7,15,0.0625,0.0,"加速油门踏板开度变化率"));
        signalInfos.add(new SignalInfo("IndcrDisp",2,0xc6,false,false,36,2,1,0,"双闪仪表反馈信号"));
        signalInfos.add(new SignalInfo("VCUAccrPedlFlg",2,0xc6,false,false,34,1,1,0,"油门踏板踩下标志位"));
        signalInfos.add(new SignalInfo("VCUAlwParkRels",2,0xc6,false,false,33,1,1,0,"是否允许整车出P挡"));
        signalInfos.add(new SignalInfo("VCUGearLvrAvail",2,0xc6,false,false,32,1,1,0,"Vehicle Gear Response is available for ADAS\n给智驾反馈的挡位可用标志位"));
        signalInfos.add(new SignalInfo("VCUHVSt",2,0xc6,false,false,47,3,1,0,"High voltage state\n高压状态"));
        signalInfos.add(new SignalInfo("VCULoSocLampReq",2,0xc6,false,false,44,1,1,0,"动力电池电量低"));
        signalInfos.add(new SignalInfo("VCUPedlTqOvrdAdsFlg",2,0xc6,false,false,43,1,1,0,"纵向控制Override标志位"));
        signalInfos.add(new SignalInfo("VCUVehMaxFltLvl",2,0xc6,false,false,42,3,1.0,0.0,"VCU Max Fault  Level\nVCU最大故障等级"));
        signalInfos.add(new SignalInfo("WiprSpdModSts",2,0xc6,false,false,55,6,1,0,"雨刮速度状态反馈"));
        signalInfos.add(new SignalInfo("SteerAssistReq",2,0xc6,false,false,49,1,1,0,"转向助力请求"));
        signalInfos.add(new SignalInfo("VcuEgyMonSigGrpChks",2,0xc6,false,false,71,8,1,0,""));
        signalInfos.add(new SignalInfo("VcuEgyMonSigGrpCntr",2,0xc6,false,false,75,4,1,0,""));
        signalInfos.add(new SignalInfo("VCUHydTqReq",2,0xc6,false,false,87,14,1,-16383,"Hydraulic Brake Torque Request\n单踏板刹"));
        signalInfos.add(new SignalInfo("VCUHydTqReqVld",2,0xc6,false,false,89,1,1,0,"Qualifier for Hydraulic Brake Torque Request Signal\n单踏板刹停液压制动力矩请求有效位"));
        signalInfos.add(new SignalInfo("VCUCstRgnTqReq",2,0xc6,false,false,103,14,1,-16383,"滑行能量回收目标扭矩"));
        signalInfos.add(new SignalInfo("VCUCstFlg",2,0xc6,false,false,105,1,1,0,"滑行状态位"));
        signalInfos.add(new SignalInfo("VCUCstRgnTqReqFA",2,0xc6,false,false,119,14,1,-16383,"The target regen torque of Front wheel for coasting energy recuperation.\n前轴的目标滑行回收扭矩"));
        signalInfos.add(new SignalInfo("VCUCstRgnTqReqRA",2,0xc6,false,false,135,14,1,-16383,"The target regen torque of rear wheel for coasting recuperation energy.\n后轮的目标回收扭矩"));
        signalInfos.add(new SignalInfo("VCUMaxRgnTqAvl",2,0xc6,false,false,151,14,1,-16383,"maximum regeneration torque Available\n最大可用回收扭矩 前后轴电机总和"));
        signalInfos.add(new SignalInfo("VCUMaxRgnTqAvlFA",2,0xc6,false,false,167,14,1,-16383,"The Max regen torque that can be available for front wheel."));
        signalInfos.add(new SignalInfo("VCUMaxRgnTqAvlFAVld",2,0xc6,false,false,169,1,1,0,"The invalid flag of  Max regen torque that can be available for front wheel.\n前轴最大可用回收扭矩的有效位"));
        signalInfos.add(new SignalInfo("VCUMaxRgnTqAvlRA",2,0xc6,false,false,183,14,1,-16383,"The Max regen torque that can be available for rear wheel."));
        signalInfos.add(new SignalInfo("VCUMaxRgnTqAvlRAVld",2,0xc6,false,false,185,1,1,0,"The invalid flag of Max regen torque that can be available for rear wheel.\n后轴最大可用回收扭矩的有效位"));
        signalInfos.add(new SignalInfo("VCUMaxRgnTqAvlVld",2,0xc6,false,false,184,1,1,0,"最大可用回收扭矩有效性"));
        signalInfos.add(new SignalInfo("VCUPrkgBtnPsdVld",2,0xc6,false,false,229,1,1,0,"驾驶员长按P挡有效性"));
        signalInfos.add(new SignalInfo("VDMVehSpdEstmGrpChks",2,0xc7,false,false,15,8,1,0,""));
        signalInfos.add(new SignalInfo("VDMVehSpdEstmGrpCntr",2,0xc7,false,false,19,4,1,0,""));
        signalInfos.add(new SignalInfo("VehLgtSpdEstd",2,0xc7,false,false,31,10,0.1,0.0,"longitudinal vehicle speed estemsted\n纵向车速"));
        signalInfos.add(new SignalInfo("VehLgtSpdEstdVld",2,0xc7,false,false,37,1,1,0,"Vehicle longitudinal speed estimated valid\n纵向车速有效性"));
        signalInfos.add(new SignalInfo("VDMLgtWhlSpdFL",2,0xc7,false,false,33,10,0.1,0.0,"VDM longitudinal wheel speed front left\n左前轮纵向速度"));
        signalInfos.add(new SignalInfo("VDMLgtWhlSpdFR",2,0xc7,false,false,55,10,0.1,0.0,"VDM longitudinal wheel speed front right\n右前轮纵向速度"));
        signalInfos.add(new SignalInfo("VDMLgtWhlSpdRL",2,0xc7,false,false,57,10,0.1,0.0,"VDM longitudinal wheel speed real left\n左后轮纵向速度"));
        signalInfos.add(new SignalInfo("VDMLgtWhlSpdRR",2,0xc7,false,false,79,10,0.1,0.0,"VDM longitudinal wheel speed rear right\n右后轮纵向速度"));
        signalInfos.add(new SignalInfo("VehBodySideSlipAng",2,0xc7,false,false,83,12,0.01,-6.0,"vehicle body side slip angle"));
        signalInfos.add(new SignalInfo("VehLatSpdEstd",2,0xc7,false,false,103,10,0.1,0.0,"lateral vehicle speed estemsted\n横向车速"));
        signalInfos.add(new SignalInfo("VehLatSpdEstdVld",2,0xc7,false,false,109,1,1,0,"vehicle lateral speed estimated valid\n横向车速有效性"));
        signalInfos.add(new SignalInfo("VCUDiagEvtS1",2,0xe3,false,false,7,32,1,0,"VCU Diagnosis Event upload Signal1"));
        signalInfos.add(new SignalInfo("VCUDiagEvtS2",2,0xe3,false,false,39,32,1,0,"VCU Diagnosis Event upload Signal2"));
        signalInfos.add(new SignalInfo("VCUDiagEvtS3",2,0xe3,false,false,71,32,1,0,"VCU Diagnosis Event upload Signal3"));
        signalInfos.add(new SignalInfo("VCUDiagEvtS4",2,0xe3,false,false,103,32,1,0,"VCU Diagnosis Event Upload Signal4"));
        signalInfos.add(new SignalInfo("VCUDiagEvtS5",2,0xe3,false,false,135,32,1,0,"VCU Diagnosis Event upload Signal5"));
        signalInfos.add(new SignalInfo("VCUDiagEvtS6",2,0xe3,false,false,167,32,1,0,"VCU Diagnosis Event upload Signal6"));
        signalInfos.add(new SignalInfo("UDB23FZCU",2,0x524,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22FZCU",2,0x524,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21FZCU",2,0x524,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20FZCU",2,0x524,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19FZCU",2,0x524,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18FZCU",2,0x524,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17FZCU",2,0x524,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB31FZCU",2,0x524,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30FZCU",2,0x524,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29FZCU",2,0x524,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28FZCU",2,0x524,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27FZCU",2,0x524,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26FZCU",2,0x524,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25FZCU",2,0x524,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24FZCU",2,0x524,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39FZCU",2,0x524,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38FZCU",2,0x524,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37FZCU",2,0x524,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36FZCU",2,0x524,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35FZCU",2,0x524,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34FZCU",2,0x524,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33FZCU",2,0x524,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32FZCU",2,0x524,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47FZCU",2,0x524,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46FZCU",2,0x524,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45FZCU",2,0x524,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44FZCU",2,0x524,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43FZCU",2,0x524,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42FZCU",2,0x524,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41FZCU",2,0x524,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40FZCU",2,0x524,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnFZCU",2,0x524,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("LRRSnsrWarnSigGrpChks",2,0x18c,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("LRRSnsrWarnSigGrpCntr",2,0x18c,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("LRRSnsrStsFrmSFC",2,0x18c,false,false,23,8,1,0,"front center radar working status, bitfield\nbit0=Misalignment\nbit1=Blindness\nbit2=HW failure\nbit3=Emission off w/o failure\nbit4=Not calibrated\nbit5=Temp out of range\nbit6=Reserved\nbit7=Reserved\nbit8=Reserved"));
        signalInfos.add(new SignalInfo("LRRFaultInfoFlag",2,0x2be,false,false,7,1,1,0,"LRR Fault Information Flag"));
        signalInfos.add(new SignalInfo("LRRAdasCanfdNodeAddress",2,0x572,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("LRRAdasCanfdActiveWakeup",2,0x572,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("LRRAdasCanfdRepeatMsgReq",2,0x572,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("LRRAdasCanfdRepeatMsgSt",2,0x572,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnLRR",2,0x572,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("LRRToVCCDDiagResp",2,0x6d2,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("LeMirrUnfoldStallFlg",2,0x1b2,false,false,7,1,1,0,"左侧展开堵转标志位"));
        signalInfos.add(new SignalInfo("LeMirrFoldStallFlg",2,0x1b2,false,false,6,1,1,0,"左侧折叠堵转标志位"));
        signalInfos.add(new SignalInfo("ShortDropWinReLeSts",2,0x1b2,false,false,5,3,1,0,"Short Drop Window Rear Left Status"));
        signalInfos.add(new SignalInfo("LeMirrHozlVolt",2,0x1b2,false,false,0,9,0.01,0.0,"左侧外后视镜镜片水平位置电压"));
        signalInfos.add(new SignalInfo("LeMirrHozlStallFlg",2,0x1b2,false,false,23,1,1,0,"左侧外后视镜镜片水平电机堵转标志位"));
        signalInfos.add(new SignalInfo("ChrgLidKeepAwakeReq",2,0x1b2,false,false,20,1,1,0,"Chrg Lid Keep PwrMod Awake Req"));
        signalInfos.add(new SignalInfo("ShortDropWinDrvrSts",2,0x1b2,false,false,19,3,1,0,"Short Drop Window Driver Status"));
        signalInfos.add(new SignalInfo("LeMirrVertVolt",2,0x1b2,false,false,16,9,0.01,0.0,"左侧外后视镜镜片垂直位置电压"));
        signalInfos.add(new SignalInfo("LZCUBypassErrEnRx",2,0x1b2,false,false,39,3,1,0,"LZCU Bypass Error Enable Receive\nLZCU接收到前域的常电旁路故障状态"));
        signalInfos.add(new SignalInfo("LeMirrDefrstSts",2,0x1b2,false,false,36,1,1,0,"左侧外后视镜除雾状态反馈"));
        signalInfos.add(new SignalInfo("LeMirrVertMotErrFb",2,0x1b2,false,false,35,1,1,0,"左侧外后视镜垂直电机故障反馈"));
        signalInfos.add(new SignalInfo("LeMirrHozlMotErrFb",2,0x1b2,false,false,34,1,1,0,"左侧外后视镜水平电机故障反馈"));
        signalInfos.add(new SignalInfo("LeMirrFoldMotErrFb",2,0x1b2,false,false,33,1,1,0,"左侧外后视镜折叠电机故障反馈"));
        signalInfos.add(new SignalInfo("LeMirrVertStallFlg",2,0x1b2,false,false,32,1,1,0,"左侧外后视镜镜片垂直电机堵转标志位"));
        signalInfos.add(new SignalInfo("SwsLinComFltSts",2,0x1b2,false,false,47,1,1,0,"SWS LIN node communication fault status."));
        signalInfos.add(new SignalInfo("DrvrWinDDSSwt",2,0x1b2,false,false,42,3,1,0,"Driver Window DDS Switch"));
        signalInfos.add(new SignalInfo("ReLeWinDDSSwt",2,0x1b2,false,false,50,3,1,0,"Rear Left Window DDS Switch"));
        signalInfos.add(new SignalInfo("ChrgLidSwtSts",2,0x1b2,false,false,63,2,1,0,"充电口盖开关状态"));
        signalInfos.add(new SignalInfo("LZCUUnsleepStsEnTx",2,0x1b2,false,false,61,3,1,0,"LZCU Unsleep Status Enable Output Status\n左区域控制器未休眠状态使能输出状态"));
        signalInfos.add(new SignalInfo("ReLeWinAntiPinch",2,0x1b2,false,false,71,2,1,0,"Rear Left Window Anti Pinch"));
        signalInfos.add(new SignalInfo("ReLeWinMotMoveSts",2,0x1b2,false,false,69,3,1,0,"Rear Left Window Motor Move Status"));
        signalInfos.add(new SignalInfo("ReLeWinPhySwt",2,0x1b2,false,false,66,3,1,0,"Rear Left Window Physics Switch"));
        signalInfos.add(new SignalInfo("ReLeWinATSForceThd",2,0x1b2,false,false,79,16,1,0,"左后车窗防夹力阈值"));
        signalInfos.add(new SignalInfo("ReLeWinHallPosn",2,0x1b2,false,false,103,16,1,0,"RearLeft Window Hall Position"));
        signalInfos.add(new SignalInfo("DrvrWinMotMoveSts",2,0x1b2,false,false,118,3,1,0,"Driver Window Motor Move Status"));
        signalInfos.add(new SignalInfo("LeMirrFoldCmd",2,0x1b2,false,false,115,2,1,0,"左侧外后视镜折叠请求"));
        signalInfos.add(new SignalInfo("RiMirrFoldCmd",2,0x1b2,false,false,113,2,1,0,"右侧外后视镜折叠请求"));
        signalInfos.add(new SignalInfo("ReLeWinATSDataVld",2,0x1b2,false,false,127,2,1,0,"Rear Left Window ATS Data Valid"));
        signalInfos.add(new SignalInfo("DoorRiRePwrRelsDlyActv",2,0x1b2,false,false,125,2,1,0,"右后电释放延迟激活反馈"));
        signalInfos.add(new SignalInfo("DoorRiReSts",2,0x1b2,false,false,123,2,1,0,"右后侧门状态"));
        signalInfos.add(new SignalInfo("DrvrWinAntiPinch",2,0x1b2,false,false,121,2,1,0,"Driver Window Anti Pinch"));
        signalInfos.add(new SignalInfo("ReLeWinMmPosn",2,0x1b2,false,false,135,16,1,0,"RearLeft Window Millimeter Position"));
        signalInfos.add(new SignalInfo("ReLeWinPosnDataVld",2,0x1b2,false,false,159,2,1,0,"Rear Left Window Position Data Valid"));
        signalInfos.add(new SignalInfo("DrvrWinDDSSwtFlt",2,0x1b2,false,false,157,3,1,0,"Driver Window DDS Switch Fault"));
        signalInfos.add(new SignalInfo("ChrgLidSts",2,0x1b2,false,false,175,2,1,0,"充电口盖打开状态显示"));
        signalInfos.add(new SignalInfo("ReLeWinDDSSwtFlt",2,0x1b2,false,false,173,3,1,0,"Rear Left Window DDS Switch Fault"));
        signalInfos.add(new SignalInfo("ReLeWinMotorCur",2,0x1b2,false,false,183,16,0.1,0.0,"左后车窗驱动电流"));
        signalInfos.add(new SignalInfo("DoorDrvrPwrRelsDlyActv",2,0x1b2,false,false,199,2,1,0,"主驾电释放延迟激活反馈"));
        signalInfos.add(new SignalInfo("DoorDrvrSts",2,0x1b2,false,false,197,2,1,0,"驾驶侧门状态"));
        signalInfos.add(new SignalInfo("ReLeWinPhySwtFlt",2,0x1b2,false,false,194,3,1,0,"Rear Left Window Physycis Switch Fault"));
        signalInfos.add(new SignalInfo("DoorLeRePwrRelsDlyActv",2,0x1b2,false,false,207,2,1,0,"左后电释放延迟激活反馈"));
        signalInfos.add(new SignalInfo("DoorLeReSts",2,0x1b2,false,false,205,2,1,0,"左后侧门状态"));
        signalInfos.add(new SignalInfo("DoorPassPwrRelsDlyActv",2,0x1b2,false,false,203,2,1,0,"副驾电释放延迟激活反馈"));
        signalInfos.add(new SignalInfo("DoorPassSts",2,0x1b2,false,false,201,2,1,0,"副驾侧门状态"));
        signalInfos.add(new SignalInfo("ExtrMirrFoldEnaFailr",2,0x1b2,false,false,215,4,1,0,"外后视镜折叠故障"));
        signalInfos.add(new SignalInfo("ExtrMirrFoldSts",2,0x1b2,false,false,211,3,1,0,"后视镜折叠状态"));
        signalInfos.add(new SignalInfo("LeMirrDrvPosnY",2,0x1b2,false,true,231,16,0.1,-15.0,"左后视镜驾驶位置垂直角度"));
        signalInfos.add(new SignalInfo("PwrRelsMotDrvStsGrpChks",2,0x1b2,false,false,247,8,1,0,""));
        signalInfos.add(new SignalInfo("DoorDrvrPwrRelsMotDrvSts",2,0x1b2,false,false,255,3,1,0,"主驾电释放电机驱动状态"));
        signalInfos.add(new SignalInfo("PwrRelsMotDrvStsGrpCntr",2,0x1b2,false,false,251,4,1,0,""));
        signalInfos.add(new SignalInfo("RLSRBrkSigGrpChks",2,0x170,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("RLSRBrkSigGrpCntr",2,0x170,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("RLSRRCTBTarDecelFrmSFC",2,0x170,false,false,23,8,0.05,-10.0,"target deceleration value from RCTB - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRRCTBBrkReqFrmSFC",2,0x170,false,false,31,1,1,0,"RCTB Brake request - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRWarnSigGrpChks",2,0x187,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("RLSRRCTAWarnReqFrmSFC",2,0x187,false,false,15,2,1,0,"RCTA warning request - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRRCTAStsFrmSFC",2,0x187,false,false,13,2,1,0,"RCTA Function status - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRWarnSigGrpCntr",2,0x187,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("RLSRBSDLCAWarnReqFrmSFC",2,0x187,false,false,23,2,1,0,"BSD_LCA warning request - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRBSDLCAStsFrmSFC",2,0x187,false,false,21,2,1,0,"BSD_LCA Function status - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRDOWWarnReqFrFrmSFC",2,0x187,false,false,19,2,1,0,"DOW warning request - front left"));
        signalInfos.add(new SignalInfo("RLSRDOWStsFrmSFC",2,0x187,false,false,17,2,1,0,"DOW Function status - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRDOWWarnReqReFrmSFC",2,0x187,false,false,31,2,1,0,"DOW warning request - rear left"));
        signalInfos.add(new SignalInfo("RLSRRCTBStsFrmSFC",2,0x187,false,false,29,2,1,0,"RCTB Function status - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRRCWWarnReqFrmSFC",2,0x187,false,false,27,2,1,0,"RCW warning request - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRRCWStsFrmSFC",2,0x187,false,false,25,2,1,0,"RCW Function status - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRRCTABSwtFbFrmSFC",2,0x187,false,false,37,3,1.0,0.0,"左雷达RCTB开关反馈信息"));
        signalInfos.add(new SignalInfo("RLSRBSDLCASwtFbFrmSFC",2,0x187,false,false,34,3,1.0,0.0,"左雷达BSD开关反馈信息"));
        signalInfos.add(new SignalInfo("RLSRDOWSwtFbFrmSFC",2,0x187,false,false,46,3,1.0,0.0,"左雷达DOW开关反馈信息"));
        signalInfos.add(new SignalInfo("RLSRRCTBWarnReqFrmSFC",2,0x187,false,false,43,2,1,0,"RCTB warning request  - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRRCWSwtFbFrmSFC",2,0x187,false,false,41,2,1,0,"RCW switch feedback - rear left radar"));
        signalInfos.add(new SignalInfo("RLSRBSDLCASwtUnavlRsnFrmSFC",2,0x187,false,false,55,4,1.0,0.0,"左雷达BSDLCA 开关不可用原因"));
        signalInfos.add(new SignalInfo("RLSRDOWSwtUnavlRsnFrmSFC",2,0x187,false,false,51,4,1.0,0.0,"左雷达DOW 开关不可用原因"));
        signalInfos.add(new SignalInfo("RLSRRCTABSwtUnavlRsnFrmSFC",2,0x187,false,false,63,4,1.0,0.0,"左雷达RCTA_RCTB 开关不可用原因"));
        signalInfos.add(new SignalInfo("RLSRRCWSwtUnavlRsnFrmSFC",2,0x187,false,false,59,4,1.0,0.0,"左雷达RCW 开关不可用原因"));
        signalInfos.add(new SignalInfo("RLSRFaultInfoFlag",2,0x187,false,false,87,1,1,0,"RLSR Fault Information Flag"));
        signalInfos.add(new SignalInfo("RLSRSnsrWarnSigGrpChks",2,0x2bd,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("RLSRSnsrWarnSigGrpCntr",2,0x2bd,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("RLSRSnsrStsFrmSFC",2,0x2bd,false,false,23,8,1,0,"rear left radar working status, bitfield\nbit0=Misalignment\nbit1=Blindness\nbit2=HW failure\nbit3=Emission off w/o failure\nbit4=Not calibrated\nbit5=Temp out of range\nbit6=Reserved\nbit7=Reserved\nbit8=Reserved"));
        signalInfos.add(new SignalInfo("RLSRAdasCanfdNodeAddress",2,0x575,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("RLSRAdasCanfdActiveWakeup",2,0x575,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("RLSRAdasCanfdRepeatMsgReq",2,0x575,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("RLSRAdasCanfdRepeatMsgSt",2,0x575,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnRLSR",2,0x575,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("RLSRToVCCDDiagResp",2,0x6d5,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("RRSRBrkSigGrpChks",2,0x17f,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("RRSRBrkSigGrpCntr",2,0x17f,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("RRSRRCTBTarDecelFrmSFC",2,0x17f,false,false,23,8,0.05,-10.0,"target deceleration value from RCTB - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRRCTBBrkReqFrmSFC",2,0x17f,false,false,31,1,1,0,"RCTB Brake request - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRWarnSigGrpChks",2,0x188,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("RRSRRCTAWarnReqFrmSFC",2,0x188,false,false,15,2,1,0,"RCTA warning request - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRRCTAStsFrmSFC",2,0x188,false,false,13,2,1,0,"RCTA Function status - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRWarnSigGrpCntr",2,0x188,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("RRSRBSDLCAWarnReqFrmSFC",2,0x188,false,false,23,2,1,0,"BSD_LCA warning request - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRBSDLCAStsFrmSFC",2,0x188,false,false,21,2,1,0,"BSD_LCA Function status - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRDOWWarnReqFrFrmSFC",2,0x188,false,false,19,2,1,0,"DOW warning request - front right"));
        signalInfos.add(new SignalInfo("RRSRDOWStsFrmSFC",2,0x188,false,false,17,2,1,0,"DOW Function status - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRDOWWarnReqReFrmSFC",2,0x188,false,false,31,2,1,0,"DOW warning request - rear right"));
        signalInfos.add(new SignalInfo("RRSRRCTBStsFrmSFC",2,0x188,false,false,29,2,1,0,"RCTB Function status - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRRCWWarnReqFrmSFC",2,0x188,false,false,27,2,1,0,"RCW warning request - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRRCWStsFrmSFC",2,0x188,false,false,25,2,1,0,"RCW Function status - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRRCTABSwtFbFrmSFC",2,0x188,false,false,37,3,1.0,0.0,"右雷达RCTB开关反馈信息"));
        signalInfos.add(new SignalInfo("RRSRBSDLCASwtFbFrmSFC",2,0x188,false,false,34,3,1.0,0.0,"右雷达BSD开关反馈信息"));
        signalInfos.add(new SignalInfo("RRSRDOWSwtFbFrmSFC",2,0x188,false,false,46,3,1.0,0.0,"右雷达DOW开关反馈信息"));
        signalInfos.add(new SignalInfo("RRSRRCTBWarnReqFrmSFC",2,0x188,false,false,43,2,1,0,"RCTB warning request  - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRRCWSwtFbFrmSFC",2,0x188,false,false,41,2,1,0,"RCW switch feedback - rear right radar"));
        signalInfos.add(new SignalInfo("RRSRBSDLCASwtUnavlRsnFrmSFC",2,0x188,false,false,55,4,1.0,0.0,"右雷达BSDLCA 开关不可用原因"));
        signalInfos.add(new SignalInfo("RRSRDOWSwtUnavlRsnFrmSFC",2,0x188,false,false,51,4,1.0,0.0,"右雷达DOW 开关不可用原因"));
        signalInfos.add(new SignalInfo("RRSRRCTABSwtUnavlRsnFrmSFC",2,0x188,false,false,63,4,1.0,0.0,"右雷达RCTA_RCTB 开关不可用原因"));
        signalInfos.add(new SignalInfo("RRSRRCWSwtUnavlRsnFrmSFC",2,0x188,false,false,59,4,1.0,0.0,"右雷达RCW 开关不可用原因"));
        signalInfos.add(new SignalInfo("RRSRFaultInfoFlag",2,0x188,false,false,87,1,1,0,"RRSR Fault Information Flag"));
        signalInfos.add(new SignalInfo("RRSRSnsrWarnSigGrpChks",2,0x20b,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("RRSRSnsrWarnSigGrpCntr",2,0x20b,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("RRSRSnsrStsFrmSFC",2,0x20b,false,false,23,8,1,0,"rear right radar working status, bitfield\nbit0=Misalignment\nbit1=Blindness\nbit2=HW failure\nbit3=Emission off w/o failure\nbit4=Not calibrated\nbit5=Temp out of range\nbit6=Reserved\nbit7=Reserved\nbit8=Reserved"));
        signalInfos.add(new SignalInfo("RRSRAdasCanfdNodeAddress",2,0x576,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("RRSRAdasCanfdActiveWakeup",2,0x576,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("RRSRAdasCanfdRepeatMsgReq",2,0x576,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("RRSRAdasCanfdRepeatMsgSt",2,0x576,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnRRSR",2,0x576,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("RRSRToVCCDDiagResp",2,0x6d6,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("RlsFrntWinHum",2,0x25a,false,false,7,10,0.1,0.0,"前挡风玻璃湿度"));
        signalInfos.add(new SignalInfo("RlsClsWinReq",2,0x25a,false,false,13,2,1,0,"下雨关窗请求"));
        signalInfos.add(new SignalInfo("RlsRainSnsrFlt",2,0x25a,false,false,11,1,1,0,"雨量传感器故障"));
        signalInfos.add(new SignalInfo("RlsSolarSnsrFlt",2,0x25a,false,false,10,2,1,0,"阳光传感器故障"));
        signalInfos.add(new SignalInfo("RlsTHumSnsrFlt",2,0x25a,false,false,8,1,1,0,"温度湿度传感器故障状态"));
        signalInfos.add(new SignalInfo("RlsFrntWinT",2,0x25a,false,false,23,11,0.1,-40.0,"前挡风玻璃温度"));
        signalInfos.add(new SignalInfo("RlsRainFallAmnt",2,0x25a,false,false,39,4,1,0,"雨量"));
        signalInfos.add(new SignalInfo("RlsRainFallSts",2,0x25a,false,false,35,4,1,0,"下雨状态"));
        signalInfos.add(new SignalInfo("RlsSolarSnsrLeVal",2,0x25a,false,false,47,8,5,0,"左侧阳光辐射值"));
        signalInfos.add(new SignalInfo("RlsSolarSnsrRiVal",2,0x25a,false,false,55,8,5,0,"右侧阳光辐射值"));
        signalInfos.add(new SignalInfo("RlsRainSnsrVal",2,0x25a,false,false,63,12,1,0,"雨量检测传感器数值"));
        signalInfos.add(new SignalInfo("PSLMDiag",2,0x25a,false,false,67,2,1,0,"PSLM Diagnose"));
        signalInfos.add(new SignalInfo("FrntLeAirSprgP",2,0x156,false,false,7,16,1,0,"Front Left Air spring pressure"));
        signalInfos.add(new SignalInfo("FrntRiAirSprgP",2,0x156,false,false,23,16,1,0,"Front Right Air spring pressure"));
        signalInfos.add(new SignalInfo("ReLeAirSprgP",2,0x156,false,false,39,16,1,0,"Rear Left Air spring pressure"));
        signalInfos.add(new SignalInfo("ReRiAirSprgP",2,0x156,false,false,55,16,1,0,"Rear Right Air spring pressure"));
        signalInfos.add(new SignalInfo("AirPResv",2,0x156,false,false,71,16,1,0,"Air Pressure Reservoir"));
        signalInfos.add(new SignalInfo("BatDamprModAllwd",2,0x156,false,false,87,1,1,0,"Battle Damping Mode Allowed"));
        signalInfos.add(new SignalInfo("HiLvlMod2Allwd",2,0x156,false,false,86,1,1,0,"HL2 Level Mode Allowed"));
        signalInfos.add(new SignalInfo("HiLvlMod1Allwd",2,0x156,false,false,85,1,1,0,"HL1 Level Mode Allowed"));
        signalInfos.add(new SignalInfo("NormLvlModAllwd",2,0x156,false,false,84,1,1,0,"Normal Level Mode Allowed"));
        signalInfos.add(new SignalInfo("LoLvlMod1Allwd",2,0x156,false,false,83,1,1,0,"LL1 Level Mode Allowed"));
        signalInfos.add(new SignalInfo("LoLvlMod2Allwd",2,0x156,false,false,82,1,1,0,"LL2 Level Mode Allowed"));
        signalInfos.add(new SignalInfo("SprgRateSts",2,0x156,false,false,81,2,1,0,"Spring Rate Status of Dual Chamber Air Spring"));
        signalInfos.add(new SignalInfo("TarLvlChg",2,0x156,false,false,95,3,1,0,"New target level based on manual or automatic level change"));
        signalInfos.add(new SignalInfo("SCUSelfAwkLvlAdjmt",2,0x156,false,false,92,1,1,0,"SCU Self Awakening Level Adjustment\nSCU 自唤醒高度调节"));
        signalInfos.add(new SignalInfo("LvlAdjmtSts",2,0x156,false,false,91,4,1,0,"level control mode adjustment status  ie. Lowering from Normal to Low"));
        signalInfos.add(new SignalInfo("NormLvlModRestrcnRsn",2,0x156,false,false,103,4,1,0,"NL Level Mode Restriction Reason"));
        signalInfos.add(new SignalInfo("SuspHeiAdjmtReqSrc",2,0x156,false,false,99,3,1,0,"Suspension Height Adjustment Request Source\n悬架高度调节源"));
        signalInfos.add(new SignalInfo("SprgRateStsVld",2,0x156,false,false,96,1,1,0,"Spring Rate Status Valid \n空簧刚度有效性"));
        signalInfos.add(new SignalInfo("AirPResvSts",2,0x156,false,false,104,1,1,0,"Air Pressure Reservoir status"));
        signalInfos.add(new SignalInfo("ReRiAirSprgPSts",2,0x156,false,false,118,1,1,0,"Rear Right Air spring pressure status"));
        signalInfos.add(new SignalInfo("ReLeAirSprgPSts",2,0x156,false,false,117,1,1,0,"Rear Left Air spring pressure status"));
        signalInfos.add(new SignalInfo("FrntRiAirSprgPSts",2,0x156,false,false,116,1,1,0,"Front Right Air spring pressure status"));
        signalInfos.add(new SignalInfo("FrntLeAirSprgPSts",2,0x156,false,false,115,1,1,0,"Front Left Air spring pressure status"));
        signalInfos.add(new SignalInfo("JackModEnaSts",2,0x156,false,false,114,1,1,0,"Level Control deactivation request Enable status  Jack Mode"));
        signalInfos.add(new SignalInfo("JackModSts",2,0x156,false,false,113,1,1,0,"Level Control deactivation request status  Jack Mode"));
        signalInfos.add(new SignalInfo("EasyEntryHeiSetSts",2,0x156,false,false,127,3,1,0,"Easy Entry Height Set Status"));
        signalInfos.add(new SignalInfo("CurDampgCtrlMod",2,0x156,false,false,124,2,1,0,"Current active damping control mode"));
        signalInfos.add(new SignalInfo("LvlModAct",2,0x156,false,false,135,3,1,0,"Height Level Mode Actual"));
        signalInfos.add(new SignalInfo("EasyEntryEnaSts",2,0x156,false,false,131,1,1,0,"Easy entry Request Enable Status"));
        signalInfos.add(new SignalInfo("EasyEntrySts",2,0x156,false,false,130,1,1,0,"Easy entry Request Status"));
        signalInfos.add(new SignalInfo("EasyLoadEnaSts",2,0x156,false,false,129,1,1,0,"Easy load Request Enable Status"));
        signalInfos.add(new SignalInfo("EasyLoadSts",2,0x156,false,false,128,1,1,0,"Easy loading Request Status"));
        signalInfos.add(new SignalInfo("EasyLoadgFuncCouplAct",2,0x156,false,false,143,1,1,0,"Easy loading couple function actual status"));
        signalInfos.add(new SignalInfo("NormDamprModAllwd",2,0x156,false,false,142,1,1,0,"Normal Damping Mode Allowed"));
        signalInfos.add(new SignalInfo("CmftDamprModAllwd",2,0x156,false,false,141,1,1,0,"Comfort Damping Mode Allowed"));
        signalInfos.add(new SignalInfo("SptDamprModAllwd",2,0x156,false,false,140,1,1,0,"Sport Damping Mode Allowed"));
        signalInfos.add(new SignalInfo("SuspHeiSetSts",2,0x156,false,false,139,3,1,0,"Suspension Height Set Status\n悬架高度设定状态 (座舱高度设置反馈)"));
        signalInfos.add(new SignalInfo("HiLvlMod1RestrcnRsn",2,0x156,false,false,151,4,1,0,"HL1 Level Mode Restriction Reason"));
        signalInfos.add(new SignalInfo("HiLvlMod2RestrcnRsn",2,0x156,false,false,147,4,1,0,"HL2 Level Mode Restriction Reason"));
        signalInfos.add(new SignalInfo("LoLvlMod1RestrcnRsn",2,0x156,false,false,159,4,1,0,"LL1 Level Mode Restriction Reason"));
        signalInfos.add(new SignalInfo("LoLvlMod2RestrcnRsn",2,0x156,false,false,155,4,1,0,"LL2 Level Mode Restriction Reason"));
        signalInfos.add(new SignalInfo("StdLvlSpdSwtVld",2,0x156,false,false,166,1,1,0,"Standard Level Speed depending Switch available to select or not  随速调节功能是否可用"));
        signalInfos.add(new SignalInfo("StdLvlSpdSwtSts",2,0x156,false,false,165,1,1,0,"Standard Level Speed depending Switch status\n随速调节功能开关状态"));
        signalInfos.add(new SignalInfo("LvlCtrlCalCompl",2,0x156,false,false,160,1,1,0,"Level control  HeightSensor  calibration completed"));
        signalInfos.add(new SignalInfo("SCUWarnSigGrpChks",2,0x156,false,false,191,8,1,0,""));
        signalInfos.add(new SignalInfo("SCUWarnSigGrpCntr",2,0x156,false,false,195,4,1,0,""));
        signalInfos.add(new SignalInfo("ASCFltSts",2,0x156,false,false,207,2,1,0,"Air spring control fault status"));
        signalInfos.add(new SignalInfo("CDCFltSts",2,0x156,false,false,205,2,1,0,"Continuous Daming control fault status"));
        signalInfos.add(new SignalInfo("ESPEnaReq",2,0x156,false,false,203,1,1,0,"ESC OFF NOT ALLOWED"));
        signalInfos.add(new SignalInfo("SCUExtmHeiSts",2,0x156,false,false,202,2,1,0,"SCU Extreme Height Status\nSCU 悬架极高极低状态"));
        signalInfos.add(new SignalInfo("SCULimSpdTqReq",2,0x156,false,false,215,1,1,0,"SCU 限速限扭请求\nSCU Limit Speed Torque Request"));
        signalInfos.add(new SignalInfo("SCUWarnLampReq",2,0x156,false,false,214,2,1,0,"SCU Warning Lamp Request\nSCU 故障灯请求"));
        signalInfos.add(new SignalInfo("SCUWarnMsgASC",2,0x156,false,false,212,3,1,0,"SCU Warning Message ASC\n空气悬架故障警示信号"));
        signalInfos.add(new SignalInfo("SCUWarnMsgCDC",2,0x156,false,false,209,2,1,0,"SCU Warning Message CDC\n电控减震器故障警示信号"));
        signalInfos.add(new SignalInfo("CurHeiSigGrpChks",2,0xb6,false,false,7,8,1,0,""));
        signalInfos.add(new SignalInfo("FrntLeCurHeiSts",2,0xb6,false,false,15,1,1,0,"Front Left Current Height status"));
        signalInfos.add(new SignalInfo("ReLeCurHeiSts",2,0xb6,false,false,14,1,1,0,"Rear Left Current Height status"));
        signalInfos.add(new SignalInfo("FrntRiCurHeiSts",2,0xb6,false,false,13,1,1,0,"Front Right Current Height status"));
        signalInfos.add(new SignalInfo("ReRiCurHeiSts",2,0xb6,false,false,12,1,1,0,"Rear Right Current Height status"));
        signalInfos.add(new SignalInfo("CurHeiSigGrpCntr",2,0xb6,false,false,11,4,1,0,""));
        signalInfos.add(new SignalInfo("FrntLeCurHei",2,0xb6,false,false,23,8,1,-127,"Front Left Current Height"));
        signalInfos.add(new SignalInfo("ReLeCurHei",2,0xb6,false,false,31,8,1,-127,"Rear Left Current Height"));
        signalInfos.add(new SignalInfo("FrntRiCurHei",2,0xb6,false,false,39,8,1,-127,"Front Right Current Height"));
        signalInfos.add(new SignalInfo("ReRiCurHei",2,0xb6,false,false,47,8,1,-127,"Rear Right Current Height"));
        signalInfos.add(new SignalInfo("SCUAccrSnsrChks",2,0xb6,false,false,71,8,1,0,""));
        signalInfos.add(new SignalInfo("SCUAccrSnsrCntr",2,0xb6,false,false,75,4,1,0,""));
        signalInfos.add(new SignalInfo("AccrSnsrAzFrntLe",2,0xb6,false,false,87,10,0.01,-1.6,"Front left sensor vertical acceleration"));
        signalInfos.add(new SignalInfo("AccrSnsrAzFrntRi",2,0xb6,false,false,103,10,0.01,-1.6,"Front right sensor vertical acceleration"));
        signalInfos.add(new SignalInfo("AccrSnsrAzRe",2,0xb6,false,false,119,10,0.01,-1.6,"Rear sensor vertical acceleration"));
        signalInfos.add(new SignalInfo("DamprCurFrntLe",2,0xb6,false,false,135,8,0.01,0.0,"Suspension damper current Front Left"));
        signalInfos.add(new SignalInfo("DamprCurFrntRi",2,0xb6,false,false,143,8,0.01,0.0,"Suspension damper current Front Right"));
        signalInfos.add(new SignalInfo("DamprCurReLe",2,0xb6,false,false,151,8,0.01,0.0,"Suspension damper current Rear Left"));
        signalInfos.add(new SignalInfo("DamprCurReqFL",2,0xb6,false,false,159,8,0.01,0.0,"Damper current request front left"));
        signalInfos.add(new SignalInfo("DamprCurReqFR",2,0xb6,false,false,167,8,0.01,0.0,"Damper current request front right"));
        signalInfos.add(new SignalInfo("BodyVertVFL",2,0xb6,false,false,175,13,0.001,-4.0,"Body vertical velocity front left corner\n左前车身垂向速度"));
        signalInfos.add(new SignalInfo("BodyVertVFR",2,0xb6,false,false,191,13,0.001,-4.0,"Body vertical velocity front right corner\n右前车身垂向速度"));
        signalInfos.add(new SignalInfo("BodyVertVRL",2,0xb6,false,false,207,13,0.001,-4.0,"Body vertical velocity rear left corner\n左后车身垂向速度"));
        signalInfos.add(new SignalInfo("BodyVertVRR",2,0xb6,false,false,223,13,0.001,-4.0,"Body vertical velocity rear right corner\n右后车身垂向速度"));
        signalInfos.add(new SignalInfo("DamprCurReqRL",2,0xb6,false,false,239,8,0.01,0.0,"Damper current request rear left"));
        signalInfos.add(new SignalInfo("DamprCurReqRR",2,0xb6,false,false,247,8,0.01,0.0,"Damper current request rear right"));
        signalInfos.add(new SignalInfo("DamprCurReRi",2,0xb6,false,false,255,8,0.01,0.0,"Suspension damper current Rear Right"));
        signalInfos.add(new SignalInfo("SWMFaultInfoFlag",2,0x1a3,false,false,7,1,1,0,"SWM Fault Information Flag"));
        signalInfos.add(new SignalInfo("SwtHiBeam",2,0x1a3,false,false,6,2,1,0,"组合开关远光灯请求命令"));
        signalInfos.add(new SignalInfo("ColShiftLvrDiagc",2,0x1a3,false,false,2,3,1,0,"组合开关档位有效性"));
        signalInfos.add(new SignalInfo("WiprPushSwt",2,0x1a3,false,false,9,2,1,0,"组合开关雨刮Push按键"));
        signalInfos.add(new SignalInfo("SwtIndcrRawSigGrpChks",2,0x1a3,false,false,31,8,1,0,""));
        signalInfos.add(new SignalInfo("SwtIndcrRawSigGrpCntr",2,0x1a3,false,false,35,4,1,0,""));
        signalInfos.add(new SignalInfo("SwtIndcrRaw",2,0x1a3,false,false,42,3,1,0,"组合开关转向灯请求命令"));
        signalInfos.add(new SignalInfo("GearShiftPosReqSigGrpChks",2,0x1a3,false,false,63,8,1,0,""));
        signalInfos.add(new SignalInfo("GearShiftPosReqSigGrpCntr",2,0x1a3,false,false,67,4,1,0,""));
        signalInfos.add(new SignalInfo("GearShiftPosReq",2,0x1a3,false,false,74,3,1,0,"组合开关怀挡拨杆位置"));
        signalInfos.add(new SignalInfo("DrvrGearShiftParkReqSigGrpChks",2,0x1a3,false,false,95,8,1,0,""));
        signalInfos.add(new SignalInfo("DrvrGearShiftParkReqSigGrpCntr",2,0x1a3,false,false,99,4,1,0,""));
        signalInfos.add(new SignalInfo("DrvrGearShiftParkReq",2,0x1a3,false,false,105,2,1,0,"组合开关P档Push请求"));
        signalInfos.add(new SignalInfo("TiDomn",2,0x107,false,false,4,5,1,0,"time domain"));
        signalInfos.add(new SignalInfo("DateTiYr",2,0x107,false,false,15,8,1.0,2000.0,"date time year"));
        signalInfos.add(new SignalInfo("DateTiMth",2,0x107,false,false,19,4,1.0,0.0,"date time month"));
        signalInfos.add(new SignalInfo("DateTiDay",2,0x107,false,false,28,5,1,0,"date time day"));
        signalInfos.add(new SignalInfo("DateTiHr",2,0x107,false,false,36,5,1.0,0.0,"date time hour"));
        signalInfos.add(new SignalInfo("DateTiMins",2,0x107,false,false,45,6,1.0,0.0,"date time minute"));
        signalInfos.add(new SignalInfo("DateTiSec",2,0x107,false,false,55,6,1.0,0.0,"date time second"));
        signalInfos.add(new SignalInfo("DateTiMilsec",2,0x107,false,false,49,10,1.0,0.0,"date time millisecond"));
        signalInfos.add(new SignalInfo("OTAMode",2,0x246,false,false,7,1,1,0,"OTA模式"));
        signalInfos.add(new SignalInfo("OTALinkMgr",2,0x2d0,false,false,1,1,1,0,"OTA服务唤醒与保持"));
        signalInfos.add(new SignalInfo("VehAvgSpd",2,0x2d0,false,false,0,9,1,0,"Vehicle average speed"));
        signalInfos.add(new SignalInfo("VehRunngTiAftRdy",2,0x2d0,false,false,23,16,1,0,"Vehicle running time after ready"));
        signalInfos.add(new SignalInfo("TripOdoAftRstVldVal",2,0x2d0,false,false,39,1,1,0,"DCD_Trip after reset valid value"));
        signalInfos.add(new SignalInfo("TripOdoAftRst",2,0x2d0,false,false,35,20,1,0,"Trip odometer after reset"));
        signalInfos.add(new SignalInfo("DCDReqHornOn",2,0x2d0,false,false,63,1,1,0,"DCD request horn on"));
        signalInfos.add(new SignalInfo("DCDDVRSrvReq",2,0x2d0,false,false,62,1,1,0,"DCD DVR Service Request"));
        signalInfos.add(new SignalInfo("DCDDMSFatgDetnSts",2,0x2d0,false,false,61,1,1,0,"DCD DMS fatigue Detection status\n疲劳检测开启状态"));
        signalInfos.add(new SignalInfo("DCDDMSdstrctnDetnSts",2,0x2d0,false,false,60,1,1,0,"DCD DMS distraction  Detection status\n分心检测开启状态"));
        signalInfos.add(new SignalInfo("DCDPrivacyModeStatus",2,0x2d0,false,false,57,2,1,0,"一键隐私模式状态"));
        signalInfos.add(new SignalInfo("DCDsentryModSts",2,0x2d0,false,false,71,3,1,0,"DCD sentry mode status"));
        signalInfos.add(new SignalInfo("DCDsentryModReq",2,0x2d0,false,false,67,1,1,0,"DCD sentry mode request"));
        signalInfos.add(new SignalInfo("DCDDMSSigGrpChks",2,0x2d0,false,false,95,8,1,0,""));
        signalInfos.add(new SignalInfo("DCDDMSSigGrpCntr",2,0x2d0,false,false,99,4,1,0,""));
        signalInfos.add(new SignalInfo("DCDDMSSysFltSts",2,0x2d0,false,false,109,1,1,0,"DMS system fault Status\nDMS系统故障信息"));
        signalInfos.add(new SignalInfo("DCDDMSfatgSts",2,0x2d0,false,false,108,2,1,0,"DCD DMS fatigue status\n疲劳程度"));
        signalInfos.add(new SignalInfo("DCDDMSdstrctnSts",2,0x2d0,false,false,106,2,1,0,"DCD DMS distraction status\n分心程度"));
        signalInfos.add(new SignalInfo("DCDDMSCameraFltSts",2,0x2d0,false,false,104,1,1,0,"DMS camera fault Status\nDMS摄像头故障信息"));
        signalInfos.add(new SignalInfo("SRMode",2,0x2d0,false,false,116,2,1,0,"SRMode\nSR状态"));
        signalInfos.add(new SignalInfo("DCDGameModSts",2,0x2d0,false,false,121,1,1,0,"DCD Game Mode Status"));
        signalInfos.add(new SignalInfo("DCDTSASLIFSwtSts",2,0x2d0,false,false,135,2,1,0,"TSA-SLIF speed warning type status"));
        signalInfos.add(new SignalInfo("DCDDMSDrvrOnSeatSts",2,0x2d0,false,false,133,2,1,0,"DCD DMS Driver On Seat Status"));
        signalInfos.add(new SignalInfo("DCDGameModSteerAsstPrmSts",2,0x341,false,false,7,3,1,0,"DCD Game mode steering assistance parameter Status游戏模式转向助力特性参数设置"));
        signalInfos.add(new SignalInfo("VehInsSpdDispVld",2,0x341,false,false,4,1,1,0,"Vehicle instantaneous speed display Valid"));
        signalInfos.add(new SignalInfo("DCDSysWrkgStsForPwrMod",2,0x341,false,false,3,1,1,0,"DCD System Working status For PowerMode"));
        signalInfos.add(new SignalInfo("DCDReqPwrMod2Awk",2,0x341,false,false,2,1,1,0,"DCD request PowerMode to Awake"));
        signalInfos.add(new SignalInfo("DCDReqKeepACC",2,0x341,false,false,1,1,1,0,"DCD request keep ACC"));
        signalInfos.add(new SignalInfo("DCDTSASlifSpdDisp",2,0x341,false,false,0,9,1,0,"TSA SLIF speed display"));
        signalInfos.add(new SignalInfo("DCDGamePwrAsstSteerReq",2,0x341,false,false,44,1,1,0,"DCD Game power-assisted steering Request"));
        signalInfos.add(new SignalInfo("VehInsSpdDisp",2,0x341,false,false,40,9,1,0,"Vehicle instantaneous speed display"));
        signalInfos.add(new SignalInfo("VehInsSpdDispIntnal",2,0x341,false,false,63,16,0.05625,0.0,"Vehicle instantaneous speed display for internal"));
        signalInfos.add(new SignalInfo("DstUnitDisp",2,0x341,false,false,84,1,1,0,"Unit of distance from DCD"));
        signalInfos.add(new SignalInfo("DCDAdCode",2,0x341,false,false,147,20,1,0,"Address Code of current city."));
        signalInfos.add(new SignalInfo("DCDCameraSpdLim",2,0x341,false,false,175,8,1,0,"Camera speed limit within 200m."));
        signalInfos.add(new SignalInfo("DCDRoadClass",2,0x341,false,false,181,4,1,0,"Current road class."));
        signalInfos.add(new SignalInfo("DCDNavSts",2,0x341,false,false,177,2,1,0,"Navigation status."));
        signalInfos.add(new SignalInfo("DCDRoadFacSpdLim",2,0x341,false,false,191,8,1,0,"Road facility speed limit."));
        signalInfos.add(new SignalInfo("DCDRoadType",2,0x341,false,false,197,6,1,0,"Type of current road. For detailed definition of signal value  please refer to Navigation SC."));
        signalInfos.add(new SignalInfo("DCDTrfcSts",2,0x341,false,false,203,4,1,0,"Traffice status of current road segment."));
        signalInfos.add(new SignalInfo("LrnStsSigGrpChks",2,0x341,false,false,223,8,1,0,""));
        signalInfos.add(new SignalInfo("LrnStsSigGrpCntr",2,0x341,false,false,227,4,1,0,""));
        signalInfos.add(new SignalInfo("ALCLrnSts",2,0x341,false,false,239,1,1,0,"ALC  learn status"));
        signalInfos.add(new SignalInfo("AVPLrnSts",2,0x341,false,false,237,1,1,0,"AVP learn status"));
        signalInfos.add(new SignalInfo("HPPLrnSts",2,0x341,false,false,236,1,1,0,"HPP  learn status"));
        signalInfos.add(new SignalInfo("NOACtyLrnSts",2,0x341,false,false,235,1,1,0,"NOA-City  learn status"));
        signalInfos.add(new SignalInfo("NOAHWLrnSts",2,0x341,false,false,234,1,1,0,"NOA-Highway learn status"));
        signalInfos.add(new SignalInfo("PltLrnSts",2,0x341,false,false,233,1,1,0,"Pilot  learn status"));
        signalInfos.add(new SignalInfo("DCDGstMod",2,0x345,false,false,13,2,1,0,"DCD Guest Mode"));
        signalInfos.add(new SignalInfo("DCDICVehCustExperImprvProgSts",2,0x345,false,false,11,2,1,0,"网联车系统服务用户改进计划开关状态\nDCDICVehCustExperImprvProgSts Intelligent Connected Vehicle Customer Experience Improvement Program Status"));
        signalInfos.add(new SignalInfo("DCDICVehSrvAuthntSts",2,0x345,false,false,9,2,1,0,"网联车系统服务授权状态\nIntelligent Connected Vehicle  Service Authorization status"));
        signalInfos.add(new SignalInfo("DCDCurProID",2,0x345,false,false,23,32,1.0,0.0,"DCD Current ProfileID\n用户当前使用习惯ID"));
        signalInfos.add(new SignalInfo("DCDAccountLogTyp",2,0x345,false,false,55,4,1,0,"DCD Account log type ,DCD 账号切换方式"));
        signalInfos.add(new SignalInfo("DCDCloudSysnc",2,0x345,false,false,51,1,1,0,"DCD Cloud Sysnc switch云同步开关状态"));
        signalInfos.add(new SignalInfo("DCDAcctMod",2,0x345,false,false,48,1,1,0,"DCD Account Mode\n账号模式"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos15",2,0x345,false,false,63,8,1,0,"DCD UserID Position Byte 15"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos14",2,0x345,false,false,71,8,1,0,"DCD UserID Position Byte 14"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos13",2,0x345,false,false,79,8,1,0,"DCD UserID Position Byte 13"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos12",2,0x345,false,false,87,8,1,0,"DCD UserID Position Byte 12"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos11",2,0x345,false,false,95,8,1,0,"DCD UserID Position Byte 11"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos10",2,0x345,false,false,103,8,1,0,"DCD UserID Position Byte 10"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos9",2,0x345,false,false,111,8,1,0,"DCD UserID Position Byte 9"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos8",2,0x345,false,false,119,8,1,0,"DCD UserID Position Byte 8"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos7",2,0x345,false,false,127,8,1,0,"DCD UserID Position Byte 7"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos6",2,0x345,false,false,135,8,1,0,"DCD UserID Position Byte 6"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos5",2,0x345,false,false,143,8,1,0,"DCD UserID Position Byte 5"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos4",2,0x345,false,false,151,8,1,0,"DCD UserID Position Byte 4"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos3",2,0x345,false,false,159,8,1,0,"DCD UserID Position Byte 3"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos2",2,0x345,false,false,167,8,1,0,"DCD UserID Position Byte 2"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos1",2,0x345,false,false,175,8,1,0,"DCD UserID Position Byte 1"));
        signalInfos.add(new SignalInfo("DCDUserIDBytePos0",2,0x345,false,false,183,8,1,0,"DCD UserID Position Byte 0"));
        signalInfos.add(new SignalInfo("DCDUserIDSigGrpFV",2,0x345,false,false,215,16,1,0,""));
        signalInfos.add(new SignalInfo("DCDUserIDSigGrpMAC",2,0x345,false,false,231,32,1,0,""));
        signalInfos.add(new SignalInfo("SetMgrAdsParkAudModSwt",2,0x364,false,false,47,3,1,0,"SetMgr Adas park audio mode switch"));
        signalInfos.add(new SignalInfo("SetMgrDrvrSeldDstLvl",2,0x364,false,false,44,3,1,0,"Setmgr driver select distance level"));
        signalInfos.add(new SignalInfo("SetMgrAdsAudModSwt",2,0x364,false,false,55,3,1,0,"SetMgr adas audio mode  switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsAVPSwtSts",2,0x364,false,false,52,3,1,0,"SetMgr adas AVP  switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsBSDLCASwt",2,0x364,false,false,63,3,1,0,"SetMgr adas BSDLCA  switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsDOWSwt",2,0x364,false,false,60,3,1,0,"SetMgr adas  DOW switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsFxdSpdModValSwt",2,0x364,false,false,71,7,1,0,"SetMgr adas  speed diviation level switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsHPPBckGrLear",2,0x364,false,false,79,3,1,0,"SetMgr adas  HPP back gear switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsHPPSwtSts",2,0x364,false,false,76,3,1,0,"SetMgr adas  HPP switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsLaneChgCnfmSwt",2,0x364,false,false,87,3,1,0,"SetMgr adas LaneChg confirm  switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsLDWPSwt",2,0x364,false,false,84,3,1,0,"SetMgr adas LDWP switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsLDWPWarnTypSwt",2,0x364,false,false,95,3,1,0,"SetMgr adas LDWP Warnning type switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsNOAHWSwtSts",2,0x364,false,false,92,3,1,0,"SetMgr adas  NOAHW switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsPcntgeSpdlvlSwt",2,0x364,false,false,103,6,1.0,0.0,"SetMgr adas  Pcntge speed level switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsPltSwtSts",2,0x364,false,false,111,3,1,0,"SetMgr adas Plt  switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsPntCldSwt",2,0x364,false,false,108,3,1,0,"SetMgr adas Pnt cloud  switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsRCTABSwt",2,0x364,false,false,119,3,1,0,"SetMgr adas  RCTAB switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsRCWSwt",2,0x364,false,false,116,3,1,0,"SetMgr adas RCW switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsACCInitSpdSwt",2,0x364,false,false,127,3,1,0,"SetMgr adas  ACC initial speed switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsAEBFCWSwt",2,0x364,false,false,124,3,1,0,"SetMgr adas AEB&FCW switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsALCSwtSts",2,0x364,false,false,135,3,1,0,"SetMgr adas  ALC switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsAPASwtSts",2,0x364,false,false,132,3,1,0,"SetMgr adas  APA switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsVehSpdDvtnModSwt",2,0x364,false,false,143,3,1,0,"SetMgr adas  vehicle speed diviation mode switch set"));
        signalInfos.add(new SignalInfo("SetMgrAdsELKSwSts",2,0x364,false,false,140,3,1,0,"ELK function Switch status of personalize system memory"));
        signalInfos.add(new SignalInfo("SetMgrAdsTLASwt",2,0x364,false,false,147,3,1,0,"The TLA  function switch status signal that Personalize setting system stored and transmitted  \n个性化设置系统存储并外发的TLA的功能开关状态信号"));
        signalInfos.add(new SignalInfo("SetMgrAdsModSwt",2,0x364,false,false,159,3,1,0,"SetMgr ADAS mode switch Status"));
        signalInfos.add(new SignalInfo("SetMgrAdsNOAOddSwt",2,0x364,false,false,156,3,1,0,"SetMgr ADAS - NOA odd switch Status"));
        signalInfos.add(new SignalInfo("SetMgrAdsTrfcLiCtrlSwt",2,0x364,false,false,167,3,1,0,"SetMgr ADAS Triffic Light Control Switch Status"));
        signalInfos.add(new SignalInfo("SetMgrAdsVehDetourSwt",2,0x364,false,false,164,3,1,0,"SetMgr ADAS Vehicle Detour Switch Status"));
        signalInfos.add(new SignalInfo("TotOdoAcrt",2,0x392,false,false,7,24,0.1,0.0,"ODO"));
        signalInfos.add(new SignalInfo("TotOdoAcrtLvlMVld",2,0x392,false,false,27,1,1,0,"Total odometer accurate for meter level valid\n米级精确总里程有效性"));
        signalInfos.add(new SignalInfo("TotOdoAcrtVld",2,0x392,false,false,25,1,1,0,"The valid signal of TotOdoAcrt"));
        signalInfos.add(new SignalInfo("XCDbkdHvBattStrtAllwd",2,0x392,false,false,24,1,1,0,"Arriving HV batter book heating time flag\n到达电池预热时间使能标志位"));
        signalInfos.add(new SignalInfo("TotOdoAcrtLvlM",2,0x392,false,false,39,32,1.0,0.0,"Total odometer accurate for meter level\n米级精确总里程\n其中，有效范围：0x0~0x?3B9AC9FF?，表示0~999,999,999"));
        signalInfos.add(new SignalInfo("DCDBattHlthMngtFcnSwt",2,0x3a3,false,false,7,2,1,0,"DCD Battery Health Management Function Switch"));
        signalInfos.add(new SignalInfo("AVHSet",2,0x3a3,false,false,5,2,1,0,"AVH function set\nAVH功能设定"));
        signalInfos.add(new SignalInfo("AVHBtn",2,0x3a3,false,false,0,1,1,0,"AVH Button\nAVH控制按键"));
        signalInfos.add(new SignalInfo("CSTOnOffSet",2,0x3a3,false,false,13,2,1,0,"CST function set\n舒适制动功能设定"));
        signalInfos.add(new SignalInfo("CSTOnOffBtn",2,0x3a3,false,false,8,1,1,0,"CST On Off Button\n舒适制动功能按键状态"));
        signalInfos.add(new SignalInfo("DCDStdLvlSpdSwt",2,0x3a3,false,false,22,2,1,0,"Standard Level Speed depending switch.\n悬架高度随速调节功能开关."));
        signalInfos.add(new SignalInfo("DCDEasyEntryHeiSet",2,0x3a3,false,false,20,3,1,0,"Suspension height set for EasyEntry mode.\n轻松进入悬架高度设置."));
        signalInfos.add(new SignalInfo("EPBSwtSet",2,0x3a3,false,false,17,2,1,0,"EPB Switch set"));
        signalInfos.add(new SignalInfo("DCDHDCSet",2,0x3a3,false,false,31,2,1,0,"HDC function set"));
        signalInfos.add(new SignalInfo("ESCOffSet",2,0x3a3,false,false,25,2,1,0,"Set ESC Off\nESC功能关闭设定"));
        signalInfos.add(new SignalInfo("EasyLoadgModSet",2,0x3a3,false,false,37,2,1,0,"Easy Loading Mode Set\n轻松载物模式设定"));
        signalInfos.add(new SignalInfo("EasyLoadgModReqBtn",2,0x3a3,false,false,32,1,1,0,"Easy Loading Mode Request Button\n轻松载物模式按键"));
        signalInfos.add(new SignalInfo("EasyEntryModSet",2,0x3a3,false,false,45,2,1,0,"Easy Entry Mode Set\n轻松进入模式设定"));
        signalInfos.add(new SignalInfo("EasyEntryModReqBtn",2,0x3a3,false,false,40,1,1,0,"Easy Entry Mode Request Button\n轻松进入模式按键"));
        signalInfos.add(new SignalInfo("EasyLoadgFuncCouplSet",2,0x3a3,false,false,49,2,1,0,"Easy Loading Function Coupling with back door set\n轻松载物与后背门功能联动设定"));
        signalInfos.add(new SignalInfo("DCDJackModSet",2,0x3a3,false,false,61,2,1,0,"Level Control deactivation  Jack mode  set. \n千斤顶模式设置."));
        signalInfos.add(new SignalInfo("SuspHeiSet",2,0x3a3,false,false,59,4,1,0,"Suspension Height Set\n悬架高度设定"));
        signalInfos.add(new SignalInfo("PltSwtSet",2,0x3a4,false,false,7,2,1,0,"PILOT功能开关\nPilot Switch set"));
        signalInfos.add(new SignalInfo("ADSVcCtrlSwtSet",2,0x3a4,false,false,5,2,1,0,"语音控制功能开关\nADS voice control switch set"));
        signalInfos.add(new SignalInfo("LidarCloudMode",2,0x3a4,false,false,3,3,1,0,"Lidar cloud mode feedback from SR"));
        signalInfos.add(new SignalInfo("DCDADSRCTABSwtSet",2,0x3a4,false,false,15,2,1,0,"RCTA and RCTB switch"));
        signalInfos.add(new SignalInfo("HwNOASwtSet",2,0x3a4,false,false,13,2,1,0,"高速NOA功能开关\nHighway NOA Switch set"));
        signalInfos.add(new SignalInfo("PltSwtALCSet",2,0x3a4,false,false,11,2,1,0,"转向灯变道功能开关\nPilot Switch ALC set"));
        signalInfos.add(new SignalInfo("DCDParkAudModSwtSet",2,0x3a4,false,false,9,2,1,0,"DCD Parking Audio Mode Switch Set"));
        signalInfos.add(new SignalInfo("DCDAutoVehCustExperImprvProgSwt",2,0x3a4,false,false,23,2,1,0,"智能驾驶用户体验改进计划开关 \nAutonomous Vehicle Customer Experience Improvement Program Switch"));
        signalInfos.add(new SignalInfo("DCDAutoVehSrvAuthntSwt",2,0x3a4,false,false,21,2,1,0,"智能驾驶服务授权  Autonomous Vehicle Service Authorization"));
        signalInfos.add(new SignalInfo("LdwLdpSwtSet",2,0x3a4,false,false,19,2,1,0,"车道偏离报警 车道偏离纠偏开关\nLDW And LDP Switch set"));
        signalInfos.add(new SignalInfo("NoaLcSwtSet",2,0x3a4,false,false,17,2,1.0,0.0,"变道确认功能开关\nNOA Lane Change Switch set"));
        signalInfos.add(new SignalInfo("ADSTLASwtSet",2,0x3a4,false,false,31,2,1,0,"ADS TLA Switch Set\n智驾红绿灯提醒开关"));
        signalInfos.add(new SignalInfo("DCDFxdSpdModValSwtSet",2,0x3a4,false,false,29,6,1,0,"固定车速偏差数值设置\nFixed speed mode value switch"));
        signalInfos.add(new SignalInfo("ADSBSDLCASwtSet",2,0x3a4,false,false,39,2,1,0,"盲区监测与换道辅助开关\nADS BSD LCA Switch Set"));
        signalInfos.add(new SignalInfo("ADSRCWSwtSet",2,0x3a4,false,false,37,2,1,0,"后方防撞辅助开关\nRCW Switch set"));
        signalInfos.add(new SignalInfo("ADSPMAEBSwtSet",2,0x3a4,false,false,35,2,1,0,"近距离防撞辅助开关设置\nParking And Maneuvering Automatic Emergency Brake switch Set"));
        signalInfos.add(new SignalInfo("ADSAESESSSwtSet",2,0x3a4,false,false,33,2,1,0,"自动紧急转向避障开关\nAES_ESS switch set"));
        signalInfos.add(new SignalInfo("AVPSwtSet",2,0x3a4,false,false,45,2,1,0,"无人代客泊车开关\nAVP Switch set"));
        signalInfos.add(new SignalInfo("HPPSwtSet",2,0x3a4,false,false,43,2,1,0,"记忆泊车开关\nHPP Switch set"));
        signalInfos.add(new SignalInfo("ADSDOWSwtSet",2,0x3a4,false,false,41,2,1,0,"开门预警开关\nDOW Switch set"));
        signalInfos.add(new SignalInfo("DCDAudModSwtSet",2,0x3a4,false,false,55,3,1,0,"ADS Audio Switch set"));
        signalInfos.add(new SignalInfo("DCDACCInitSpdSwtSet",2,0x3a4,false,false,51,2,1,0,"intelligent speed limit control  switch"));
        signalInfos.add(new SignalInfo("APASwtSet",2,0x3a4,false,false,49,2,1,0,"辅助泊车开关\nAPA Switch set"));
        signalInfos.add(new SignalInfo("DCDLdwLdpWarnTypSwtSet",2,0x3a4,false,false,63,2,1,0,"LDW And LDP warning type switch set\n车道辅助系统报警类型设置"));
        signalInfos.add(new SignalInfo("DCDHPPBckGrPathAutDoLoSet",2,0x3a4,false,false,61,2,1,0,"HPP path background auto download switch"));
        signalInfos.add(new SignalInfo("DCDHPPBckGrLearSwtSet",2,0x3a4,false,false,59,2,1,0,"HPP background learn switch"));
        signalInfos.add(new SignalInfo("DCDHPPLnVcReq",2,0x3a4,false,false,71,2,1,0,"HPP Learn Voice Control Request"));
        signalInfos.add(new SignalInfo("DCDTouchdSpdTyp",2,0x3a4,false,false,67,2,1,0,"DCD touched Speed Type"));
        signalInfos.add(new SignalInfo("DCDLVPwrSwtSet",2,0x3a4,false,false,65,2,1,0,"Low power mode switch"));
        signalInfos.add(new SignalInfo("DCDADSVcCtrlDstSet",2,0x3a4,false,false,77,2,1,0,"Voice Control Distance Set"));
        signalInfos.add(new SignalInfo("DCDADSVcCtrlSpdSet",2,0x3a4,false,false,75,2,1,0,"Voice Control Speed Set"));
        signalInfos.add(new SignalInfo("DCDAPAVcCtl",2,0x3a4,false,false,73,2,1,0,"APA  Voice Control"));
        signalInfos.add(new SignalInfo("VehSpdDvtionModSwtSet",2,0x3a4,false,false,87,2,1,0,"Vehicle speed divation mode switch"));
        signalInfos.add(new SignalInfo("DCDPntCldSwtSet",2,0x3a4,false,false,85,2,1,0,"Point cloud control  switch"));
        signalInfos.add(new SignalInfo("ScrnTouchdFuncChange",2,0x3a4,false,false,95,2,1,0,"Screen Touched driving function change"));
        signalInfos.add(new SignalInfo("ScrnTouchdLaneChange",2,0x3a4,false,false,93,2,1,0,"Screen Touched lane change"));
        signalInfos.add(new SignalInfo("ScrnTouchdSpdTyp",2,0x3a4,false,false,91,2,1,0,"Screen Touched Speed Type"));
        signalInfos.add(new SignalInfo("DCD2RDParkinChoseButton",2,0x3a4,false,false,103,2,1,0,"Driver Choose 2RD Parkin\n二次泊入请求"));
        signalInfos.add(new SignalInfo("DCDAPAButton",2,0x3a4,false,false,101,2,1,0,"Driver Choose Start or Stop APA\n用户选择开始泊车或暂停泊车"));
        signalInfos.add(new SignalInfo("DCDAPAParkOutDireSelect",2,0x3a4,false,false,111,4,1,0,"Driver Choose ParkOut Direction\n用户选择泊出方向"));
        signalInfos.add(new SignalInfo("DCDAPAPIPOReq",2,0x3a4,false,false,107,2,1,0,"Driver Choose APA Parkin Parkout\n用户选择泊车类型"));
        signalInfos.add(new SignalInfo("DCDAPAQuitReq",2,0x3a4,false,false,105,1,1,0,"Driver Choose Quit APA\n用户请求退出泊车"));
        signalInfos.add(new SignalInfo("DCDAPAParkSlotSelect",2,0x3a4,false,false,119,5,1,0,"Driver Choose Target Park Slot\n用户选择目标车位"));
        signalInfos.add(new SignalInfo("ADSAEBFCWSwtSet",2,0x3a4,false,false,114,3,1,0,"自动紧急制动开关\nAEB switch set"));
        signalInfos.add(new SignalInfo("DCDPcntgeSpdModValSwtSet",2,0x3a4,false,false,127,5,1,0,"百分比车速偏差数值设置\nPercentage speed mode value switch"));
        signalInfos.add(new SignalInfo("DCDHPPLrnReq",2,0x3a4,false,false,135,3,1,0,"HPP Learn Request\nHPP 学习请求"));
        signalInfos.add(new SignalInfo("ADSAPPOpenReq",2,0x3a4,false,false,132,2,1,0,"智驾中心点击请求"));
        signalInfos.add(new SignalInfo("DCDBackMapDfltParkSlotReq",2,0x3a4,false,false,130,1,1,0,"后台静默图使用默认车位泊车请求"));
        signalInfos.add(new SignalInfo("DCDHPPChoseSaveRoute",2,0x3a4,false,false,129,2,1,0,"路线保存 用户选择保存与否"));
        signalInfos.add(new SignalInfo("DCDHPPPrkReq",2,0x3a4,false,false,143,3,1,0,"HPP Parking Request\nHPP 开启请求"));
        signalInfos.add(new SignalInfo("DCDHPPParkAlTheWay",2,0x3a4,false,false,140,2,1,0,"沿途泊车请求"));
        signalInfos.add(new SignalInfo("DCDHPPParkingButton",2,0x3a4,false,false,138,2,1,0,"沿途泊入请求开始泊车"));
        signalInfos.add(new SignalInfo("ScrnTouchdSpd",2,0x3a4,false,false,136,9,1.0,0.0,"用户点击中控限速值或中控车速值调节的车速大小"));
        signalInfos.add(new SignalInfo("DCDAdsModSwtSet",2,0x3a4,false,false,159,2,1,0,"DCD Adas Mode Switch Set"));
        signalInfos.add(new SignalInfo("DCDAdsNOAOddSwtSet",2,0x3a4,false,false,157,2,1,0,"DCD Adas NOA ODD Switch Set"));
        signalInfos.add(new SignalInfo("DCDAdsTrfcLiCtrlSwtSet",2,0x3a4,false,false,155,2,1,0,"DCD Adas Traffic Light Control Switch Set"));
        signalInfos.add(new SignalInfo("DCDAdsVehDeturSwtSet",2,0x3a4,false,false,153,2,1,0,"DCD Adas Vehicle Detour Switch Set"));
        signalInfos.add(new SignalInfo("CogRawFromAddSoa",2,0x3d5,false,false,7,16,0.01,0.0,""));
        signalInfos.add(new SignalInfo("LongitudeRawFromNMEASoa",2,0x3d5,false,false,23,31,1e-07,0.0,""));
        signalInfos.add(new SignalInfo("LatitudeNSFromNMEASoa",2,0x3d5,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("DataVlidStsFromNMEASoa",2,0x3d5,false,false,55,8,1,0,""));
        signalInfos.add(new SignalInfo("LongitudeEWFromNMEASoa",2,0x3d5,false,false,63,1,1,0,""));
        signalInfos.add(new SignalInfo("VehCfgPrmBlkIDBytePosn1",2,0x87,false,false,7,8,1,0,"Block ID for specific Car Configuration parameter sequence"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn2",2,0x87,false,false,15,8,1,0,"1st position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn3",2,0x87,false,false,23,8,1,0,"2nd position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn4",2,0x87,false,false,31,8,1,0,"3rd position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn5",2,0x87,false,false,39,8,1,0,"4th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn6",2,0x87,false,false,47,8,1,0,"5th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn7",2,0x87,false,false,55,8,1,0,"6th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("VehCfgPrmCCPBytePosn8",2,0x87,false,false,63,8,1,0,"7th position in specific CCP number sequence   Block ID dependant"));
        signalInfos.add(new SignalInfo("TrOpenClsSts",2,0x1b9,false,false,7,2,1,0,"Trunk Open Close Status"));
        signalInfos.add(new SignalInfo("HoodOpenClsSts",2,0x1b9,false,false,5,2,1,0,"Hood Open Close Status\n前舱盖开启关闭状态"));
        signalInfos.add(new SignalInfo("LockgCenLockTrigSrc",2,0xd0,false,false,7,5,1,0,"中控锁触发源"));
        signalInfos.add(new SignalInfo("LockgDrvrDoorLockCmd",2,0xd0,false,false,2,2,1,0,"主驾门锁命令"));
        signalInfos.add(new SignalInfo("VCCDChassisCanfdNodeAddress",2,0x520,false,false,7,8,1,0,"Node source address"));
        signalInfos.add(new SignalInfo("VCCDChassisCanfdActiveWakeup",2,0x520,false,false,12,1,1,0,"Active Wakeup Bit"));
        signalInfos.add(new SignalInfo("VCCDChassisCanfdRepeatMsgReq",2,0x520,false,false,8,1,1,0,"Repeat Message Request Bit"));
        signalInfos.add(new SignalInfo("UDB23VCCD",2,0x520,false,false,23,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB22VCCD",2,0x520,false,false,22,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB21VCCD",2,0x520,false,false,21,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB20VCCD",2,0x520,false,false,20,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB19VCCD",2,0x520,false,false,19,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB18VCCD",2,0x520,false,false,18,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB17VCCD",2,0x520,false,false,17,1,1,0,""));
        signalInfos.add(new SignalInfo("VCCDChassisCanfdRepeatMsgSt",2,0x520,false,false,16,1,1,0,"Repeat Message State indication"));
        signalInfos.add(new SignalInfo("UDB31VCCD",2,0x520,false,false,31,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB30VCCD",2,0x520,false,false,30,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB29VCCD",2,0x520,false,false,29,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB28VCCD",2,0x520,false,false,28,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB27VCCD",2,0x520,false,false,27,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB26VCCD",2,0x520,false,false,26,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB25VCCD",2,0x520,false,false,25,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB24VCCD",2,0x520,false,false,24,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB39VCCD",2,0x520,false,false,39,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB38VCCD",2,0x520,false,false,38,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB37VCCD",2,0x520,false,false,37,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB36VCCD",2,0x520,false,false,36,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB35VCCD",2,0x520,false,false,35,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB34VCCD",2,0x520,false,false,34,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB33VCCD",2,0x520,false,false,33,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB32VCCD",2,0x520,false,false,32,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB47VCCD",2,0x520,false,false,47,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB46VCCD",2,0x520,false,false,46,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB45VCCD",2,0x520,false,false,45,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB44VCCD",2,0x520,false,false,44,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB43VCCD",2,0x520,false,false,43,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB42VCCD",2,0x520,false,false,42,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB41VCCD",2,0x520,false,false,41,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB40VCCD",2,0x520,false,false,40,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB53VCCD",2,0x520,false,false,53,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB52VCCD",2,0x520,false,false,52,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB51VCCD",2,0x520,false,false,51,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB50VCCD",2,0x520,false,false,50,1,1,0,""));
        signalInfos.add(new SignalInfo("UDB49VCCD",2,0x520,false,false,49,1,1,0,""));
        signalInfos.add(new SignalInfo("NMKeepAwkRsnVCCD",2,0x520,false,false,48,9,1,0,""));
        signalInfos.add(new SignalInfo("VCCDToBCPDiagReq",2,0x721,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("VCCDToBCSDiagReq",2,0x722,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("VCCDToChassisFuncDiagReq",2,0x7ff,false,false,7,64,1,0,"VCCDToChassisFuncDiagReqNpdu"));
        signalInfos.add(new SignalInfo("VCCDToEPSChassisDiagReq",2,0x723,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("VCCDToLRRDiagReq",2,0x7d2,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("VCCDToRLSRDiagReq",2,0x7d5,false,false,7,512,1,0,""));
        signalInfos.add(new SignalInfo("VCCDToRRSRDiagReq",2,0x7d6,false,false,7,512,1,0,""));
        for(SignalInfo signalInfo:signalInfos)
        {
            MyApplication.getInstance().getMx11E4Database().signalInfoDao().insert(signalInfo);
        }
    }

    public static void initData_2_msg()
    {
        List<MsgInfoEntity> msgInfos = new ArrayList<>();
        msgInfos.add(new MsgInfoEntity("ACU_ChassisCANFD_0x1A9",2,0x1a9,"cyclic",20,"","ChassisCANFD","XCD","BCS,LRR,EPS,BCP,RRSR,RLSR,ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ACU_ChassisCANFD_0x1AA",2,0x1aa,"cyclic",20,"","ChassisCANFD","XCD","BCS,LRR,EPS,RRSR,RLSR,ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ACU_ChassisCANFD_0x350",2,0x350,"cyclic",200,"","ChassisCANFD","XCD","BCS,LRR,RRSR,BCP,RLSR,ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ACU_ChassisCANFD_0x351",2,0x351,"cyclicAndSpontaneous",200,"","ChassisCANFD","XCD","ADD,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ADD_ChassisCANFD_0x155",2,0x155,"cyclic",20,"","ChassisCANFD","ADD","XCD,FZCU,BCS,EPS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ADD_ChassisCANFD_0x1E3",2,0x1e3,"cyclic",50,"","ChassisCANFD","ADD","FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ADD_ChassisCANFD_0x301",2,0x301,"cyclic",100,"","ChassisCANFD","ADD","XCD,FZCU,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ADD_ChassisCANFD_0x83",2,0x83,"cyclic",500,"","ChassisCANFD","ADD","LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ADD_ChassisCANFD_0xB1",2,0xb1,"cyclic",10,"","ChassisCANFD","ADD","BCS,EPS,BCP,XCD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ADD_ChassisCANFD_0xED",2,0xed,"cyclic",50,"","ChassisCANFD","ADD","XCD,FZCU,VECU,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("ADDChassisCanfdNMFrA",2,0x531,"spontaneous",0,"","ChassisCANFD","ADD","","CAN",1));
        msgInfos.add(new MsgInfoEntity("ADDChassisCanfdNMFrB",2,0x52d,"spontaneous",0,"","ChassisCANFD","ADD","VECU","CAN",1));
        msgInfos.add(new MsgInfoEntity("BCP_ChassisCANFD_0x150",2,0x150,"cyclic",20,"","ChassisCANFD","BCP","BCS,LRR,EPS,RRSR,RLSR,ADD,XCD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCP_ChassisCANFD_0x166",2,0x166,"cyclic",20,"","ChassisCANFD","BCP","BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCP_ChassisCANFD_0x1E9",2,0x1e9,"cyclic",50,"","ChassisCANFD","BCP","FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCP_ChassisCANFD_0x2BF",2,0x2bf,"cyclic",100,"","ChassisCANFD","BCP","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCP_ChassisCANFD_0xB2",2,0xb2,"cyclic",10,"","ChassisCANFD","BCP","FZCU,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCPChassisCanfdNMFr",2,0x525,"spontaneous",0,"","ChassisCANFD","BCP","","CAN",1));
        msgInfos.add(new MsgInfoEntity("BCPToXCDChassisDiagRespFr",2,0x621,"spontaneous",0,"","ChassisCANFD","BCP","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCS_ChassisCANFD_0x151",2,0x151,"cyclic",20,"","ChassisCANFD","BCS","LRR,EPS,BCP,RRSR,RLSR,ADD,XCD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCS_ChassisCANFD_0x152",2,0x152,"cyclic",10,"","ChassisCANFD","BCS","ADD,XCD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCS_ChassisCANFD_0x160",2,0x160,"cyclic",20,"","ChassisCANFD","BCS","XCD,FZCU,BCP","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCS_ChassisCANFD_0x1E8",2,0x1e8,"cyclic",50,"","ChassisCANFD","BCS","FZCU,EPS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCS_ChassisCANFD_0x2CE",2,0x2ce,"cyclic",100,"","ChassisCANFD","BCS","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCS_ChassisCANFD_0xB3",2,0xb3,"cyclic",10,"","ChassisCANFD","BCS","LRR,EPS,XCD,BCP,RRSR,RLSR,ADD,ARS,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCS_ChassisCANFD_0xE1",2,0xe1,"cyclic",10,"","ChassisCANFD","BCS","XCD,BCP","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BCSChassisCanfdNMFr",2,0x522,"spontaneous",0,"","ChassisCANFD","BCS","","CAN",1));
        msgInfos.add(new MsgInfoEntity("BCSToXCDChassisDiagRespFr",2,0x622,"spontaneous",0,"","ChassisCANFD","BCS","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BLEM_ChassisCANFD_0x2F6",2,0x2f6,"cyclic",100,"","ChassisCANFD","XCD","ADD,LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("BMDM_ChassisCANFD_0x243",2,0x243,"cyclic",50,"","ChassisCANFD","XCD","BCS,LRR,EPS,BCP,RRSR,RLSR,ADD,ARS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("EPS_ChassisCANFD_0x161",2,0x161,"cyclic",20,"","ChassisCANFD","EPS","BCS,LRR,RRSR,RLSR,ADD,XCD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("EPS_ChassisCANFD_0x1E0",2,0x1e0,"cyclic",50,"","ChassisCANFD","EPS","XCD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("EPS_ChassisCANFD_0x29C",2,0x29c,"cyclic",20,"","ChassisCANFD","EPS","ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("EPS_ChassisCANFD_0x2CD",2,0x2cd,"cyclic",100,"","ChassisCANFD","EPS","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("EPS_ChassisCANFD_0x3E0",2,0x3e0,"cyclic",1000,"","ChassisCANFD","EPS","ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("EPS_ChassisCANFD_0xB5",2,0xb5,"cyclic",10,"","ChassisCANFD","EPS","BCS,LRR,RRSR,RLSR,ADD,XCD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("EPSChassisCanfdNMFr",2,0x529,"spontaneous",0,"","ChassisCANFD","EPS","","CAN",1));
        msgInfos.add(new MsgInfoEntity("EPSToXCDChassisDiagRespFr",2,0x623,"spontaneous",0,"","ChassisCANFD","EPS","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FEDS_ChassisCANFD_0x73",2,0x73,"cyclic",10,"","ChassisCANFD","XCD","EPS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x157",2,0x157,"cyclic",20,"","ChassisCANFD","FZCU","ADD,XCD,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x172",2,0x172,"cyclic",20,"","ChassisCANFD","FZCU","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x1E1",2,0x1e1,"cyclic",50,"","ChassisCANFD","FZCU","BCS,EPS,RRSR,RLSR,ADD,XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x202",2,0x202,"cyclic",50,"","ChassisCANFD","FZCU","LRR,RRSR,RLSR,ADD,XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x223",2,0x223,"cyclic",50,"","ChassisCANFD","FZCU","ADD,XCD,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x2D4",2,0x2d4,"cyclic",100,"","ChassisCANFD","FZCU","BCS,LRR,RRSR,BCP,RLSR,ADD,XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x5C6",2,0x5c6,"spontaneous",0,"","ChassisCANFD","FZCU","XCD,VECU,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x5C7",2,0x5c7,"spontaneous",0,"","ChassisCANFD","FZCU","XCD,VECU,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0x90",2,0x90,"cyclic",10,"","ChassisCANFD","FZCU","BCS,LRR,EPS,BCP,RRSR,RLSR,ADD,ARS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0xC3",2,0xc3,"cyclic",10,"","ChassisCANFD","FZCU","BCS,LRR,RRSR,RLSR,ADD,XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0xC6",2,0xc6,"cyclic",10,"","ChassisCANFD","FZCU","BCS,LRR,EPS,RRSR,BCP,RLSR,ADD,XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0xC7",2,0xc7,"cyclic",10,"","ChassisCANFD","FZCU","EPS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCU_ChassisCANFD_0xE3",2,0xe3,"cyclic",10,"","ChassisCANFD","FZCU","BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("FZCUChassisNMFra",2,0x524,"spontaneous",0,"","ChassisCANFD","FZCU","","CAN",1));
        msgInfos.add(new MsgInfoEntity("LRR_ChassisCANFD_0x18C",2,0x18c,"cyclic",50,"","ChassisCANFD","LRR","ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("LRR_ChassisCANFD_0x2BE",2,0x2be,"cyclic",100,"","ChassisCANFD","LRR","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("LRRChassisCanfdNMFr",2,0x572,"spontaneous",0,"","ChassisCANFD","LRR","","CAN",1));
        msgInfos.add(new MsgInfoEntity("LRRToXCDAdasDiagRespFr",2,0x6d2,"spontaneous",0,"","ChassisCANFD","LRR","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("LZCU_ChassisCANFD_0x1B2",2,0x1b2,"cyclic",20,"","ChassisCANFD","XCD","BCS,LRR,RRSR,BCP,RLSR,ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RLSR_ChassisCANFD_0x170",2,0x170,"cyclic",20,"","ChassisCANFD","RLSR","ADD,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RLSR_ChassisCANFD_0x187",2,0x187,"cyclic",100,"","ChassisCANFD","RLSR","ADD,XCD,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RLSR_ChassisCANFD_0x2BD",2,0x2bd,"cyclic",50,"","ChassisCANFD","RLSR","ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RLSRChassisCanfdNMFr",2,0x575,"spontaneous",0,"","ChassisCANFD","RLSR","","CAN",1));
        msgInfos.add(new MsgInfoEntity("RLSRToXCDAdasDiagRespFr",2,0x6d5,"spontaneous",0,"","ChassisCANFD","RLSR","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RRSR_ChassisCANFD_0x17F",2,0x17f,"cyclic",20,"","ChassisCANFD","RRSR","ADD,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RRSR_ChassisCANFD_0x188",2,0x188,"cyclic",100,"","ChassisCANFD","RRSR","ADD,XCD,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RRSR_ChassisCANFD_0x20B",2,0x20b,"cyclic",50,"","ChassisCANFD","RRSR","ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RRSRChassisCanfdNMFr",2,0x576,"spontaneous",0,"","ChassisCANFD","RRSR","","CAN",1));
        msgInfos.add(new MsgInfoEntity("RRSRToXCDAdasDiagRespFr",2,0x6d6,"spontaneous",0,"","ChassisCANFD","RRSR","XCD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("RZCU_ChassisCANFD_0x25A",2,0x25a,"cyclic",50,"","ChassisCANFD","XCD","ADD,LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("SCU_ChassisCANFD_0x156",2,0x156,"cyclic",20,"","ChassisCANFD","XCD","LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("SCU_ChassisCANFD_0xB6",2,0xb6,"cyclic",10,"","ChassisCANFD","XCD","ADD,LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("SWM_ChassisCANFD_0x1A3",2,0x1a3,"cyclic",20,"","ChassisCANFD","XCD","ADD,LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("VECUChaNMFra",2,0x507,"spontaneous",0,"","ChassisCANFD","VECU","","CAN",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x107",2,0x107,"cyclic",100,"","ChassisCANFD","XCD","BCS,LRR,EPS,BCP,RRSR,RLSR,ADD,ARS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x246",2,0x246,"cyclic",50,"","ChassisCANFD","XCD","ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x2D0",2,0x2d0,"cyclic",100,"","ChassisCANFD","XCD","ADD,FZCU,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x341",2,0x341,"cyclic",200,"","ChassisCANFD","XCD","LRR,EPS,RRSR,RLSR,ADD,FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x345",2,0x345,"cyclic",200,"","ChassisCANFD","XCD","ADD,FZCU,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x364",2,0x364,"cyclic",100,"","ChassisCANFD","XCD","ADD,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x392",2,0x392,"cyclic",500,"","ChassisCANFD","XCD","BCS,LRR,EPS,BCP,RRSR,RLSR,ADD,ARS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x3A3",2,0x3a3,"cyclicAndSpontaneous",1000,"","ChassisCANFD","XCD","FZCU,BCP,VECU,BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x3A4",2,0x3a4,"cyclicAndSpontaneous",1000,"","ChassisCANFD","XCD","ADD,LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x3D5",2,0x3d5,"cyclic",1000,"","ChassisCANFD","XCD","FZCU","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_0x87",2,0x87,"spontaneous",0,"","ChassisCANFD","XCD","BCS,LRR,EPS,BCP,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_RT_0x1B9",2,0x1b9,"cyclic",20,"","ChassisCANFD","XCD","LRR,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCD_ChassisCANFD_RT_0xD0",2,0xd0,"cyclic",10,"","ChassisCANFD","XCD","ADD","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCDChassisCanfdNMFr",2,0x520,"spontaneous",0,"","ChassisCANFD","XCD","BCS,LRR,EPS,BCP,RRSR,VECU,RLSR,ADD,FZCU","CAN",1));
        msgInfos.add(new MsgInfoEntity("XCDToBCPChassisDiagReqFr",2,0x721,"spontaneous",0,"","ChassisCANFD","XCD","BCP","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCDToBCSChassisDiagReqFr",2,0x722,"spontaneous",0,"","ChassisCANFD","XCD","BCS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCDToChassisFuncDiagReqFr",2,0x7ff,"spontaneous",0,"","ChassisCANFD","XCD","BCS,LRR,EPS,BCP,RRSR,RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCDToEPSChassisDiagReqFr",2,0x723,"spontaneous",0,"","ChassisCANFD","XCD","EPS","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCDToLRRChassisDiagReqFr",2,0x7d2,"spontaneous",0,"","ChassisCANFD","XCD","LRR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCDToRLSRChassisDiagReqFr",2,0x7d5,"spontaneous",0,"","ChassisCANFD","XCD","RLSR","CANFD",1));
        msgInfos.add(new MsgInfoEntity("XCDToRRSRChassisDiagReqFr",2,0x7d6,"spontaneous",0,"","ChassisCANFD","XCD","RRSR","CANFD",1));
        for(MsgInfoEntity msgInfo:msgInfos)
        {
            MyApplication.getInstance().getMx11E4Database().msgInfoDao().insert(msgInfo);
        }
    }


    public static void init_database()
    {
        /**********************************************************************************************/
        // 初始化 车型数据库
        List<CarTypeEntity> carTypeEntities = new ArrayList<>();
        carTypeEntities.add(new CarTypeEntity("MX11"));
        carTypeEntities.forEach(carTypeEntity -> {
            MyApplication.getInstance().getMx11E4Database().carTypeDao().insert(carTypeEntity);
        });
        /**********************************************************************************************/
        // 初始化 sdb版本
        List<SdbEntity> sdbEntities = new ArrayList<>();
        // 查找MX11 对应的项目
        CarTypeEntity carType = MyApplication.getInstance().getMx11E4Database().carTypeDao().getByName("MX11");

        sdbEntities.add(new SdbEntity("E4U1",carType.id));
        sdbEntities.forEach(sdbEntity -> {
            MyApplication.getInstance().getMx11E4Database().sdbDao().insert(sdbEntity);
        });
        /**********************************************************************************************/

    }



}
